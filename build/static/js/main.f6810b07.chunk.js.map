{"version":3,"sources":["serviceWorker.js","router/constants.js","services/rest_end_points.js","services/queries/index.js","redux/actions/index.js","redux/constants.js","components/Skeletons/index.js","router/protected_routes.js","components/inputfield/index.js","notify.js","layouts/sigin_signup/login/login.js","utils/constant_data.js","layouts/sigin_signup/register/register.js","layouts/sigin_signup/forgot_password/forgot_password.js","layouts/settings/index.js","shared/customs/CustomTable/index.js","utils/functions.js","components/button/index.js","components/loading/index.js","components/icon-button/index.js","layouts/search/doctors/index.js","layouts/profile/profile.js","layouts/home/home.js","layouts/accounts/payments/index.js","components/container/index.js","components/header/index.js","components/footer/index.js","components/left_sidebar/menu-list.js","redux/reducers/reducer_settings.js","redux/reducers/index.js","redux/reducers/reducer_notify.js","redux/reducers/reducer_sidebar_controls.js","redux/reducers/reducer_active_user.js","redux/reducers/reducer_active_page.js","redux/reducers/reducer_todays_patients.js","redux/reducers/reducer_doctors.js","redux/reducers/reducer_procedure_list.js","redux/store.js","components/left_sidebar/index.js","components/page_header/index.js","layouts/reception/procedures/create-procedure.js","layouts/reception/procedures/create-procedure-list.js","layouts/reception/todays_patient/todays_patient_row_loading.js","layouts/reception/procedures/index.js","layouts/reception/todays_patient/procedures/procedure_item.js","layouts/reception/todays_patient/procedures/procedure_loading.js","layouts/reception/todays_patient/procedures/procedure_modal.js","layouts/reception/todays_patient/invoice/invoice.js","layouts/reception/todays_patient/appointment/update_appointment_modal.js","layouts/reception/todays_patient/todays_patient_row.js","shared/customs/user/user.js","shared/modals/userpreviewmodal.js","shared/modals/newusermodal.js","layouts/reception/todays_patient/appointment/new_appointment_modal.js","layouts/reception/todays_patient/consultancy/index.js","layouts/reception/todays_patient/todays_patient.js","shared/customs/tablerows/tablerow.js","layouts/reception/all-appointments/index.js","router/index.js","App.js","index.js","resources/images/LOGO.png","resources/images/placeholder.jpg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BASE_URL","LOGIN_URL","REGISTER_URL","PROFILE","RECEPTION_TODAYSPATIIENT","RECEPTION_VISITS","RECEPTION_PROCEDURES","FORGOT_PASSWORD","SEARCH_DOCTORS","PAYMENTS","SETTINGS","ROOT_URL","SOCKET_URL","USERS_BASE_URL","USERS_LOGIN","USERS_CREATE","USERS_UPDATE","USERS_LOGOUT","USERS_SEARCH_BY_ID","USERS_SEARCH_BY_TOKEN","USERS_SEARCH_BY_CREDENTIALS","ADMIN_BASE_URL","ADMIN_CREATE_PATIENT","ADMIN_CREATE_DOCTOR","ADMIN_UPDATE_DOCTOR","ADMIN_DELETE_DOCTOR","APPOINTMENTS_BASE_URL","APPOINTMENTS_CREATE","APPOINTMENTS_UPDATE","APPOINTMENTS_SEARCH","APPOINTMENTS_SEARCH_BY_ID","APPOINTMENTS_SEARCH_TODAY","APPOINTMENTS_CHARGES","APPOINTMENTS_CHARGES_UPDATE","APPOINTMENTS_INVOICE","APPOINTMENTS_CHECKOUT","PROCEDURES_BASE_URL","PROCEDURES_CREATE","PROCEDURES_UPDATE","PROCEDURES_DELETE","PROCEDURES_SEARCH","PROCEDURES_SEARCH_BY_APPOINTMENT_ID","PROCEDURES_LIST_BASE_URL","PROCEDURES_LIST_CREATE","DOCTORDETAILS_BASE_URL","BRANCHES_BASE_URL","PAYMENTS_BASE_URL","PAYMENTS_CREATE","BASE_USERS_URL","REGISTER_USER_REQUEST","LOGOUT_USER_REQUEST","PROFILE_USER_REQUEST","BASE_RECEPTION_URL","SEARCH_APPOINTMENTS_URL","SEARCH_APPOINTMENT_BY_ID","GET_APPOINTMENT_CHARGES","BASE_PROCEDURES_URL","BASE_PROFITS_URL","BASE_DOCTORDETAILS__URL","PostRequest","url","data","Axios","post","GetRequest","get","UserSearchById","id","rep","user_id","LogoutRequest","token","localStorage","getItem","GetAllDoctors","s","AppointmentsSearchToday","date","type","Date","getTime","getTimezoneOffset","toISOString","AppointmentCheckout","appointment_id","AppointmentCharges","AppointmentUpdateCharges","payload","put","AppointmentSearchById","ProcedureSearchByAppointmentId","ProcedureCreate","ProcedureUpdate","ProcedureSearch","doctor_id","GetProceduresList","search_query","left_sidebar_controls","status","set_active_user","details","set_active_page","load_todays_appointments","dispatch","res","loading","err","message","clear_todays_appointments","update_appointment","new_item","toggle_sidebar_menu_collapse","fetch_doctors","a","response","fetch_procedures_list","interceptors","request","use","user","Skeletons","props","className","color","highlightColor","circle","height","width","count","ProtectedRoutes","authorize_token","_","isEmpty","active_user","clear","setItem","path","check_for_token","this","Component","component","__html","render","to","connect","Inputfield","received_props","_field_type","field_type","input_field_type","text_area_field_type","rows","cols","select_field_type","date_time_field_type","inputProps","placeholder","render_field","custom_field","parent_classes","inner_classes","heading","required","helper","Notify","title","options","position","toast","POSITION","TOP_RIGHT","pauseOnFocusLoss","success","warn","info","Login","on_text_field_change","e","target","setState","email","value","password","remember_me_option","checked","__check_hard_constraints","notify","on_submit","preventDefault","loading_status","LoginRequest","username","trim","remember_me","history","push","substring","removeItem","view","timeout","username_password","input_type","onChange","remember_me_reset_password","name","defaultChecked","method","onSubmit","style","textTransform","onClick","withRouter","BLOOD_GROUPS_OPTIONS","label","GENDER_OPTIONS","ROLES_OPTIONS","PATIENT_VISIT_STATUSES","CITIES","COUTRIES","Register","first_name","last_name","length","cnic","phone_number","verify_password","address","on_date_of_birth_change","dob","configured_date","format","on_selected_changed","blood_group","gender","role","check_input","input","only_alpha","only_numbers","alphabets","numbers","check_hard_constraints","include","length_check","val","includes","current_page","next_button_click","back_button_click","role_select_modal_visibility","loader","to_render_page","name_and_email_and_phone","label_tag","icon_class","on_text_change_listener","default_value","password_and_verification","date_of_birth_and_cnic_address","date_format","time_format","role_gender_and_blood_group","classNamePrefix","components","makeAnimated","action","display","useState","set_email","set_error","on_change","defaultValue","Settings","menu_style_change","settings","left_sidebar_collapsed","customReducer","column","reverse","direction","sortBy","Error","CustomTable","isInitialMount","useRef","React","useReducer","useEffect","current","parse_item","item","isNaN","getDate","moment","Table","sortable","stackable","celled","textAlign","size","collapsing","Header","Row","Object","keys","headCells","map","i","HeaderCell","key","sorted","Body","Cell","colSpan","cell","k","Ucfirst","string","charAt","toUpperCase","slice","get_utc_date","input_date","now_utc","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","convert_object_array_to_string","array","key_to_select","toString","Button","fuklWidth","icon","children","Loading","custom","IconButton","btn_type","variant","numeric","disablePadding","SearchDoctors","on_edit_doctor","doctor","mode","toUpdateDoctorId","_id","addNewModalVisibility","user_first_name","user_last_name","user_phone_number","user_dob","date_of_birth","user_cnic","user_email","user_country","country","user_city","city","user_address","user_gender","user_blood_group","user_role","user_consultancy_fee","consultancy_fee","user_consultancy_percentage","consultancy_percentage","user_is_active","is_active","user_specialities","specialities","user_degrees","degrees","user_schedule","schedule","on_delete_doctor","confirmAlert","buttons","delete","reset_state","load_doctors","query","_doctors","counts","total","active","deactive","temp","actions","actor","on_user_date_of_birth_change","on_checkbox_change","delete_item","index","splice","toggle_modal","identity","add_item","description","addNewSpecialityModalVisibility","addNewDegreeModalVisibility","addNewScheduleModalVisibility","speciality_description","degree_description","admin_id","doctor_details","addNewDoctorModalLoading","delete_doctor","routes","visible","dialogClassName","onClickBackdrop","disabled","pattern","maxlength","isClearable","menuPlacement","isDisabled","styles","container","base","backgroundColor","padding","borderRadius","active_page","Profile","request_update","UserUpdate","on_click_update","register_date","on_text_changed","previous_payload","src","NO_PICTURE","alt","menuPosition","dateFormat","timeFormat","closeOnSelect","Home","order_data","patients_per_day_raw_data","patients_per_day","current_patient","month","day","year","numenator","patient_attended","denomenator","patient_left","doctors","total_attended","total_patients_attended","total_appointments","total_patients_appointments_registered","checkout_percentage","Math","ceil","current_date_time","sort","compare_dates","socket","socketIOClient","rc","on","b","disconnect","option_patients_attended_percentage","tooltip","formatter","series","detail","option_patients_attended_history","trigger","pt","xAxis","boundaryGap","yAxis","dataZoom","start","end","handleIcon","handleSize","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","symbol","itemStyle","areaStyle","echarts","LinearGradient","offset","option_procedures","legend","orient","left","radius","avoidLabelOverlap","normal","show","emphasis","textStyle","fontSize","fontWeight","labelLine","option","axisPointer","grid","right","bottom","containLabel","Payments","onCheckoutToggle","checkoutModalVisibility","selected_doctor_appointments","rawData","filter","doc","doctor_name","featuredData","appointment_count","parseInt","indexOf","total_consultancy_fee","total_procedures_fee","procedures_fee","total_amount","consultancy_share","c_doctor_share","procedures_share","p_doctor_share","balance","appointments","procedures","currentCheckout","that","records","counter","element","_procedures","Number","appointment_charges","consultancy","follow_up","discount","total_c_doctor_share","reduce","total_p_dr_share","a_count","c_hospital_share","p_hospital_share","_doctor","payments_balance","is_paid_to_doctor","loadData","app_date","interval","setInterval","queryInterval","showDoctor","onConfirmCheckout","modalLoading","undefined","branch_id","paid_amount","paid_text_input","appointments_ids","searchDate","userPreviewModalVisibility","showAppointments","clearInterval","Collapse","isOpen","appointment_date","time","todays_patient","useStyles","makeStyles","theme","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","flexGrow","backdrop","left_sidebar","classes","useTheme","open","setOpen","setLoading","logoutLoading","setLogoutLoading","authenticated","setAuthenticated","anchorEl","setAnchorEl","openMenu","handleMenuClose","onLogoutClick","UsersSearchByToken","pathname","setTimeout","container_type","CssBaseline","AppBar","clsx","Toolbar","aria-label","edge","Typography","noWrap","aria-controls","aria-haspopup","event","currentTarget","AccountCircleRounded","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","PersonRounded","Divider","Drawer","paper","ChevronRight","ChevronLeft","Backdrop","CircularProgress","on_sidebar_control_button_click","on_logout_button_click","on_click_drop_down","showDropDown","on_click_collapse_menu","collapseMenu","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","document","addEventListener","removeEventListener","x-placement","willChange","top","transform","alert","nested_items_icon","ArrowRightRounded","LIST","Dashboard","nested","HomeRounded","RC","Search","SearchRounded","Reception","ImportContactsRounded","Accounts","AccountBalanceRounded","SettingsRounded","INITIAL_SETTINGS","root_reducer","combineReducers","new_state","cloneDeep","proceduresList","store","createStore","reducers","composeWithDevTools","applyMiddleware","promise","thunk","list","setList","first_name_first_letter","first_name_rest","last_name_first_letter","last_name_rest","avatar_size","Avatar","List","elem","ListItem","button","selected","Link","routes_list","onItemClick","ListItemIcon","ListItemText","primary","primaryTypographyProps","ExpandLess","ExpandMore","in","unmountOnExit","nitem","ni","getState","Page_header","headers","data-toggle","NOPICTURE","CreateProcedure","populate_doctors","temp_users","t_user","populate_procedures_list","procedures_list","t","department","onCreateProcedure","operate_time","date_input","time_input","patient_id","patient_input","doctor_input","procedure_list_id","procedure_type_input","reference","reference_input","fee","fee_input","discount_input","dr_share","dr_share_input","comments_input","paid_amount_input","time_stamp","operate","report","_res","handleClose","onTextChange","onSelectChange","respective_item","find","operation_charges","populate_patients","str","clearTimeout","search_patient_trigger_timmer","pateints_options_loading","users","mrn","patients","procedureDateInputChange","new_props","procedure_type","procedures_list_id","patient","visibility","isLoading","noOptionsMessage","onInputChange","Popup","flowing","min","max","new_time","formatted12","coarseMinutes","forceCoarseMinutes","switchToMinuteOnHourSelect","CreateProcedureList","onDoctorsSelectChange","operation_doctors_input","onCreateProcedureList","name_input","department_input","description_input","operation_alternative","operation_alternative_input","operation_charges_input","operation_doctors","operation_efficacy","operation_efficacy_input","operation_risk","operation_risk_input","operation_time","operation_time_input","CreateNewProcedureItem","closeMenuOnSelect","isMulti","TodaysPatientRowLoading","Menu","Procedures","load_procedures","search_date","todays_date_change","filter_records","doctors_input","patients_input","status_selection","procedure_status","create_procedure_modal_visibility","create_procedure_list_modal_visibility","procedures_copy","fromNow","discount_purpose","ProcedureItem","handle_change","description_text_input","prev_description","charges_text_input","prev_fee","discount_text_input","prev_discount","dr_share_text_input","prev_dr_share","edited","on_save_click","save_click_loading","save_opp","procedure_id","on_delete_click","delete_opp","procedure_description","procedure_fee","procedure_discount","procedure_dr_share","save_button_classes","update_button_classes","border","ProcedureLoading","ProcedureModal","save_procedure","handle_total_values","delete_procedure","pop","mount","procedures_list_copy","amount","paid_for_procedures","paid_amount_copy","user_data","show_procedures","handle_close_modal","consultancy_fee_text_input","follow_up_text_input","cancelProcedureModal","handle_checkout_button_click","minimum_payable","scrollToBottom","last_element","scrollIntoView","behavior","calculate_balance","on_text_change","on_item_text_change","prev_procedure_list","compare_changes","on_item_delete_click","edited_items","x","procedure_total","is_deleted","changes","add_procedure_click","obj","created","last_updated","add_procedure","on_save_changes_click","procedures_to_create","procedure","procedures_to_update","o","on_save_payment_click","procedure_backDrop","fade","componentRef","overflowY","marginBottom","borderLeft","float","ref","el","LOGO","Invoice","get_total","get_balance","paid","get_total_paid","table_header","procedures_table","appointment_procedures","appointment_charges_table","appointment_paid_balance","close_modal","UpdateAppointmentModal","render_users","patient_ref","doctor_ref","val_patient","appointment_patient","patient_select_value","val_doctor","appointment_doctor","doctor_select_value","appointment_reason","appointment_comments","appointment_referee","on_apointment_date_change","on_apointment_time_change","appointment_time","AppointmentUpdate","visit_id","close","comments","referee","utc","_data","_url","_method","res_users","toLowerCase","add_appointment_modal_body","strictParsing","TodaysPatientRow","toggle_row","toggle","procedure_loading","toggle_icon","row_data","view_user","toggle_user_view_modal","handle_checkout","render_read_only_cols","consultancy_charges","toggle_consultancy_modal","procedure_modal_visibility","invoice","toggle_invoice_modal","edit","update_appointment_modal_visibility","follow_ups","checkout","verticalAlign","appointment_time_difference_from_now","appointment_status","is_paid","render_hidden_elements","hidden_data","render_hidden_header_elements","hidden_header_elements","close_update_appointment_modal","open_update_appointment_modal","call_back_update_appointment_modal","hidden_header_color","col_span","columns","call_back","reason","User","calculate_age","dob1","today","birthDate","age_now","getFullYear","m","getMonth","text_size","icon_size","button_size","heading_size","phone","text","UserPreviewModal","handle_on_click_back_drop","on_click_back_drop","modal_props","NewUserModal","subtract","calendar","user_age","configured_age","split","add_user_modal_body","maxLength","NewAppointmentModal","hours","mins","AppointmentCreate","open_new_patient_modal","new_patient_modal_visibility","close_new_patient_modal","call_back_new_patient_modal","time_period","bind_function","ConsultancyModal","handle_save_button_click","procedure_charges","onBeforeGetContent","gather_invoice_data","custom_classes","Todayspatient","load_data","populate_patient","search_status","search_doctor","search_patient","request_user","user_preview_modal_visibility","user_modal_props","renderDataInRows","booking","appointment_description","toggle_procedure_modal","openProcedureModalHandler","openInvoiceModalHandler","selected_appointment_id","closeProcedureModalHandler","invoiceVisitIdHandler","invoiceVisitId","UpdateProcedureListHandler","updateProcedureList","prevProcedureList","open_new_appointment_modal","new_appointment_modal_visibility","object","invoice_modal_visibility","appointment_invoice_id","closeInvoiceModalHandler","close_new_appointment_modal","call_back_new_appointment_modal","set_filters","filtered_data","search_with_patients","search_with_doctors","search_with_status","reset_check","consultancy_modal_visibility","invoice_data","table","filters","on_click_cancel","TableRow","AllAppointments","search_patient_id","search_doctor_id","patient_list","doctor_list","populate_appointments","res_visits","total_records_on_this_page","total_pages","patient_checkbox","doctor_checkbox","on_from_date_change","date_from","on_to_date_change","date_to","on_search_click","page_number","to_date","from_date","page","refresh_button_click","previous_query","date_of_booking","time_of_booking","patient_name","visit_reason","maxWidth","visit_status","visit_total_charges","total_charges","on_previous_button_click","to_request_page_number","updated","on_page_number_click","innerHTML","on_next_button_click","Array","fill","LoginRoute","rest","from","NO_CONTAINER_PATHS","RouterX","useLocation","state_container","set_state_container","exact","LAYOUTS","hideProgressBar","App","getElementById","URL","process","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.f6810b07.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ROOT_ROUTE = '';\n\nexport const BASE_URL = `${ROOT_ROUTE}/`;\nexport const LOGIN_URL = `${ROOT_ROUTE}/login`;\nexport const REGISTER_URL = `${ROOT_ROUTE}/register`;\nexport const PROFILE = `${ROOT_ROUTE}/profile`;\nexport const RECEPTION_TODAYSPATIIENT = `${ROOT_ROUTE}/todays-patient`;\nexport const RECEPTION_VISITS = `${ROOT_ROUTE}/visits`;\nexport const RECEPTION_PROCEDURES = `${ROOT_ROUTE}/procedures`;\nexport const FORGOT_PASSWORD = `${ROOT_ROUTE}/forgot-password`;\nexport const SEARCH_DOCTORS = `${ROOT_ROUTE}/search-doctors`;\nexport const PAYMENTS = `${ROOT_ROUTE}/payments`;\nexport const SETTINGS = `${ROOT_ROUTE}/settings`;","const PROTOCOL = 'http';\n\n/**\n * production address\n */\n// const ADDRESS = '18.188.119.132'\nconst ADDRESS = 'codemedicine.ddns.net'\nconst TYPE = '/test';\nexport const ROOT_URL = `${PROTOCOL}://${ADDRESS}`;\nexport const SOCKET_URL = `${TYPE}/socket.io`;\n\n/**\n * developement address\n */\n// const ADDRESS = 'localhost'\n// const PORT = 7000;\n// const TYPE = '/test';\n// export const ROOT_URL = `${PROTOCOL}://${ADDRESS}:${PORT}`;\n// export const SOCKET_URL = `${TYPE}/socket.io`; \n\nexport const BASE_URL = `${ROOT_URL}${TYPE}`;\n \nexport const USERS_BASE_URL = `${BASE_URL}/users`;\nexport const USERS_LOGIN = `${USERS_BASE_URL}/login`;\nexport const USERS_CREATE = `${USERS_BASE_URL}/register`;\nexport const USERS_UPDATE = `${USERS_BASE_URL}/update`;\nexport const USERS_DELETE = `${USERS_BASE_URL}/delete`;\nexport const USERS_LOGOUT = `${USERS_BASE_URL}/logout`;\nexport const USERS_SEARCH_BY_ID = `${USERS_BASE_URL}/search/id`;\nexport const USERS_SEARCH_BY_TOKEN = `${USERS_BASE_URL}/search/token`;\nexport const USERS_SEARCH_BY_CREDENTIALS = `${USERS_BASE_URL}/search/credentials`;\n \nexport const ADMIN_BASE_URL = `${USERS_BASE_URL}/admin`;\nexport const ADMIN_CREATE_PATIENT = `${ADMIN_BASE_URL}/patient/create`;\nexport const ADMIN_UPDATE_PATIENT = `${ADMIN_BASE_URL}/patient/update`;\nexport const ADMIN_DELETE_PATIENT = `${ADMIN_BASE_URL}/patient/delete`;\nexport const ADMIN_CREATE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/create`;\nexport const ADMIN_UPDATE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/update`;\nexport const ADMIN_DELETE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/delete`;\n\nexport const APPOINTMENTS_BASE_URL = `${BASE_URL}/appointments`;\nexport const APPOINTMENTS_CREATE = `${APPOINTMENTS_BASE_URL}/create`;\nexport const APPOINTMENTS_UPDATE = `${APPOINTMENTS_BASE_URL}/update`;\nexport const APPOINTMENTS_DELETE = `${APPOINTMENTS_BASE_URL}/delete`;\nexport const APPOINTMENTS_SEARCH = `${APPOINTMENTS_BASE_URL}/search`;\nexport const APPOINTMENTS_SEARCH_BY_ID = `${APPOINTMENTS_BASE_URL}/search/id`;\nexport const APPOINTMENTS_SEARCH_TODAY = `${APPOINTMENTS_BASE_URL}/search/today`;\nexport const APPOINTMENTS_CHARGES = `${APPOINTMENTS_BASE_URL}/charges`\nexport const APPOINTMENTS_CHARGES_UPDATE = `${APPOINTMENTS_CHARGES}/update`\nexport const APPOINTMENTS_INVOICE = `${APPOINTMENTS_BASE_URL}/invoice`\nexport const APPOINTMENTS_CHECKOUT = `${APPOINTMENTS_BASE_URL}/checkout`\n \nexport const PROCEDURES_BASE_URL = `${BASE_URL}/procedures`;\nexport const PROCEDURES_CREATE = `${PROCEDURES_BASE_URL}/create`;\nexport const PROCEDURES_UPDATE = `${PROCEDURES_BASE_URL}/update`;\nexport const PROCEDURES_DELETE = `${PROCEDURES_BASE_URL}/delete`;\nexport const PROCEDURES_SEARCH = `${PROCEDURES_BASE_URL}/search`;\nexport const PROCEDURES_SEARCH_BY_ID = `${PROCEDURES_BASE_URL}/search/id`;\nexport const PROCEDURES_SEARCH_BY_APPOINTMENT_ID = `${PROCEDURES_BASE_URL}/appointment/id`;\n\nexport const PROCEDURES_LIST_BASE_URL = `${BASE_URL}/procedures_list`;\nexport const PROCEDURES_LIST_CREATE = `${PROCEDURES_LIST_BASE_URL}/create`;\nexport const PROCEDURES_LIST_UPDATE = `${PROCEDURES_LIST_BASE_URL}/update`;\nexport const PROCEDURES_LIST_DELETE = `${PROCEDURES_LIST_BASE_URL}/delete`;\nexport const PROCEDURES_LIST_SEARCH = `${PROCEDURES_LIST_BASE_URL}/search`;\nexport const PROCEDURES_LIST_SEARCH_BY_ID = `${PROCEDURES_LIST_BASE_URL}/search/id`;\n\nexport const DOCTORDETAILS_BASE_URL = `${BASE_URL}/doctor/details`;\nexport const DOCTORDETAILS_CREATE = `${DOCTORDETAILS_BASE_URL}/create`;\nexport const DOCTORDETAILS_UPDATE = `${DOCTORDETAILS_BASE_URL}/update`;\nexport const DOCTORDETAILS_DELETE = `${DOCTORDETAILS_BASE_URL}/delete`;\nexport const DOCTORDETAILS_SEARCH_BY_ID = `${DOCTORDETAILS_BASE_URL}/search/id`;\n\nexport const BRANCHES_BASE_URL = `${BASE_URL}/branches`;\nexport const BRANCHES_CREATE = `${BRANCHES_BASE_URL}/create`;\nexport const BRANCHES_UPDATE = `${BRANCHES_BASE_URL}/update`;\nexport const BRANCHES_DELETE = `${BRANCHES_BASE_URL}/delete`;\nexport const BRANCHES_SEARCH_BY_ID = `${BRANCHES_BASE_URL}/search/id`;\n\nexport const PAYMENTS_BASE_URL = `${BASE_URL}/payments`;\nexport const PAYMENTS_CREATE = `${PAYMENTS_BASE_URL}/create`;\nexport const PAYMENTS_UPDATE = `${PAYMENTS_BASE_URL}/update`;\nexport const PAYMENTS_DELETE = `${PAYMENTS_BASE_URL}/delete`;\nexport const PAYMENTS_SEARCH_BY_ID = `${PAYMENTS_BASE_URL}/search/id`;\n\n\n// --------------------------------------------------------------------------------------------------------------------\n\n\n// All user related end points\nexport const BASE_USERS_URL = `${BASE_URL}/users`;\nexport const REGISTER_USER_REQUEST = `${BASE_USERS_URL}/register`;\nexport const REGISTER_USER_REQUEST_BY_ADMIN = `${REGISTER_USER_REQUEST}/admin`;\nexport const LOGIN_USER_REQUEST = `${BASE_USERS_URL}/login`;\nexport const LOGOUT_USER_REQUEST = `${BASE_USERS_URL}/logout`;\nexport const PROFILE_USER_REQUEST = `${BASE_USERS_URL}/profile`;\nexport const PROFILE_UPDATE_USER_REQUEST = `${PROFILE_USER_REQUEST}/update`;\nexport const SEARCH_USER_REQUEST = `${BASE_USERS_URL}/search`;\nexport const SEARCH_BY_ID_USER_REQUEST = `${BASE_USERS_URL}/search/id`;\n\n// All visits/reception related end points\n// export const BASE_RECEPTION_URL = `${BASE_URL}/visits`;\n// export const NEW_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/new`;\n// export const UPDATE_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/update`\n// export const SEARCH_APPOINTMENTS_URL = `${BASE_RECEPTION_URL}/search`;\n// export const SEARCH_TODAYS_APPOINTMENTS_URL = `${SEARCH_APPOINTMENTS_URL}/today`;\n\nexport const BASE_RECEPTION_URL = `${BASE_URL}/appointments`;\nexport const NEW_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/create`;\nexport const UPDATE_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/update`\nexport const SEARCH_APPOINTMENTS_URL = `${BASE_RECEPTION_URL}/search`;\nexport const SEARCH_APPOINTMENT_BY_ID = `${SEARCH_APPOINTMENTS_URL}/id`;\nexport const SEARCH_TODAYS_APPOINTMENTS_URL = `${SEARCH_APPOINTMENTS_URL}/today`;\nexport const GET_APPOINTMENT_CHARGES = `${BASE_RECEPTION_URL}/charges`;\nexport const UPDATE_APPOINTMENT_CHARGES = `${GET_APPOINTMENT_CHARGES}/update`;\nexport const CHECKOUT_APPOINTMENT = `${BASE_RECEPTION_URL}/checkout`;\nexport const GET_INVOICE_DATA = `${BASE_RECEPTION_URL}/invoice`;\n\n// All procedure related end points\nexport const BASE_PROCEDURES_URL = `${BASE_RECEPTION_URL}/procedures`;\nexport const NEW_PROCEDURES_URL = `${BASE_PROCEDURES_URL}/create`;\nexport const UPDATE_PROCEDURE_URL = `${BASE_PROCEDURES_URL}/update`;\nexport const DELETE_PROCEDURE_URL = `${BASE_PROCEDURES_URL}/delete`;\n\n// All profit related end points\nexport const BASE_PROFITS_URL = `${BASE_URL}/profits`;\nexport const GET_PROFITS_BY_DOCTOR_ID = `${BASE_PROFITS_URL}/search/visit/id`;\nexport const PROFITS_UPDATE = `${BASE_PROFITS_URL}/update`;\n\n// All profit related end points\nexport const BASE_DOCTORDETAILS__URL = `${BASE_URL}/doctordetails`;\nexport const DOCTORDETAILS_SEARCH = `${BASE_DOCTORDETAILS__URL}/search`;\n","import Axios from \"axios\"\r\nimport * as rep from '../rest_end_points';\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * General Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const PostRequest = (url, data) => {\r\n    return Axios.post(url, data);\r\n}\r\n\r\nexport const GetRequest = (url) => {\r\n    return Axios.get(url);\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * User Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const GetUserById = (id) => {\r\n    return Axios.post(rep.USERS_SEARCH_BY_ID, { user_id: id })\r\n}\r\n\r\nexport const LoginRequest = (data) => {\r\n    return Axios.post(rep.USERS_LOGIN, data);\r\n}\r\n\r\nexport const UsersSearchByToken = (token) => {\r\n    return Axios.get(`${rep.USERS_SEARCH_BY_TOKEN}?tag=${token}`)\r\n}\r\n\r\nexport const UserSearchByToken = (token) => {\r\n    return Axios.get(`${rep.USERS_SEARCH_BY_TOKEN}?tag=${token}`)\r\n}\r\n\r\nexport const UserUpdate = (data) => {\r\n    return Axios.put(rep.USERS_UPDATE, data)\r\n}\r\n\r\nexport const UserSearchById = (id) => {\r\n    return Axios.post(rep.USERS_SEARCH_BY_ID, { user_id: id })\r\n}\r\n\r\nexport const UserSearchByCredentials = (string, role) => {\r\n    return Axios.get(`${rep.USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`);\r\n}\r\n\r\nexport const LogoutRequest = () => {\r\n    return Axios.post(rep.USERS_LOGOUT, { token: localStorage.getItem('user') })\r\n}\r\n\r\nexport const GetAllDoctors = (s) => {\r\n    return Axios.get(`${rep.BASE_USERS_URL}?role=Doctor`)\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Appointment Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const AppointmentsSearchToday = (date, type = \"\") => {\r\n    if (type !== \"\")\r\n        return Axios.get(`${rep.APPOINTMENTS_SEARCH_TODAY}?tag=${new Date(new Date(date.getTime() + (date.getTimezoneOffset() * 60000)).toISOString())}&type=${type}`);\r\n    else\r\n        return Axios.get(`${rep.APPOINTMENTS_SEARCH_TODAY}?tag=${new Date(date)}`)\r\n}\r\n\r\nexport const AppointmentCheckout = (id) => {\r\n    return Axios.post(rep.APPOINTMENTS_CHECKOUT, { appointment_id: id });\r\n}\r\n\r\nexport const AppointmentCreate = (data) => {\r\n    return Axios.post(rep.APPOINTMENTS_CREATE, data)\r\n}\r\n\r\nexport const AppointmentUpdate = (data) => {\r\n    return Axios.put(rep.APPOINTMENTS_UPDATE, data)\r\n}\r\n\r\nexport const AppointmentCharges = (id) => {\r\n    return Axios.get(`${rep.APPOINTMENTS_CHARGES}?tag=${id}`)\r\n}\r\n\r\nexport const AppointmentUpdateCharges = (payload) => {\r\n    return Axios.put(rep.APPOINTMENTS_CHARGES_UPDATE, payload)\r\n}\r\n\r\nexport const AppointmentSearchById = (id) => {\r\n    return Axios.get(`${rep.APPOINTMENTS_SEARCH_BY_ID}?tag=${id}`)\r\n}\r\n\r\nexport const AppointmentInvoice = (id) => {\r\n    return Axios.get(`${rep.APPOINTMENTS_INVOICE}?tag=${id}`)\r\n}\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Procedure Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const ProcedureSearchByAppointmentId = (id) => {\r\n    return Axios.get(`${rep.PROCEDURES_SEARCH_BY_APPOINTMENT_ID}?tag=${id}`)\r\n}\r\n\r\nexport const ProcedureCreate = (data) => {\r\n    return Axios.post(rep.PROCEDURES_CREATE, data);\r\n}\r\n\r\nexport const ProcedureUpdate = (payload) => {\r\n    return Axios.put(rep.PROCEDURES_UPDATE, payload)\r\n}\r\n\r\nexport const ProcedureDelete = (id) => {\r\n    return Axios.delete(rep.PROCEDURES_DELETE, { data: { procedure_id: id } })\r\n}\r\n\r\nexport const ProcedureSearch = (appointment_id, doctor_id, date) => {\r\n    return Axios.get(`${rep.PROCEDURES_SEARCH}?appointment_id=${appointment_id}&doctor_id=${doctor_id}&date=${date}`); \r\n}\r\n\r\nexport const GetProcedures = (date) => {\r\n    return Axios.get(`${rep.PROCEDURES_BASE_URL}?date=${date}`);\r\n}\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Procedure List Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const CreateNewProcedureItem = (payload) => {\r\n    return Axios.post(rep.PROCEDURES_LIST_CREATE, payload);\r\n}\r\n\r\nexport const GetProceduresList = (search_query) => {\r\n    if (search_query && search_query !== '') {\r\n        return Axios.get(`${rep.PROCEDURES_LIST_BASE_URL}?search=${search_query}`)\r\n    }\r\n    return Axios.get(rep.PROCEDURES_LIST_BASE_URL);\r\n}\r\n\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Payments Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\n export const CreateNewPaymentLog = (payload) => {\r\n    return Axios.post(rep.PAYMENTS_CREATE, payload);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { NOTIFY, LEFT_SIDEBAR, \n    ACTIVE_USER, \n    ACTIVE_PAGE, \n    TODAYS_PATIENT, \n    TODAYS_PATIENT_CLEAR, \n    TODAYS_PATIENT_APPOINTMENT_UPDATE, SETTINGS_UPDATE_LEFTSIDEBAR_LIST, FETCH_DOCTORS, FETCH_PROCEDURE_LIST } from \"../constants\";\nimport Axios from \"axios\";\nimport { SEARCH_APPOINTMENT_BY_ID } from \"../../services/rest_end_points\";\nimport { AppointmentsSearchToday, GetAllDoctors, GetProceduresList } from '../../services/queries';\n\n/**\n * LOGIN api\n * Return token\n * store token\n * user_token = token\n */\n\nAxios.interceptors.request.use(request => {\n    var user = localStorage.getItem('user');\n    if (user) {\n        request['headers']['code-medicine'] = `${user}`;\n    }\n    return request\n})\n\nexport function notify(type,title,message){\n    return {\n        type: NOTIFY,\n        payload: {\n            type: type,\n            title: title,\n            message: message\n        }\n    }\n    \n}\n\nexport function left_sidebar_controls(status){\n    return {\n        type: LEFT_SIDEBAR,\n        payload: status\n    }\n}\n\nexport function set_active_user(details){\n    return {\n        type: ACTIVE_USER,\n        payload: details\n    }\n}\n\nexport function set_active_page(details){\n    return {\n        type: ACTIVE_PAGE,\n        payload: details\n    }\n}\n\nexport function load_todays_appointments(date){\n    return function(dispatch){\n        // let d = new Date();\n        // d = new Date(d.getTime() - d.getTimezoneOffset() * 60000)\n        AppointmentsSearchToday(new Date(date))\n        .then(res => {\n            dispatch({\n                type: TODAYS_PATIENT,\n                payload: res,\n                loading: false\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: TODAYS_PATIENT,\n                payload: {\n                    data: {\n                        message: err, \n                        loading: false\n                    }\n                }\n            })\n        })\n    }\n}\n\nexport function clear_todays_appointments(){\n    return {\n        type: TODAYS_PATIENT_CLEAR\n    }\n}\n\nexport function update_appointment(appointment_id){\n    const response = Axios.get(`${SEARCH_APPOINTMENT_BY_ID}?tag=${appointment_id}`)\n    return {\n        type: TODAYS_PATIENT_APPOINTMENT_UPDATE,\n        payload: {\n            id: appointment_id,\n            new_item: response.data\n        }\n    }\n}\n\nexport function toggle_sidebar_menu_collapse(){\n    return {\n        type: SETTINGS_UPDATE_LEFTSIDEBAR_LIST,\n    }\n}\n\nexport async function fetch_doctors() {\n    const response = await GetAllDoctors();\n    return {\n        type: FETCH_DOCTORS,\n        payload: response.data\n    }\n}\n\nexport async function fetch_procedures_list(){\n    const response = await GetProceduresList();\n    return {\n        type: FETCH_PROCEDURE_LIST,\n        payload: response.data\n    }\n}","export const NOTIFY = 'notify';\nexport const LEFT_SIDEBAR = 'left_sidebar';\nexport const ACTIVE_USER = 'active_user';\nexport const ACTIVE_PAGE = 'active_page';\nexport const TODAYS_PATIENT = 'todays_patients';\nexport const TODAYS_PATIENT_CLEAR = 'clear_todays_patients';\nexport const TODAYS_PATIENT_APPOINTMENT_UPDATE = 'update_single_record';\nexport const SETTINGS_UPDATE_LEFTSIDEBAR_LIST = `settings-update-left-sidebar-list`;\nexport const FETCH_DOCTORS = 'fetch-doctors';\nexport const FETCH_PROCEDURE_LIST = 'fetch-procedure-list';","import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nfunction Skeletons(props) {\n    return (\n        <div className={`virtual-body navbar-top`}>\n            <div className=\"navbar navbar-expand-md navbar-dark fixed-top\">\n                <div className=\"navbar-brand\">\n                    <p className={`my-2`}>Cancel</p>\n                </div>\n            </div>\n            <div className=\"page-content\">\n                <SkeletonTheme color=\"#292b2c\" highlightColor=\"#4F5950\">\n                    <div className=\"sidebar sidebar-dark sidebar-main sidebar-fixed sidebar-expand-md px-2\" >\n                        <div className=\"d-flex justify-content-center\">\n                            <Skeleton className=\"my-1\" circle={true} height={120} width={120} />\n                        </div>\n                        <Skeleton className=\"my-2\" count={20} height={40} />\n                    </div>\n\n                </SkeletonTheme>\n\n                <div className=\"content-wrapper\">\n                    <div className=\"page-header page-header-light\">\n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-2\" count={1} height={40} />\n                        </SkeletonTheme>\n                    </div>\n\n                    <div className={`content`}>\n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-2\" height={150} count={1} />\n                            <div className=\"row\">\n                                <div className=\"col-lg-8\">\n                                    <Skeleton className=\"my-2\" height={300} count={3} />\n                                </div>\n                                <div className=\"col-lg-4\">\n                                    <Skeleton className=\"my-2\" height={300} count={4} />\n                                </div>\n                            </div>\n                        </SkeletonTheme>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Skeletons;","import React, { Component } from 'react';\r\nimport { LOGIN_URL } from './constants';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { USERS_SEARCH_BY_TOKEN } from '../services/rest_end_points';\r\nimport { set_active_user } from '../redux/actions';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport _ from 'lodash'\r\nimport Skeletons from '../components/Skeletons';\r\n\r\nclass ProtectedRoutes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.authorize_token(localStorage.getItem('user'))\r\n    }\r\n\r\n    authorize_token = (token) => {\r\n        if (_.isEmpty(this.props.active_user)){\r\n            if (token !== null){\r\n                Axios.get(`${USERS_SEARCH_BY_TOKEN}?tag=${token}`).then(res => {\r\n                    this.props.set_active_user(res.data['payload'])\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    localStorage.clear()\r\n                    localStorage.setItem('cached-path', this.props.path)\r\n                    this.props.set_active_user({})\r\n                })\r\n            }\r\n            else {\r\n                localStorage.setItem('cached-path', this.props.path)\r\n            }\r\n        }\r\n    }\r\n\r\n    check_for_token = () => {\r\n        return localStorage.getItem('user') ? true : false;\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...props } = this.props\r\n        console.log('path', this.props.path)\r\n        let __html = <Skeletons />//<div className=\"d-flex align-items-center justify-content-center\" style={{height: '90vh'}}><Loading size={150}/></div>;\r\n\r\n        /* if user is logged in */\r\n        if (this.check_for_token()) {\r\n            /* first fetch the user details from server */\r\n            if (!_.isEmpty(this.props.active_user)) {\r\n                __html = <Route {...props} render={props => <Component {...props} />} />\r\n            }\r\n        }\r\n        else {\r\n            console.log('invalid token');\r\n            __html = <Redirect to={LOGIN_URL} />\r\n        }\r\n        return __html;\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        active_user: state.active_user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {set_active_user})(ProtectedRoutes)","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport DateTimePicker from 'react-datetime';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nclass Inputfield extends Component {\n\n    render() {\n\n        const received_props = this.props;\n\n        const _field_type = received_props.field_type;\n        const input_field_type = <input \n            {...received_props} \n            className={`form-control ${received_props.error ? 'border-danger' : ''} ${received_props.className}`} \n            />\n\n        const text_area_field_type = <textarea \n            rows={\"3\"} \n            cols={\"3\"} \n            {...received_props} \n            className={`form-control ${received_props.error ? 'border-danger' : ''} ${received_props.className}`} \n            />\n\n        const select_field_type = <Select {...received_props} />\n        const date_time_field_type = <DateTimePicker \n            {...received_props} \n            className={`clock_datatime_picker form-control ${received_props.error ? 'border-danger' : ''} ${received_props.className}`} \n            inputProps={{ \n                placeholder: received_props.placeholder, \n                className: 'border-0 w-100', \n                ...received_props.inputProps \n            }} \n            />\n        let render_field = ''\n\n        if (_field_type === 'text-area') {\n            render_field = text_area_field_type\n        }\n        else if (_field_type === 'date-time') {\n            render_field = date_time_field_type\n        }\n        else if (_field_type === 'select') {\n            render_field = select_field_type\n        }\n        else if (_field_type === 'custom') {\n            render_field = received_props.custom_field\n        }\n        else {\n            render_field = input_field_type\n        }\n\n\n        const parent_classes = received_props.parent_classes;\n        const inner_classes = received_props.inner_classes;\n        return (\n            <div className={`form-group ${parent_classes} mb-0`}>\n                {\n                    received_props.loading? \n                    <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                        <Skeleton className=\"\" count={1} height={15} width={80} />\n                    </SkeletonTheme> : \n                    (received_props.heading ? <label className=\"col-form-label mb-0 pb-1\">\n                        {received_props.heading}{received_props.required ? <span className=\"text-danger\"> * </span> : ''}\n                    </label> : '')\n                }\n                <div className={inner_classes}>\n                    {\n                        received_props.loading? \n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"mb-1\" count={1} height={40} />\n                        </SkeletonTheme> : render_field\n                    }\n                    {\n                        received_props.helper? <span className={`form-text text-muted mt-0`}>{received_props.helper}</span>: '' \n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default Inputfield;","import { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Notify(type, title, message) {\r\n    const options = {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        pauseOnFocusLoss: true\r\n    }\r\n    switch (type) {\r\n        case 'success':\r\n            return toast.success(message, options);\r\n        case 'error':\r\n            return toast.error(message, options);\r\n        case 'warning':\r\n            return toast.warn(message, options);\r\n        case 'info':\r\n            return toast.info(message, options);\r\n        default:\r\n            return toast(message, options);\r\n    }\r\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Loader from 'react-loader-spinner';\nimport { withRouter, Link } from 'react-router-dom';\nimport { set_active_user, fetch_doctors, fetch_procedures_list } from 'redux/actions';\nimport Inputfield from '../../../components/inputfield';\nimport notify from 'notify'\nimport { BASE_URL, LOGIN_URL, FORGOT_PASSWORD } from '../../../router/constants';\nimport { LoginRequest } from '../../../services/queries';\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: { value: '', error: false },// admin-cm@gmail.com \n            password: { value: '', error: false },// 111222333\n            remember_me_option: true,\n            loading_status: false,\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } })\n                break;\n            case 'password_text_input':\n                this.setState({ password: { value: e.target.value, error: false } })\n                break;\n            case 'remember_me_text_input':\n                this.setState({ remember_me_option: e.target.checked })\n                break;\n            default:\n                break;\n        }\n    }\n\n    __check_hard_constraints = (data) => {\n        if (data.email === '') {\n            notify('error', '', 'Please specify a username or phone number');\n            return false;\n        }\n        if (data.password === '') {\n            notify('error', '', 'Please give your password');\n            return false;\n        }\n        return true\n    }\n\n    on_submit = (e) => {\n        e.preventDefault()\n        this.setState({ loading_status: true })\n        const data = {\n            username: this.state.email.value.trim(),\n            password: this.state.password.value.trim(),\n            remember_me: this.state.remember_me_option\n        }\n        LoginRequest(data).then(async res => {\n            localStorage.setItem(\"user\", res.data['token']);\n            await this.props.set_active_user(res.data.user)\n            await this.props.fetch_doctors();\n            await this.props.fetch_procedures_list();\n            notify('success', '', res.data['message']);\n            this.setState({ loading_status: false });\n            \n            if (!localStorage.getItem('cached-path'))\n                this.props.history.push(BASE_URL);\n            else {\n                this.props.history.push(`${BASE_URL}${localStorage.getItem('cached-path').substring(1)}`);\n                localStorage.removeItem('cached-path');\n            }\n        }).catch(err => {\n            if (err.response) {\n                // console.log('login',err.response)\n                if (err.response.status >= 500) {\n                    notify('error', '', 'Server not responding! please try again later')\n                }\n                else if (err.response.status >= 400 && err.response.status < 500) {\n                    notify('error', '', err.response.data.message)\n                }\n                this.setState({\n                    loading_status: false,\n                    email: { value: this.state.email.value, error: true },\n                    password: { value: this.state.password.value, error: true }\n                })\n            }\n            console.log('login error', err) \n        });\n    }\n\n\n    render() {\n\n        var view = ''\n        if (this.state.loading_status) {\n            view = <div className=\"mt-3\">\n                <div className=\"d-flex justify-content-center \">\n                    <Loader\n                        type=\"Rings\"\n                        color=\"#00BFFF\"\n                        height={150}\n                        width={150}\n                        timeout={60000} //60 secs\n                    />\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <p>Loading...</p>\n                </div>\n            </div>\n        }\n        else {\n            const username_password = <div className={``}>\n                <Inputfield\n                    id={'email_text_input'}\n                    heading={'Email'}\n                    placeholder={\"someone@hello.com\"}\n                    input_type={'email'}\n                    onChange={this.on_text_field_change}\n                    value={this.state.email.value}\n                    error={this.state.email.error}\n                />\n                <Inputfield\n                    id={'password_text_input'}\n                    heading={'Password'}\n                    placeholder={\"Enter your password\"}\n                    type={'password'}\n                    onChange={this.on_text_field_change}\n                    value={this.state.password.value}\n                    error={this.state.password.error}\n                />\n\n            </div>\n            const remember_me_reset_password = <div className=\"form-group d-flex align-items-center\">\n                <div className=\"form-check mb-0\">\n                    <label className=\"form-check-label\">\n                        <div className=\"uniform-checker\">\n                            <span className={this.state.remember_me_option ? 'checked' : ''}>\n                                <input type=\"checkbox\"\n                                    name=\"remember\"\n                                    id=\"remember_me_text_input\"\n                                    defaultChecked={this.state.remember_me_option}\n                                    value={this.state.remember_me_option}\n                                    onChange={this.on_text_field_change}\n                                    className=\"form-input-styled\" />\n                            </span>\n                        </div>\n                        Remember\n                    </label>\n                </div>\n\n                <Link to={FORGOT_PASSWORD} className=\"ml-auto\">Forgot password?</Link>\n            </div>\n\n            view = <div className={``}>\n                {username_password}\n                <hr />\n                {remember_me_reset_password}\n            </div>\n        }\n\n        return (\n            // <Container container_type={'login'}>\n                <div className={`container-fluid`}>\n                    <div className={`row`}>\n                        <div className={`col-lg-4 col-md-6 p-0`}>\n                            <form method=\"post\" onSubmit={this.on_submit}>\n                                <div className={`card m-0`} style={{ height: '100vh' }}>\n                                    <div className={`card-header text-center h4 font-weight-light`}>\n                                        <span>Sign in</span>\n                                        <hr />\n                                    </div>\n                                    <div className={`card-body px-5`} >\n                                        {view}\n                                        <hr />\n                                        <div className=\"form-group \">\n                                            <button\n                                                type=\"submit\"\n                                                className=\"btn btn-block bg-teal-400 btn-labeled btn-labeled-right ml-auto\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={this.on_submit}>\n                                                <b><i className=\"icon-circle-right2\"></i></b>\n                                                Sign in\n                                            </button>\n                                        </div>\n\n                                        <div className=\"form-group text-center text-muted content-divider\">\n                                            <span className=\"px-2\">Don't have an account?</span>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-dark btn-labeled btn-labeled-right ml-auto\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={() => notify('info', \"UC\", 'Patients signup is not available now')}// alert(\"Patients signup under developement..\")}\n                                                // this.props.history.push(REGISTER_URL)}\n                                                >\n                                                <b><i className=\"icon-plus2\"></i></b>\n                                                Sign up\n                                            </button>\n                                        </div>\n                                        <span className=\"form-text text-center text-muted\">By continuing, you're confirming that you've read our <Link to={LOGIN_URL}>Terms &amp; Conditions</Link> and <Link to={LOGIN_URL}>Cookie Policy</Link></span>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div className={`col-lg-8 col-md-6 d-none d-lg-block d-xl-block d-md-block background_custom`}>\n\n                        </div>\n                    </div>\n                </div>\n\n            // </Container >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, fetch_doctors, fetch_procedures_list })(withRouter(Login));","export const BLOOD_GROUPS_OPTIONS = [\r\n    { id: 'blood_group_selection', label: 'A+' },\r\n    { id: 'blood_group_selection', label: 'A-' },\r\n    { id: 'blood_group_selection', label: 'B+' },\r\n    { id: 'blood_group_selection', label: 'B-' },\r\n    { id: 'blood_group_selection', label: 'AB+' },\r\n    { id: 'blood_group_selection', label: 'AB-' },\r\n    { id: 'blood_group_selection', label: 'O+' },\r\n    { id: 'blood_group_selection', label: 'O-' },\r\n    { id: 'blood_group_selection', label: 'Unknown' },\r\n];\r\nexport const GENDER_OPTIONS = [\r\n    { id: 'gender_selection', label: 'Male' },\r\n    { id: 'gender_selection', label: 'Female' },\r\n    { id: 'gender_selection', label: 'other' },\r\n];\r\nexport const ROLES_OPTIONS = [\r\n    { id: 'role_selection', label: 'Patient' },\r\n    { id: 'role_selection', label: 'Doctor' },\r\n    { id: 'role_selection', label: 'Admin' },\r\n];\r\n\r\nexport const PATIENT_VISIT_STATUSES = [\r\n    { id: 'status_selection', label: 'Scheduled'},\r\n    { id: 'status_selection', label: 'Waiting'},\r\n    { id: 'status_selection', label: 'Checked in'},\r\n    { id: 'status_selection', label: 'Checked out'},\r\n    { id: 'status_selection', label: 'Emergency'},\r\n]\r\n\r\nexport const classNameColors = [\r\n    'dark',\r\n    'primary',\r\n    'warning',\r\n    'success',\r\n    'danger',\r\n]\r\n\r\nexport const FEDRAL_CITIES = [\r\n    { id: \"city_selection\", label: \"Islamabad\" },\r\n]\r\n\r\nexport const PUNJAB_CITIES = [\r\n    { id: \"city_selection\", label: \"Ahmed Nager Chatha\" },\r\n    { id: \"city_selection\", label: \"Ahmadpur East\" },\r\n    { id: \"city_selection\", label: \"Ali Khan Abad\" },\r\n    { id: \"city_selection\", label: \"Alipur\" },\r\n    { id: \"city_selection\", label: \"Arifwala\" },\r\n    { id: \"city_selection\", label: \"Attock\" },\r\n    { id: \"city_selection\", label: \"Bhera\" },\r\n    { id: \"city_selection\", label: \"Bhalwal\" },\r\n    { id: \"city_selection\", label: \"Bahawalnagar\" },\r\n    { id: \"city_selection\", label: \"Bahawalpur\" },\r\n    { id: \"city_selection\", label: \"Bhakkar\" },\r\n    { id: \"city_selection\", label: \"Burewala\" },\r\n    { id: \"city_selection\", label: \"Chillianwala\" },\r\n    { id: \"city_selection\", label: \"Chakwal\" },\r\n    { id: \"city_selection\", label: \"Chichawatni\" },\r\n    { id: \"city_selection\", label: \"Chiniot\" },\r\n    { id: \"city_selection\", label: \"Chishtian\" },\r\n    { id: \"city_selection\", label: \"Daska\" },\r\n    { id: \"city_selection\", label: \"Darya Khan\" },\r\n    { id: \"city_selection\", label: \"Dera Ghazi Khan\" },\r\n    { id: \"city_selection\", label: \"Dhaular\" },\r\n    { id: \"city_selection\", label: \"Dina\" },\r\n    { id: \"city_selection\", label: \"Dinga\" },\r\n    { id: \"city_selection\", label: \"Dipalpur\" },\r\n    { id: \"city_selection\", label: \"Faisalabad\" },\r\n    { id: \"city_selection\", label: \"Fateh Jang\" },\r\n    { id: \"city_selection\", label: \"Ghakhar Mandi\" },\r\n    { id: \"city_selection\", label: \"Gojra\" },\r\n    { id: \"city_selection\", label: \"Gujranwala\" },\r\n    { id: \"city_selection\", label: \"Gujrat\" },\r\n    { id: \"city_selection\", label: \"Gujar Khan\" },\r\n    { id: \"city_selection\", label: \"Hafizabad\" },\r\n    { id: \"city_selection\", label: \"Haroonabad\" },\r\n    { id: \"city_selection\", label: \"Hasilpur\" },\r\n    { id: \"city_selection\", label: \"Haveli\" },\r\n    { id: \"city_selection\", label: \"Lakha\" },\r\n    { id: \"city_selection\", label: \"Jalalpur\" },\r\n    { id: \"city_selection\", label: \"Jattan\" },\r\n    { id: \"city_selection\", label: \"Jampur\" },\r\n    { id: \"city_selection\", label: \"Jaranwala\" },\r\n    { id: \"city_selection\", label: \"Jhang\" },\r\n    { id: \"city_selection\", label: \"Jhelum\" },\r\n    { id: \"city_selection\", label: \"Kalabagh\" },\r\n    { id: \"city_selection\", label: \"Karor Lal Esan\" },\r\n    { id: \"city_selection\", label: \"Kasur\" },\r\n    { id: \"city_selection\", label: \"Kamalia\" },\r\n    { id: \"city_selection\", label: \"Kamoke\" },\r\n    { id: \"city_selection\", label: \"Khanewal\" },\r\n    { id: \"city_selection\", label: \"Khanpur\" },\r\n    { id: \"city_selection\", label: \"Kharian\" },\r\n    { id: \"city_selection\", label: \"Khushab\" },\r\n    { id: \"city_selection\", label: \"Kot Adu\" },\r\n    { id: \"city_selection\", label: \"Jauharabad\" },\r\n    { id: \"city_selection\", label: \"Lahore\" },\r\n    { id: \"city_selection\", label: \"Lalamusa\" },\r\n    { id: \"city_selection\", label: \"Layyah\" },\r\n    { id: \"city_selection\", label: \"Liaquat Pur\" },\r\n    { id: \"city_selection\", label: \"Lodhran\" },\r\n    { id: \"city_selection\", label: \"Malakwal\" },\r\n    { id: \"city_selection\", label: \"Mamoori\" },\r\n    { id: \"city_selection\", label: \"Mailsi\" },\r\n    { id: \"city_selection\", label: \"Mandi Bahauddin\" },\r\n    { id: \"city_selection\", label: \"Mian Channu\" },\r\n    { id: \"city_selection\", label: \"Mianwali\" },\r\n    { id: \"city_selection\", label: \"Multan\" },\r\n    { id: \"city_selection\", label: \"Murree\" },\r\n    { id: \"city_selection\", label: \"Muridke\" },\r\n    { id: \"city_selection\", label: \"Mianwali Bangla\" },\r\n    { id: \"city_selection\", label: \"Muzaffargarh\" },\r\n    { id: \"city_selection\", label: \"Narowal\" },\r\n    { id: \"city_selection\", label: \"Okara\" },\r\n    { id: \"city_selection\", label: \"Renala Khurd\" },\r\n    { id: \"city_selection\", label: \"Pakpattan\" },\r\n    { id: \"city_selection\", label: \"Pattoki\" },\r\n    { id: \"city_selection\", label: \"Pir Mahal\" },\r\n    { id: \"city_selection\", label: \"Qaimpur\" },\r\n    { id: \"city_selection\", label: \"Qila Didar Singh\" },\r\n    { id: \"city_selection\", label: \"Rabwah\" },\r\n    { id: \"city_selection\", label: \"Raiwind\" },\r\n    { id: \"city_selection\", label: \"Rajanpur\" },\r\n    { id: \"city_selection\", label: \"Rahim Yar Khan\" },\r\n    { id: \"city_selection\", label: \"Rawalpindi\" },\r\n    { id: \"city_selection\", label: \"Sadiqabad\" },\r\n    { id: \"city_selection\", label: \"Safdarabad\" },\r\n    { id: \"city_selection\", label: \"Sahiwal\" },\r\n    { id: \"city_selection\", label: \"Sangla Hill\" },\r\n    { id: \"city_selection\", label: \"Sarai Alamgir\" },\r\n    { id: \"city_selection\", label: \"Sargodha\" },\r\n    { id: \"city_selection\", label: \"Shakargarh\" },\r\n    { id: \"city_selection\", label: \"Sheikhupura\" },\r\n    { id: \"city_selection\", label: \"Sialkot\" },\r\n    { id: \"city_selection\", label: \"Sohawa\" },\r\n    { id: \"city_selection\", label: \"Soianwala\" },\r\n    { id: \"city_selection\", label: \"Siranwali\" },\r\n    { id: \"city_selection\", label: \"Talagang\" },\r\n    { id: \"city_selection\", label: \"Taxila\" },\r\n    { id: \"city_selection\", label: \"Toba Tek Singh\" },\r\n    { id: \"city_selection\", label: \"Vehari\" },\r\n    { id: \"city_selection\", label: \"Wah Cantonment\" },\r\n    { id: \"city_selection\", label: \"Wazirabad\" },\r\n]\r\n\r\nexport const SINDH_CITIES = [\r\n    { id: \"city_selection\", label: \"Badin\" },\r\n    { id: \"city_selection\", label: \"Bhirkan\" },\r\n    { id: \"city_selection\", label: \"Rajo Khanani\" },\r\n    { id: \"city_selection\", label: \"Chak\" },\r\n    { id: \"city_selection\", label: \"Dadu\" },\r\n    { id: \"city_selection\", label: \"Digri\" },\r\n    { id: \"city_selection\", label: \"Diplo\" },\r\n    { id: \"city_selection\", label: \"Dokri\" },\r\n    { id: \"city_selection\", label: \"Ghotki\" },\r\n    { id: \"city_selection\", label: \"Haala\" },\r\n    { id: \"city_selection\", label: \"Hyderabad\" },\r\n    { id: \"city_selection\", label: \"Islamkot\" },\r\n    { id: \"city_selection\", label: \"Jacobabad\" },\r\n    { id: \"city_selection\", label: \"Jamshoro\" },\r\n    { id: \"city_selection\", label: \"Jungshahi\" },\r\n    { id: \"city_selection\", label: \"Kandhkot\" },\r\n    { id: \"city_selection\", label: \"Kandiaro\" },\r\n    { id: \"city_selection\", label: \"Karachi\" },\r\n    { id: \"city_selection\", label: \"Kashmore\" },\r\n    { id: \"city_selection\", label: \"Keti Bandar\" },\r\n    { id: \"city_selection\", label: \"Khairpur\" },\r\n    { id: \"city_selection\", label: \"Kotri\" },\r\n    { id: \"city_selection\", label: \"Larkana\" },\r\n    { id: \"city_selection\", label: \"Matiari\" },\r\n    { id: \"city_selection\", label: \"Mehar\" },\r\n    { id: \"city_selection\", label: \"Mirpur Khas\" },\r\n    { id: \"city_selection\", label: \"Mithani\" },\r\n    { id: \"city_selection\", label: \"Mithi\" },\r\n    { id: \"city_selection\", label: \"Mehrabpur\" },\r\n    { id: \"city_selection\", label: \"Moro\" },\r\n    { id: \"city_selection\", label: \"Nagarparkar\" },\r\n    { id: \"city_selection\", label: \"Naudero\" },\r\n    { id: \"city_selection\", label: \"Naushahro Feroze\" },\r\n    { id: \"city_selection\", label: \"Naushara\" },\r\n    { id: \"city_selection\", label: \"Nawabshah\" },\r\n    { id: \"city_selection\", label: \"Nazimabad\" },\r\n    { id: \"city_selection\", label: \"Qambar\" },\r\n    { id: \"city_selection\", label: \"Qasimabad\" },\r\n    { id: \"city_selection\", label: \"Ranipur\" },\r\n    { id: \"city_selection\", label: \"Ratodero\" },\r\n    { id: \"city_selection\", label: \"Rohri\" },\r\n    { id: \"city_selection\", label: \"Sakrand\" },\r\n    { id: \"city_selection\", label: \"Sanghar\" },\r\n    { id: \"city_selection\", label: \"Shahbandar\" },\r\n    { id: \"city_selection\", label: \"Shahdadkot\" },\r\n    { id: \"city_selection\", label: \"Shahdadpur\" },\r\n    { id: \"city_selection\", label: \"Shahpur Chakar\" },\r\n    { id: \"city_selection\", label: \"Shikarpaur\" },\r\n    { id: \"city_selection\", label: \"Sukkur\" },\r\n    { id: \"city_selection\", label: \"Tangwani\" },\r\n    { id: \"city_selection\", label: \"Tando Adam Khan\" },\r\n    { id: \"city_selection\", label: \"Tando Allahyar\" },\r\n    { id: \"city_selection\", label: \"Tando Muhammad Khan\" },\r\n    { id: \"city_selection\", label: \"Thatta\" },\r\n    { id: \"city_selection\", label: \"Umerkot\" },\r\n    { id: \"city_selection\", label: \"Warah\" },\r\n]\r\n\r\nexport const KPK_CITIES = [\r\n    { id: \"city_selection\", label: \"Abbottabad\" },\r\n    { id: \"city_selection\", label: \"Adezai\" },\r\n    { id: \"city_selection\", label: \"Alpuri\" },\r\n    { id: \"city_selection\", label: \"Akora Khattak\" },\r\n    { id: \"city_selection\", label: \"Ayubia\" },\r\n    { id: \"city_selection\", label: \"Banda Daud Shah\" },\r\n    { id: \"city_selection\", label: \"Bannu\" },\r\n    { id: \"city_selection\", label: \"Batkhela\" },\r\n    { id: \"city_selection\", label: \"Battagram\" },\r\n    { id: \"city_selection\", label: \"Birote\" },\r\n    { id: \"city_selection\", label: \"Chakdara\" },\r\n    { id: \"city_selection\", label: \"Charsadda\" },\r\n    { id: \"city_selection\", label: \"Chitral\" },\r\n    { id: \"city_selection\", label: \"Daggar\" },\r\n    { id: \"city_selection\", label: \"Dargai\" },\r\n    { id: \"city_selection\", label: \"Darya Khan\" },\r\n    { id: \"city_selection\", label: \"Dera Ismail Khan\" },\r\n    { id: \"city_selection\", label: \"Doaba\" },\r\n    { id: \"city_selection\", label: \"Dir\" },\r\n    { id: \"city_selection\", label: \"Drosh\" },\r\n    { id: \"city_selection\", label: \"Hangu\" },\r\n    { id: \"city_selection\", label: \"Haripur\" },\r\n    { id: \"city_selection\", label: \"Karak\" },\r\n    { id: \"city_selection\", label: \"Kohat\" },\r\n    { id: \"city_selection\", label: \"Kulachi\" },\r\n    { id: \"city_selection\", label: \"Lakki Marwat\" },\r\n    { id: \"city_selection\", label: \"Latamber\" },\r\n    { id: \"city_selection\", label: \"Madyan\" },\r\n    { id: \"city_selection\", label: \"Mansehra\" },\r\n    { id: \"city_selection\", label: \"Mardan\" },\r\n    { id: \"city_selection\", label: \"Mastuj\" },\r\n    { id: \"city_selection\", label: \"Mingora\" },\r\n    { id: \"city_selection\", label: \"Nowshera\" },\r\n    { id: \"city_selection\", label: \"Paharpur\" },\r\n    { id: \"city_selection\", label: \"Pabbi\" },\r\n    { id: \"city_selection\", label: \"Peshawar\" },\r\n    { id: \"city_selection\", label: \"Saidu Sharif\" },\r\n    { id: \"city_selection\", label: \"Shorkot\" },\r\n    { id: \"city_selection\", label: \"Shewa Adda\" },\r\n    { id: \"city_selection\", label: \"Swabi\" },\r\n    { id: \"city_selection\", label: \"Swat\" },\r\n    { id: \"city_selection\", label: \"Tangi\" },\r\n    { id: \"city_selection\", label: \"Tank\" },\r\n    { id: \"city_selection\", label: \"Thall\" },\r\n    { id: \"city_selection\", label: \"Timergara\" },\r\n    { id: \"city_selection\", label: \"Tordher\" },\r\n]\r\n\r\nexport const BALOCHISTAN_CITIES = [\r\n    { id: \"city_selection\", label: \"Awaran\" },\r\n    { id: \"city_selection\", label: \"Barkhan\" },\r\n    { id: \"city_selection\", label: \"Chagai\" },\r\n    { id: \"city_selection\", label: \"Dera Bugti\" },\r\n    { id: \"city_selection\", label: \"Gwadar\" },\r\n    { id: \"city_selection\", label: \"Harnai\" },\r\n    { id: \"city_selection\", label: \"Jafarabad\" },\r\n    { id: \"city_selection\", label: \"Jhal Magsi\" },\r\n    { id: \"city_selection\", label: \"Kacchi\" },\r\n    { id: \"city_selection\", label: \"Kalat\" },\r\n    { id: \"city_selection\", label: \"Kech\" },\r\n    { id: \"city_selection\", label: \"Kharan\" },\r\n    { id: \"city_selection\", label: \"Khuzdar\" },\r\n    { id: \"city_selection\", label: \"Killa Abdullah\" },\r\n    { id: \"city_selection\", label: \"Killa Saifullah\" },\r\n    { id: \"city_selection\", label: \"Kohlu\" },\r\n    { id: \"city_selection\", label: \"Lasbela\" },\r\n    { id: \"city_selection\", label: \"Lehri\" },\r\n    { id: \"city_selection\", label: \"Loralai\" },\r\n    { id: \"city_selection\", label: \"Mastung\" },\r\n    { id: \"city_selection\", label: \"Musakhel\" },\r\n    { id: \"city_selection\", label: \"Nasirabad\" },\r\n    { id: \"city_selection\", label: \"Nushki\" },\r\n    { id: \"city_selection\", label: \"Panjgur\" },\r\n    { id: \"city_selection\", label: \"Pishin Valley\" },\r\n    { id: \"city_selection\", label: \"Quetta\" },\r\n    { id: \"city_selection\", label: \"Sherani\" },\r\n    { id: \"city_selection\", label: \"Sibi\" },\r\n    { id: \"city_selection\", label: \"Sohbatpur\" },\r\n    { id: \"city_selection\", label: \"Washuk\" },\r\n    { id: \"city_selection\", label: \"Zhob\" },\r\n    { id: \"city_selection\", label: \"Ziarat\" },\r\n]\r\n\r\n/**\r\n * Cities of pakistan\r\n */\r\nexport const CITIES = [ \r\n    { label: 'fedral', options: FEDRAL_CITIES },\r\n    { label: 'punjab', options: PUNJAB_CITIES },\r\n    { label: 'sindh', options: SINDH_CITIES },\r\n    { label: 'kpk', options: KPK_CITIES },\r\n    { label: 'balochistan', options: BALOCHISTAN_CITIES },\r\n]\r\n\r\n/**\r\n * Provinces of pakistan\r\n */\r\nexport const PROVINCES = [\r\n    { id: 'province_selection', label: \"Fedral\" },\r\n    { id: 'province_selection', label: \"Punjab\" },\r\n    { id: 'province_selection', label: \"Sindh\" },\r\n    { id: 'province_selection', label: \"Khyber pakhtun khwa\" },\r\n    { id: 'province_selection', label: \"Balochistan\" },\r\n]\r\n\r\n/**\r\n * List of world countries\r\n */\r\nexport const COUTRIES = [\r\n    { id: \"country_selection\", label: \"Afghanistan\" },\r\n    { id: \"country_selection\", label: \"Albania\" },\r\n    { id: \"country_selection\", label: \"Algeria\" },\r\n    { id: \"country_selection\", label: \"Andorra\" },\r\n    { id: \"country_selection\", label: \"Angola\" },\r\n    { id: \"country_selection\", label: \"Antigua & Deps\" },\r\n    { id: \"country_selection\", label: \"Argentina\" },\r\n    { id: \"country_selection\", label: \"Armenia\" },\r\n    { id: \"country_selection\", label: \"Australia\" },\r\n    { id: \"country_selection\", label: \"Austria\" },\r\n    { id: \"country_selection\", label: \"Azerbaijan\" },\r\n    { id: \"country_selection\", label: \"Bahamas\" },\r\n    { id: \"country_selection\", label: \"Bahrain\" },\r\n    { id: \"country_selection\", label: \"Bangladesh\" },\r\n    { id: \"country_selection\", label: \"Barbados\" },\r\n    { id: \"country_selection\", label: \"Belarus\" },\r\n    { id: \"country_selection\", label: \"Belgium\" },\r\n    { id: \"country_selection\", label: \"Belize\" },\r\n    { id: \"country_selection\", label: \"Benin\" },\r\n    { id: \"country_selection\", label: \"Bhutan\" },\r\n    { id: \"country_selection\", label: \"Bolivia\" },\r\n    { id: \"country_selection\", label: \"Bosnia Herzegovina\" },\r\n    { id: \"country_selection\", label: \"Botswana\" },\r\n    { id: \"country_selection\", label: \"Brazil\" },\r\n    { id: \"country_selection\", label: \"Brunei\" },\r\n    { id: \"country_selection\", label: \"Bulgaria\" },\r\n    { id: \"country_selection\", label: \"Burkina\" },\r\n    { id: \"country_selection\", label: \"Burundi\" },\r\n    { id: \"country_selection\", label: \"Cambodia\" },\r\n    { id: \"country_selection\", label: \"Cameroon\" },\r\n    { id: \"country_selection\", label: \"Canada\" },\r\n    { id: \"country_selection\", label: \"Cape Verde\" },\r\n    { id: \"country_selection\", label: \"Central African Rep\" },\r\n    { id: \"country_selection\", label: \"Chad\" },\r\n    { id: \"country_selection\", label: \"Chile\" },\r\n    { id: \"country_selection\", label: \"China\" },\r\n    { id: \"country_selection\", label: \"Colombia\" },\r\n    { id: \"country_selection\", label: \"Comoros\" },\r\n    { id: \"country_selection\", label: \"Congo\" },\r\n    { id: \"country_selection\", label: \"Congo {Democratic Rep}\" },\r\n    { id: \"country_selection\", label: \"Costa Rica\" },\r\n    { id: \"country_selection\", label: \"Croatia\" },\r\n    { id: \"country_selection\", label: \"Cuba\" },\r\n    { id: \"country_selection\", label: \"Cyprus\" },\r\n    { id: \"country_selection\", label: \"Czech Republic\" },\r\n    { id: \"country_selection\", label: \"Denmark\" },\r\n    { id: \"country_selection\", label: \"Djibouti\" },\r\n    { id: \"country_selection\", label: \"Dominica\" },\r\n    { id: \"country_selection\", label: \"Dominican Republic\" },\r\n    { id: \"country_selection\", label: \"East Timor\" },\r\n    { id: \"country_selection\", label: \"Ecuador\" },\r\n    { id: \"country_selection\", label: \"Egypt\" },\r\n    { id: \"country_selection\", label: \"El Salvador\" },\r\n    { id: \"country_selection\", label: \"Equatorial Guinea\" },\r\n    { id: \"country_selection\", label: \"Eritrea\" },\r\n    { id: \"country_selection\", label: \"Estonia\" },\r\n    { id: \"country_selection\", label: \"Ethiopia\" },\r\n    { id: \"country_selection\", label: \"Fiji\" },\r\n    { id: \"country_selection\", label: \"Finland\" },\r\n    { id: \"country_selection\", label: \"France\" },\r\n    { id: \"country_selection\", label: \"Gabon\" },\r\n    { id: \"country_selection\", label: \"Gambia\" },\r\n    { id: \"country_selection\", label: \"Georgia\" },\r\n    { id: \"country_selection\", label: \"Germany\" },\r\n    { id: \"country_selection\", label: \"Ghana\" },\r\n    { id: \"country_selection\", label: \"Greece\" },\r\n    { id: \"country_selection\", label: \"Grenada\" },\r\n    { id: \"country_selection\", label: \"Guatemala\" },\r\n    { id: \"country_selection\", label: \"Guinea\" },\r\n    { id: \"country_selection\", label: \"Guinea-Bissau\" },\r\n    { id: \"country_selection\", label: \"Guyana\" },\r\n    { id: \"country_selection\", label: \"Haiti\" },\r\n    { id: \"country_selection\", label: \"Honduras\" },\r\n    { id: \"country_selection\", label: \"Hungary\" },\r\n    { id: \"country_selection\", label: \"Iceland\" },\r\n    { id: \"country_selection\", label: \"India\" },\r\n    { id: \"country_selection\", label: \"Indonesia\" },\r\n    { id: \"country_selection\", label: \"Iran\" },\r\n    { id: \"country_selection\", label: \"Iraq\" },\r\n    { id: \"country_selection\", label: \"Ireland {Republic}\" },\r\n    { id: \"country_selection\", label: \"Israel\" },\r\n    { id: \"country_selection\", label: \"Italy\" },\r\n    { id: \"country_selection\", label: \"Ivory Coast\" },\r\n    { id: \"country_selection\", label: \"Jamaica\" },\r\n    { id: \"country_selection\", label: \"Japan\" },\r\n    { id: \"country_selection\", label: \"Jordan\" },\r\n    { id: \"country_selection\", label: \"Kazakhstan\" },\r\n    { id: \"country_selection\", label: \"Kenya\" },\r\n    { id: \"country_selection\", label: \"Kiribati\" },\r\n    { id: \"country_selection\", label: \"Korea North\" },\r\n    { id: \"country_selection\", label: \"Korea South\" },\r\n    { id: \"country_selection\", label: \"Kosovo\" },\r\n    { id: \"country_selection\", label: \"Kuwait\" },\r\n    { id: \"country_selection\", label: \"Kyrgyzstan\" },\r\n    { id: \"country_selection\", label: \"Laos\" },\r\n    { id: \"country_selection\", label: \"Latvia\" },\r\n    { id: \"country_selection\", label: \"Lebanon\" },\r\n    { id: \"country_selection\", label: \"Lesotho\" },\r\n    { id: \"country_selection\", label: \"Liberia\" },\r\n    { id: \"country_selection\", label: \"Libya\" },\r\n    { id: \"country_selection\", label: \"Liechtenstein\" },\r\n    { id: \"country_selection\", label: \"Lithuania\" },\r\n    { id: \"country_selection\", label: \"Luxembourg\" },\r\n    { id: \"country_selection\", label: \"Macedonia\" },\r\n    { id: \"country_selection\", label: \"Madagascar\" },\r\n    { id: \"country_selection\", label: \"Malawi\" },\r\n    { id: \"country_selection\", label: \"Malaysia\" },\r\n    { id: \"country_selection\", label: \"Maldives\" },\r\n    { id: \"country_selection\", label: \"Mali\" },\r\n    { id: \"country_selection\", label: \"Malta\" },\r\n    { id: \"country_selection\", label: \"Marshall Islands\" },\r\n    { id: \"country_selection\", label: \"Mauritania\" },\r\n    { id: \"country_selection\", label: \"Mauritius\" },\r\n    { id: \"country_selection\", label: \"Mexico\" },\r\n    { id: \"country_selection\", label: \"Micronesia\" },\r\n    { id: \"country_selection\", label: \"Moldova\" },\r\n    { id: \"country_selection\", label: \"Monaco\" },\r\n    { id: \"country_selection\", label: \"Mongolia\" },\r\n    { id: \"country_selection\", label: \"Montenegro\" },\r\n    { id: \"country_selection\", label: \"Morocco\" },\r\n    { id: \"country_selection\", label: \"Mozambique\" },\r\n    { id: \"country_selection\", label: \"Myanmar, {Burma}\" },\r\n    { id: \"country_selection\", label: \"Namibia\" },\r\n    { id: \"country_selection\", label: \"Nauru\" },\r\n    { id: \"country_selection\", label: \"Nepal\" },\r\n    { id: \"country_selection\", label: \"Netherlands\" },\r\n    { id: \"country_selection\", label: \"New Zealand\" },\r\n    { id: \"country_selection\", label: \"Nicaragua\" },\r\n    { id: \"country_selection\", label: \"Niger\" },\r\n    { id: \"country_selection\", label: \"Nigeria\" },\r\n    { id: \"country_selection\", label: \"Norway\" },\r\n    { id: \"country_selection\", label: \"Oman\" },\r\n    { id: \"country_selection\", label: \"Pakistan\" },\r\n    { id: \"country_selection\", label: \"Palau\" },\r\n    { id: \"country_selection\", label: \"Panama\" },\r\n    { id: \"country_selection\", label: \"Papua New Guinea\" },\r\n    { id: \"country_selection\", label: \"Paraguay\" },\r\n    { id: \"country_selection\", label: \"Peru\" },\r\n    { id: \"country_selection\", label: \"Philippines\" },\r\n    { id: \"country_selection\", label: \"Poland\" },\r\n    { id: \"country_selection\", label: \"Portugal\" },\r\n    { id: \"country_selection\", label: \"Qatar\" },\r\n    { id: \"country_selection\", label: \"Romania\" },\r\n    { id: \"country_selection\", label: \"Russian Federation\" },\r\n    { id: \"country_selection\", label: \"Rwanda\" },\r\n    { id: \"country_selection\", label: \"St Kitts & Nevis\" },\r\n    { id: \"country_selection\", label: \"St Lucia\" },\r\n    { id: \"country_selection\", label: \"Saint Vincent & the Grenadines\" },\r\n    { id: \"country_selection\", label: \"Samoa\" },\r\n    { id: \"country_selection\", label: \"San Marino\" },\r\n    { id: \"country_selection\", label: \"Sao Tome & Principe\" },\r\n    { id: \"country_selection\", label: \"Saudi Arabia\" },\r\n    { id: \"country_selection\", label: \"Senegal\" },\r\n    { id: \"country_selection\", label: \"Serbia\" },\r\n    { id: \"country_selection\", label: \"Seychelles\" },\r\n    { id: \"country_selection\", label: \"Sierra Leone\" },\r\n    { id: \"country_selection\", label: \"Singapore\" },\r\n    { id: \"country_selection\", label: \"Slovakia\" },\r\n    { id: \"country_selection\", label: \"Slovenia\" },\r\n    { id: \"country_selection\", label: \"Solomon Islands\" },\r\n    { id: \"country_selection\", label: \"Somalia\" },\r\n    { id: \"country_selection\", label: \"South Africa\" },\r\n    { id: \"country_selection\", label: \"South Sudan\" },\r\n    { id: \"country_selection\", label: \"Spain\" },\r\n    { id: \"country_selection\", label: \"Sri Lanka\" },\r\n    { id: \"country_selection\", label: \"Sudan\" },\r\n    { id: \"country_selection\", label: \"Suriname\" },\r\n    { id: \"country_selection\", label: \"Swaziland\" },\r\n    { id: \"country_selection\", label: \"Sweden\" },\r\n    { id: \"country_selection\", label: \"Switzerland\" },\r\n    { id: \"country_selection\", label: \"Syria\" },\r\n    { id: \"country_selection\", label: \"Taiwan\" },\r\n    { id: \"country_selection\", label: \"Tajikistan\" },\r\n    { id: \"country_selection\", label: \"Tanzania\" },\r\n    { id: \"country_selection\", label: \"Thailand\" },\r\n    { id: \"country_selection\", label: \"Togo\" },\r\n    { id: \"country_selection\", label: \"Tonga\" },\r\n    { id: \"country_selection\", label: \"Trinidad & Tobago\" },\r\n    { id: \"country_selection\", label: \"Tunisia\" },\r\n    { id: \"country_selection\", label: \"Turkey\" },\r\n    { id: \"country_selection\", label: \"Turkmenistan\" },\r\n    { id: \"country_selection\", label: \"Tuvalu\" },\r\n    { id: \"country_selection\", label: \"Uganda\" },\r\n    { id: \"country_selection\", label: \"Ukraine\" },\r\n    { id: \"country_selection\", label: \"United Arab Emirates\" },\r\n    { id: \"country_selection\", label: \"United Kingdom\" },\r\n    { id: \"country_selection\", label: \"United States\" },\r\n    { id: \"country_selection\", label: \"Uruguay\" },\r\n    { id: \"country_selection\", label: \"Uzbekistan\" },\r\n    { id: \"country_selection\", label: \"Vanuatu\" },\r\n    { id: \"country_selection\", label: \"Vatican City\" },\r\n    { id: \"country_selection\", label: \"Venezuela\" },\r\n    { id: \"country_selection\", label: \"Vietnam\" },\r\n    { id: \"country_selection\", label: \"Yemen\" },\r\n    { id: \"country_selection\", label: \"Zambia\" },\r\n    { id: \"country_selection\", label: \"Zimbabwe\" },\r\n]\r\n\r\nexport const HOURS24 = [\r\n    { id: 'hour_selection', label: '00' },\r\n    { id: 'hour_selection', label: '01' },\r\n    { id: 'hour_selection', label: '02' },\r\n    { id: 'hour_selection', label: '03' },\r\n    { id: 'hour_selection', label: '04' },\r\n    { id: 'hour_selection', label: '05' },\r\n    { id: 'hour_selection', label: '06' },\r\n    { id: 'hour_selection', label: '07' },\r\n    { id: 'hour_selection', label: '08' },\r\n    { id: 'hour_selection', label: '09' },\r\n    { id: 'hour_selection', label: '10' },\r\n    { id: 'hour_selection', label: '11' },\r\n    { id: 'hour_selection', label: '12' },\r\n    { id: 'hour_selection', label: '13' },\r\n    { id: 'hour_selection', label: '14' },\r\n    { id: 'hour_selection', label: '15' },\r\n    { id: 'hour_selection', label: '16' },\r\n    { id: 'hour_selection', label: '17' },\r\n    { id: 'hour_selection', label: '18' },\r\n    { id: 'hour_selection', label: '19' },\r\n    { id: 'hour_selection', label: '20' },\r\n    { id: 'hour_selection', label: '21' },\r\n    { id: 'hour_selection', label: '22' },\r\n    { id: 'hour_selection', label: '23' },\r\n]\r\n\r\nexport const TIME_PERIOD = [\r\n    { id: 'time_period_selection', label: 'AM' },\r\n    { id: 'time_period_selection', label: 'PM' },\r\n]\r\n\r\nexport const HOURS12 = [\r\n    { id: 'hour_selection', label: '01' },\r\n    { id: 'hour_selection', label: '02' },\r\n    { id: 'hour_selection', label: '03' },\r\n    { id: 'hour_selection', label: '04' },\r\n    { id: 'hour_selection', label: '05' },\r\n    { id: 'hour_selection', label: '06' },\r\n    { id: 'hour_selection', label: '07' },\r\n    { id: 'hour_selection', label: '08' },\r\n    { id: 'hour_selection', label: '09' },\r\n    { id: 'hour_selection', label: '10' },\r\n    { id: 'hour_selection', label: '11' },\r\n    { id: 'hour_selection', label: '12' },\r\n]\r\n\r\nexport const MINS = [\r\n    { id: 'min_selection', label: '00' },\r\n    { id: 'min_selection', label: '01' },\r\n    { id: 'min_selection', label: '02' },\r\n    { id: 'min_selection', label: '03' },\r\n    { id: 'min_selection', label: '04' },\r\n    { id: 'min_selection', label: '05' },\r\n    { id: 'min_selection', label: '06' },\r\n    { id: 'min_selection', label: '07' },\r\n    { id: 'min_selection', label: '08' },\r\n    { id: 'min_selection', label: '09' },\r\n    { id: 'min_selection', label: '10' },\r\n    { id: 'min_selection', label: '11' },\r\n    { id: 'min_selection', label: '12' },\r\n    { id: 'min_selection', label: '13' },\r\n    { id: 'min_selection', label: '14' },\r\n    { id: 'min_selection', label: '15' },\r\n    { id: 'min_selection', label: '16' },\r\n    { id: 'min_selection', label: '17' },\r\n    { id: 'min_selection', label: '18' },\r\n    { id: 'min_selection', label: '19' },\r\n    { id: 'min_selection', label: '20' },\r\n    { id: 'min_selection', label: '21' },\r\n    { id: 'min_selection', label: '22' },\r\n    { id: 'min_selection', label: '23' },\r\n    { id: 'min_selection', label: '24' },\r\n    { id: 'min_selection', label: '25' },\r\n    { id: 'min_selection', label: '26' },\r\n    { id: 'min_selection', label: '27' },\r\n    { id: 'min_selection', label: '28' },\r\n    { id: 'min_selection', label: '29' },\r\n    { id: 'min_selection', label: '30' },\r\n    { id: 'min_selection', label: '31' },\r\n    { id: 'min_selection', label: '32' },\r\n    { id: 'min_selection', label: '33' },\r\n    { id: 'min_selection', label: '34' },\r\n    { id: 'min_selection', label: '35' },\r\n    { id: 'min_selection', label: '36' },\r\n    { id: 'min_selection', label: '37' },\r\n    { id: 'min_selection', label: '38' },\r\n    { id: 'min_selection', label: '39' },\r\n    { id: 'min_selection', label: '40' },\r\n    { id: 'min_selection', label: '41' },\r\n    { id: 'min_selection', label: '42' },\r\n    { id: 'min_selection', label: '43' },\r\n    { id: 'min_selection', label: '44' },\r\n    { id: 'min_selection', label: '45' },\r\n    { id: 'min_selection', label: '46' },\r\n    { id: 'min_selection', label: '47' },\r\n    { id: 'min_selection', label: '48' },\r\n    { id: 'min_selection', label: '49' },\r\n    { id: 'min_selection', label: '50' },\r\n    { id: 'min_selection', label: '51' },\r\n    { id: 'min_selection', label: '52' },\r\n    { id: 'min_selection', label: '53' },\r\n    { id: 'min_selection', label: '54' },\r\n    { id: 'min_selection', label: '55' },\r\n    { id: 'min_selection', label: '56' },\r\n    { id: 'min_selection', label: '57' },\r\n    { id: 'min_selection', label: '58' },\r\n    { id: 'min_selection', label: '59' },\r\n]\r\n\r\nexport const MINS_BY_5 = [\r\n    { id: 'min_selection', label: '00' },\r\n    { id: 'min_selection', label: '05' },\r\n    { id: 'min_selection', label: '10' },\r\n    { id: 'min_selection', label: '15' },\r\n    { id: 'min_selection', label: '20' },\r\n    { id: 'min_selection', label: '25' },\r\n    { id: 'min_selection', label: '30' },\r\n    { id: 'min_selection', label: '35' },\r\n    { id: 'min_selection', label: '40' },\r\n    { id: 'min_selection', label: '45' },\r\n    { id: 'min_selection', label: '50' },\r\n    { id: 'min_selection', label: '55' },\r\n]","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Axios from 'axios';\nimport { USERS_CREATE } from '../../../services/rest_end_points';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LOGIN_URL } from '../../../router/constants';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './register.css';\nimport { withRouter } from 'react-router-dom';\nimport Inputfield from '../../../components/inputfield';\nimport { BLOOD_GROUPS_OPTIONS, GENDER_OPTIONS, ROLES_OPTIONS } from '../../../utils/constant_data';\nimport notify from 'notify'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first_name: { value: '', error: false },\n            last_name: { value: '', error: false },\n            email: { value: '', error: false },\n            password: { value: '', error: false },\n            verify_password: { value: '', error: false },\n            gender: { value: '', error: false },\n            dob: { value: '', error: false },\n            blood_group: { value: '', error: false },\n            role: { value: '', error: false },\n            phone_number: { value: '', error: false },\n            cnic: { value: '', error: false },\n            address: { value: '', error: false },\n            loading_status: false,\n            role_select_modal_visibility: false,\n\n            current_page: 0,\n        }\n    }\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'first_name_text_input':\n                this.setState({ first_name: { value: e.target.value, error: false } })\n                break;\n            case 'last_name_text_input':\n                this.setState({ last_name: { value: e.target.value, error: false } })\n                break;\n            case 'cnic_text_input':\n                if (e.target.value.length <= 13)\n                    this.setState({ cnic: { value: e.target.value, error: false } })\n                break;\n            case 'phone_number_text_input':\n                if (e.target.value.length <= 11)\n                    this.setState({ phone_number: { value: e.target.value, error: false } })\n                break;\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } })\n                break;\n            case 'password_text_input':\n                this.setState({ password: { value: e.target.value, error: false } })\n                break;\n            case 'verify_password_text_input':\n                this.setState({ verify_password: { value: e.target.value, error: false } })\n                break;\n            case 'address_text_input':\n                this.setState({ address: { value: e.target.value, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_date_of_birth_change = (e) => {\n\n        if (e === '')\n            this.setState({ dob: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ dob: { value: configured_date } })\n            }\n        }\n    }\n    on_selected_changed = (e) => {\n        switch (e.id) {\n            case 'blood_group_selection':\n                this.setState({ blood_group: { value: e.label, error: false } })\n                break;\n            case 'gender_selection':\n                this.setState({ gender: { value: e.label, error: false } })\n                break;\n            case 'role_selection':\n                this.setState({ role: { value: e.label, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    check_input = (input,required = true,only_alpha=false,only_numbers=false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required  && input === ''){\n            return true;\n        }\n        if (only_alpha && !input.match(alphabets)){\n            return true;\n        }\n        if (only_numbers && !input.match(numbers)){\n            return true;\n        }\n        return false;\n    }\n\n    check_hard_constraints = (input,include=\"\",length_check=\"default\",val=-1) => {\n        if (!input.includes(include)) {\n            return true;\n        }\n        switch(length_check){\n            case 'eq':\n                if (input.length !== val){\n                    return true\n                }\n                break;\n            case 'min':\n                if (input.length < val){\n                    return true\n                }\n                break;\n            case 'max':\n                if (input.length > val){\n                    return true\n                }\n                break;\n            default:\n                break\n        }\n        return false;\n    }\n\n    on_submit = async (e) => {\n        this.setState({ loading_status: true })\n            \n        let error = false\n        if(this.check_input(this.state.first_name.value,true,true,false)){\n            this.setState({ current_page: 0, first_name: { value: this.state.first_name.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.last_name.value,true,true,false)){\n            this.setState({ current_page: 0, last_name: { value: this.state.last_name.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.email.value,true,false,false) || this.check_hard_constraints(this.state.email.value,\"@\")){\n            this.setState({ current_page: 0, email: { value: this.state.email.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.phone_number.value,true,false,true) || this.check_hard_constraints(this.state.phone_number.value,\"\",\"eq\",11)){\n            this.setState({ current_page: 0, phone_number: { value: this.state.phone_number.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.password.value,true,false,false) || this.check_hard_constraints(this.state.password.value,\"\",\"min\",8)){\n            this.setState({ current_page: 1, password: { value: this.state.password.value, error: true}})\n            error = true;\n        }\n        if (this.state.password.value !== this.state.verify_password.value){\n            this.setState({ \n                password: { value: this.state.password.value, error: true },\n                verify_password: { value: this.state.verify_password.value, error: true },\n                current_page: 1, \n            })\n            error = true;\n        }\n        if(this.check_input(this.state.cnic.value,true,false,true) || this.check_hard_constraints(this.state.cnic.value,\"\",\"eq\",13)){\n            this.setState({ current_page: 2, cnic: { value: this.state.cnic.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.dob.value,true,false,false)){\n            this.setState({ current_page: 2, dob: { value: this.state.dob.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.address.value,true,false,false)){\n            this.setState({ current_page: 2, address: { value: this.state.address.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.role.value,true,true,false)){\n            this.setState({ current_page: 3, role: { value: this.state.role.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.gender.value,true,true,false)){\n            this.setState({ current_page: 3, gender: { value: this.state.gender.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.blood_group.value,true,false,false)){\n            this.setState({ current_page: 3, blood_group: { value: this.state.blood_group.value, error: true}})\n            error = true;\n        }\n        if (error === true){\n            notify('error','','Invalid info')\n            this.setState({ loading_status: false })\n            return\n        }\n        const data = {\n            first_name: this.state.first_name.value.trim(),\n            last_name: this.state.last_name.value.trim(),\n            email: this.state.email.value.trim(),\n            password: this.state.password.value.trim(),\n            verify_password: this.state.verify_password.value.trim(),\n            phone_number: this.state.phone_number.value.trim(),\n            cnic: this.state.cnic.value.trim(),\n            role: this.state.role.value.trim(),\n            dob: this.state.dob.value,\n            gender: this.state.gender.value.trim(),\n            blood_group: this.state.blood_group.value.trim(),\n            address: this.state.address.value.trim()\n        }\n        const response = await Axios.post(USERS_CREATE, data);\n        try {\n            if (response.data['status']) {\n                notify('success', '', response.data['message']);\n                this.props.history.push(LOGIN_URL);\n            }\n            else {\n                notify('error', '', response.data['message'])\n                this.setState({ loading_status: false })\n            }\n        }\n        catch (err) {\n            notify('error', '', 'We are sorry for invonvenience. Server is not responding! please try again later')\n            this.setState({ loading_status: false })\n        }\n    }\n\n    \n    next_button_click = (e) => {\n        e.preventDefault()\n        if (this.state.current_page < 3){\n            this.setState({current_page: this.state.current_page + 1})\n        }\n        else if (this.state.current_page === 3){\n            this.on_submit()\n        } \n    }\n    back_button_click = (e) => {\n        if (this.state.current_page >= 0)\n            this.setState({current_page: this.state.current_page - 1})\n    }\n\n    render() {\n        const loader = <div className=\"mt-3\">\n                            <div className=\"d-flex justify-content-center \">\n                                <Loader\n                                    type=\"Rings\"\n                                    color=\"#00BFFF\"\n                                    height={150}\n                                    width={150}\n                                    timeout={60000} //60 secs\n                                />\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                                <p>Loading...</p>\n                            </div>\n                        </div>\n        let to_render_page = loader\n        if (this.state.loading_status) {\n            to_render_page = loader\n        }\n        else {\n\n            const name_and_email_and_phone = <div className={``}>\n                    <Inputfield\n                            id={'email_text_input'}\n                            label_tag={'Email'}\n                            placeholder={\"someone@hello.com\"}\n                            icon_class={'icon-envelop'}\n                            input_type={'email'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.email.value}\n                            error={this.state.email.error}\n                        />\n                    <Inputfield\n                            id={`first_name_text_input`}\n                            label_tag={'First name'}\n                            placeholder=\"Enter your first name\"\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.first_name.value}\n                            error={this.state.first_name.error}\n                        />\n                    <Inputfield\n                            id={`last_name_text_input`}\n                            label_tag={'Last name'}\n                            placeholder=\"Enter your last name\"\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.last_name.value}\n                            error={this.state.last_name.error}\n                        />\n                    <Inputfield\n                            id={`phone_number_text_input`}\n                            label_tag={'Phone Number'}\n                            placeholder=\"Enter your phone number\"\n                            icon_class={'icon-phone2'}\n                            input_type={'number'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.phone_number.value}\n                            error={this.state.phone_number.error}\n                        />\n                </div>      \n            const password_and_verification = <div className={``}>\n                        <Inputfield\n                                id={`password_text_input`}\n                                label_tag={'Password'}\n                                placeholder=\"Enter password\"\n                                icon_class={'icon-user-lock'}\n                                input_type={'password'}\n                                on_text_change_listener={this.on_text_field_change}\n                                default_value={this.state.password.value}\n                                error={this.state.password.error}\n                            />\n                        <Inputfield\n                                id={`verify_password_text_input`}\n                                label_tag={'Verify Password'}\n                                placeholder=\"Re-enter password\"\n                                icon_class={'icon-user-lock'}\n                                input_type={'password'}\n                                on_text_change_listener={this.on_text_field_change}\n                                default_value={this.state.verify_password.value}\n                                error={this.state.verify_password.error}\n                            />\n                </div>\n            const date_of_birth_and_cnic_address = <div className={``}>\n                    <Inputfield \n                        id={`cnic_text_input`}\n                        label_tag={'CNIC'}\n                        placeholder=\"Enter your cnic\"\n                        icon_class={'icon-vcard'}\n                        input_type={'text'}\n                        on_text_change_listener={this.on_text_field_change}\n                        default_value={this.state.cnic.value}\n                        error={this.state.cnic.error}\n                        />\n                    {/* <div className=\"form-group row\">\n                        <label className=\"col-form-label-lg\">Date of birth</label>\n                        <div className={`input-group`}>\n                            <span className=\"input-group-prepend\">\n                                <span className=\"input-group-text\"><i className={'icon-calendar3'}/></span>\n                            </span>\n                            <DateTimePicker id=\"dob_text_input\"\n                                onChange={this.on_date_of_birth_change}\n                                className=\"clock_datatime_picker form-control form-control-lg \"\n                                inputProps={{ placeholder: 'Select your date of birth', width: '100%', className: 'border-0' }}\n                                input={true}\n                                dateFormat={'ll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.dob.value}\n                            />\n                        </div>\n                    </div> */}\n                    <Inputfield \n                        id={`dob_text_input`}\n                        label_tag={'Date of birth'}\n                        icon_class={'icon-calendar3'}\n                        placeholder=\"Date of birth\"\n                        input_type={'text'}\n                        field_type=\"date-time\"\n                        date_format={'ll'}\n                        time_format={false}\n                        on_text_change_listener={this.on_date_of_birth_change}\n                        default_value={this.state.dob.value}\n                        error={this.state.dob.error}\n                        />\n                    <Inputfield\n                        id={`address_text_input`}\n                        label_tag={'What is your current address'}\n                        placeholder=\"Enter your address\"\n                        icon_class={'icon-home'}\n                        input_type={'text'}\n                        on_text_change_listener={this.on_text_field_change}\n                        default_value={this.state.address.value}\n                        error={this.state.address.error}\n                        field_type={'text-area'}\n                    />\n                    \n                </div>\n            const role_gender_and_blood_group = <div className={``}>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">What is your blood group</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-droplet'}/></span>\n                        </span>\n                        <Select\n                            className=\"w-75\"\n                            options={BLOOD_GROUPS_OPTIONS}\n                            classNamePrefix={``}\n                            components={makeAnimated()}\n                            placeholder=\"Select blood group\"\n                            id=\"blood_group_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">Specify your gender</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-man-woman'}/></span>\n                        </span>\n\n                        <Select\n                            className=\"w-75\"\n                            options={GENDER_OPTIONS}\n                            components={makeAnimated()}\n                            classNamePrefix={``}\n                            placeholder=\"Select gender\"\n                            id=\"gender_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">How you want to go into this</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-user-tie'}/></span>\n                        </span>\n                            \n                        <Select\n                            className=\"w-75\"\n                            options={ROLES_OPTIONS}\n                            classNamePrefix={``}\n                            placeholder=\"Select role\"\n                            id=\"role_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n            </div>\n            \n            if (this.state.current_page === 0){\n                to_render_page = name_and_email_and_phone\n            }\n            else if (this.state.current_page === 1){\n                to_render_page = password_and_verification\n            }\n            else if (this.state.current_page === 2){\n                to_render_page = date_of_birth_and_cnic_address\n            }\n            else{\n                to_render_page = role_gender_and_blood_group\n            }\n\n        }\n        return (\n            // <Container container_type={'register'}>\n                <div className={`container-fluid`}>\n                    <div className={`row`}>\n                        <div className={`col-lg-4 col-md-6 p-0`} >\n                            <form method=\"post\" action={this.next_button_click}>\n                                <div className={`card m-0 `} style={{height: '100vh'}}>\n                                    <div className={`card-header text-center h4 font-weight-light`}>\n                                        <span>Sign up</span>\n                                        <hr/>\n                                    </div>\n\n                                    <div className={`card-body px-5`}>                   \n                                        {to_render_page}\n                                    </div>\n\n                                    <div className={`row card-footer`}>\n                                        \n                                        \n                                        <div className=\"col-4\">\n                                            <button  \n                                                id=\"back_button\"\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-teal-400 btn-labeled btn-labeled-left pl-5 mr-2\"                                        \n                                                style={{ textTransform: \"inherit\", display: this.state.current_page === 0? 'none': 'inline'}}\n                                                onClick={this.back_button_click}>\n                                                <b><i className=\"icon-arrow-left13\"/></b>\n                                                Back\n                                            </button>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-danger btn-labeled btn-labeled-right pr-5 mr-2\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={() => this.props.history.push(LOGIN_URL)}>\n                                                <b><i className=\"icon-cross\"></i></b>\n                                                Cancel\n                                            </button>\n                                        </div>\n                                        <div className={`col-4`}>\n                                            <button\n                                                type=\"submit\"\n                                                className={`btn btn-block bg-teal-400 btn-labeled btn-labeled-right pr-5`}\n                                                id=\"next_button\"\n                                                onClick={this.next_button_click}>\n                                                {\n                                                    this.state.current_page === 3? <b><i className=\"icon-plus3\"></i></b>:\n                                                            <b><i className=\"icon-arrow-right14\"></i></b>\n                                                }\n                                                {\n                                                    this.state.current_page === 3? \"Register\":'Next'\n                                                }\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div className={`col-lg-8 col-md-6 d-none d-lg-block d-xl-block d-md-block background_custom`} style={{height:'100vh'}}>\n                                            \n                        </div>\n                    </div>\n                </div>\n            // </Container>\n        );\n    }\n}\nexport default withRouter(Register);","import React, { Fragment, useState } from 'react'\nimport Inputfield from '../../../components/inputfield';\nimport { withRouter } from 'react-router-dom';\n\n\nfunction ForgotPassword(props) {\n\n    const [email,set_email] = useState('')\n    const [error,set_error] = useState(false)\n\n    function on_change(e) {\n        set_email(e.target.value)\n        set_error(false)\n    }\n\n    function on_submit() {\n        if (email === '')\n            set_error(true)\n            return\n        \n        // props.history.push(LOGIN_URL)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"card shadow w-lg-50 w-md-75 w-100\">\n                <div className=\"card-header\">\n                    <h4>Reset your password</h4>\n                </div>\n                <div className=\"card-body px-4\" >\n                    <Inputfield\n                        id=\"email_text_input\"\n                        label_tag=\"Email\"\n                        placeholder=\"Enter your email\"\n                        icon_class=\"icon-envelop\"\n                        type={'email'}\n                        onChange={(e) => on_change(e)}\n                        defaultValue={email}\n                        error={error}\n                    />\n                </div>\n                \n                <div className=\"card-footer\">\n                    <button className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 float-right\"\n                        onClick={() => on_submit()}>\n                        <b><i className=\"icon-user-check\" /></b>\n                        Submit Request\n                    </button>\n                </div>\n                \n            </div>\n            \n        </Fragment>\n    )\n}\nexport default withRouter(ForgotPassword);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggle_sidebar_menu_collapse } from '../../redux/actions';\r\n\r\nclass Settings extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    menu_style_change = (e) => {\r\n        console.log('settings menu styke change', e.target)\r\n        this.props.toggle_sidebar_menu_collapse();\r\n        console.log('props settings', this.props.settings);\r\n    }\r\n\r\n    render() {\r\n        console.log('props settings', this.props.settings);\r\n        return(\r\n                <div className={`row`}>\r\n                    <div className={`col-lg-6`}>\r\n                        <div className={`d-flex`}>\r\n                            <span className={`font-weight-bold mr-3`}>Menu Style</span>\r\n                            <div className=\"form-check mr-2\">\r\n                                <label className=\"form-check-label\">\r\n                                    <div className=\"uniform-checker\">\r\n                                        <span className={this.props.settings.left_sidebar_collapsed ? 'checked' : ''}>\r\n                                            <input type=\"checkbox\"\r\n                                                name=\"is_active\"\r\n                                                id=\"user_is_active\"\r\n                                                onChange={this.menu_style_change}\r\n                                                className=\"form-input-styled\" />\r\n                                        </span>\r\n                                    </div>\r\n                                    Collapsed\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check mb-0\">\r\n                                <label className=\"form-check-label\">\r\n                                    <div className=\"uniform-checker\">\r\n                                        <span className={this.props.settings.left_sidebar_collapsed ? '' : 'checked'}>\r\n                                            <input type=\"checkbox\"\r\n                                                name=\"is_active\"\r\n                                                id=\"user_is_active\"\r\n                                                onChange={this.menu_style_change}\r\n                                                className=\"form-input-styled\" />\r\n                                        </span>\r\n                                    </div>\r\n                                    UnCollapsed (Experimental)\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction map_state_to_props(state){\r\n    return {\r\n        settings: state.settings\r\n    }\r\n}\r\n\r\nexport default connect(map_state_to_props, { toggle_sidebar_menu_collapse })(Settings)","import _ from 'lodash';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport moment from 'moment'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\n\r\nfunction customReducer(state, action) {\r\n    // console.log('state', state);\r\n    // console.log('action', action);\r\n    switch (action.type) {\r\n        case 'CHANGE_SORT':\r\n            if (state.column === action.column) {\r\n                return {\r\n                    ...state,\r\n                    data: state.data.reverse(),\r\n                    direction: state.direction === 'ascending' ? 'descending' : 'ascending',\r\n                }\r\n            }\r\n\r\n            return {\r\n                column: action.column,\r\n                data: _.sortBy(state.data, [action.column]),\r\n                direction: 'ascending',\r\n            }\r\n        case 'UPDATE_DATA':\r\n            return {\r\n                ...state,\r\n                data: _.sortBy(action.data, [action.column]),\r\n            }\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nfunction CustomTable(props) {\r\n    const isInitialMount = useRef(true);\r\n    const [state, dispatch] = React.useReducer(customReducer, {\r\n        column: null,\r\n        data: props.rows,\r\n        direction: null,\r\n    })\r\n    const { column, data, direction } = state\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n            // console.log('component did mount')\r\n        }\r\n        else {\r\n            // console.log('component did update')\r\n            dispatch({ type: 'UPDATE_DATA', data: props.rows },)\r\n        }\r\n\r\n    }, [props.rows])\r\n\r\n    function isDate(dateStr) {\r\n        return !isNaN(new Date(dateStr).getDate());\r\n    }\r\n    const parse_item = (item) => {\r\n        if (typeof (item) === 'boolean') {\r\n            return item ? <i className={`icon-check2 bg-success`} /> : <i className={`icon-cross2 bg-danger`} />\r\n        }\r\n        else if (typeof (item) === 'string') {\r\n            if (isDate(item)) {\r\n                return moment(item).format('ll')\r\n            }\r\n            else if (item === \"\") {\r\n                return <i className={`icon-dash`} />\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        }\r\n        else {\r\n            if (item === null)\r\n                return <i className={`icon-dash`} />\r\n            return item\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Table sortable stackable celled textAlign=\"center\" size=\"large\" collapsing>\r\n            <Table.Header className={`bg-dark`}>\r\n                <Table.Row>\r\n                    {\r\n                        Object.keys(props.headCells).map((item, i) => {\r\n                            return (\r\n                                <Table.HeaderCell key={i}\r\n                                    sorted={column === props.headCells[item].id ? direction : null}\r\n                                    onClick={() => dispatch({ type: 'CHANGE_SORT', column: props.headCells[item].id })}>\r\n                                    {props.headCells[item].label}\r\n                                </Table.HeaderCell>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {\r\n                    props.loading ?\r\n                        <Table.Row>\r\n                            <Table.Cell colSpan={props.headCells.length} className={`px-0`}>\r\n                                <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n                                    <Skeleton className=\"mb-1\" count={7} height={40} />\r\n                                </SkeletonTheme>\r\n                            </Table.Cell>\r\n                        </Table.Row> : (\r\n                            data.length === 0 ?\r\n                                <Table.Row>\r\n                                    <Table.Cell className={`px-0`} colSpan={props.headCells.length}>\r\n                                        <div className=\"alert alert-info mt-2 w-100\" >\r\n                                            <strong>Info!</strong> No data found.\r\n                                        </div>\r\n                                    </Table.Cell>\r\n                                </Table.Row> :\r\n                                data.map((item, i) => (\r\n                                    <Table.Row key={i}>\r\n                                        {\r\n                                            Object.keys(item).map((cell, k) => {\r\n                                                return (\r\n                                                    <Table.Cell key={k}>\r\n                                                        {\r\n                                                            parse_item(item[cell])\r\n                                                        }\r\n                                                        {\r\n                                                            // console.log('object', item[cell], 'type', typeof (item[cell]))\r\n                                                        }\r\n                                                    </Table.Cell>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Table.Row>\r\n                                ))\r\n                        )\r\n                }\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default CustomTable","export const Ucfirst = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport const shift_timezone_to_pakistan = (date) => {\n    // console.log('DATE raw object', date)\n    const temp = new Date(date);\n    // -300 is the value in gmt +5:00 which is the local timezone for pakistan\n    // 60000 is multiplied to convert hours into seconds\n    //  getTime() returns seconds\n    // if (temp.getTimezoneOffset() !== -300) {\n    //     console.log('date change')\n    return new Date(temp.getTime() - (-300 * 60000));\n    // console.log('date',updated_date)\n    // return updated_date;\n}\n\nexport const get_utc_date = (input_date) => {\n\n    var date = new Date(input_date);\n    var now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\n        date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\n    return new Date(now_utc);\n}\n\nexport const convert_object_array_to_string = (array, key_to_select) => {\n    return array.map((item) => {\n        return item[key_to_select]\n    }).toString();\n}","import React from 'react'\r\n\r\n\r\n\r\nfunction Button(props) {\r\n    let color = 'bg-teal-400';\r\n    switch(props.color) {\r\n        case 'default':\r\n            color = 'bg-teal-400';\r\n            break;\r\n        case 'red':\r\n            color = 'bg-danger';\r\n            break;\r\n        case 'black':\r\n            color = 'bg-dark';\r\n            break;\r\n        case 'gray':\r\n            color = 'bg-secondary';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <button\r\n            {...props}\r\n            className={`btn ${color} btn-labeled btn-labeled-right pr-5 ${props.fuklWidth? 'btn-block': ''} ${props.className}`}\r\n            style={{ textTransform: \"inherit\" }}\r\n            >\r\n            <b><i className={props.icon}></i></b>\r\n            {\r\n                props.children\r\n            }\r\n        </button>\r\n    )\r\n}\r\nexport default Button;","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Loading(props) {\r\n    const custom = props.custom\r\n    return (\r\n        props.custom? <Loader type=\"Rings\" color={custom.color} height={props.size} width={props.size} timeout={custom.timeout} />:\r\n        <div className=\"d-flex justify-content-center\">\r\n            <Loader\r\n                type=\"Rings\"\r\n                color=\"#00BFFF\"\r\n                height={props.size}\r\n                width={props.size}\r\n                timeout={120000} //120 secs\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React from 'react'\r\n\r\n\r\n\r\nfunction IconButton(props) {\r\n    let color = 'bg-teal-400 border-teal-400 text-teal-400';\r\n    let btn_type = 'btn-outline';\r\n    let size = \"btn-lg\";\r\n\r\n    switch(props.variant) {\r\n        case 'outlined':\r\n            btn_type = 'btn-outline'\r\n            break;\r\n        case 'filled':\r\n            btn_type = ''\r\n            break;\r\n        default: \r\n            btn_type = 'btn-outline'\r\n            break;\r\n    }\r\n    switch(props.color) {\r\n        case 'red':\r\n            color = btn_type === 'btn-outline'? 'bg-danger border-danger text-danger': 'btn-danger';\r\n            break;\r\n        case 'black':\r\n            color = btn_type === 'btn-outline'? 'bg-dark border-dark text-dark' : 'btn-dark';\r\n            break;\r\n        case 'gray':\r\n            color = btn_type === 'btn-outline'? 'bg-secondary border-secondary text-secondary' : 'btn-secondary';\r\n            break;\r\n        default:\r\n            color = btn_type === 'btn-outline'? 'bg-teal-400 border-teal-400 text-teal-400' : 'bg-teal-400 text-white';\r\n            break;\r\n    }\r\n    switch(props.size) {\r\n        case 'md':\r\n            size = 'btn-md'\r\n            break;\r\n        case 'sm':\r\n            size = 'btn-sm'\r\n            break;\r\n        case 'lg':\r\n            size = 'btn-lg';\r\n            break;\r\n        default: \r\n            size = 'btn-sm'\r\n            break;\r\n    }\r\n\r\n    const className = `btn ${btn_type} ${size} ${color} btn-icon ${props.className}`\r\n\r\n    // console.log('className', className)\r\n    return (\r\n        <button {...props} className={className}>\r\n            <i className={props.icon}></i>\r\n        </button>\r\n    )\r\n}\r\nexport default IconButton;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { set_active_page } from '../../../redux/actions';\nimport { BASE_URL } from '../../../router/constants';\nimport { ADMIN_CREATE_DOCTOR, ADMIN_DELETE_DOCTOR, ADMIN_UPDATE_DOCTOR, USERS_BASE_URL } from '../../../services/rest_end_points';\nimport CustomTable from '../../../shared/customs/CustomTable';\nimport Axios from 'axios';\nimport { Ucfirst } from '../../../utils/functions';\nimport Button from '../../../components/button';\nimport Modal from 'react-bootstrap4-modal';\nimport Inputfield from '../../../components/inputfield';\nimport { BLOOD_GROUPS_OPTIONS, CITIES, COUTRIES, GENDER_OPTIONS } from '../../../utils/constant_data';\nimport Loading from '../../../components/loading';\nimport IconButton from '../../../components/icon-button';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport notify from 'notify'\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'phone_number', numeric: false, disablePadding: false, label: 'Phone#' },\n    { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n    { id: 'consultancy_fee', numeric: true, disablePadding: false, label: 'Consultancy' },\n    { id: 'consultancy_percentage', numeric: false, disablePadding: false, label: 'Percentage' },\n    { id: 'gender', numeric: false, disablePadding: false, label: 'Gender' },\n    { id: 'active', numeric: false, disablePadding: false, label: 'Active' },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions' },\n];\n\nclass SearchDoctors extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            loading: true,\n            addNewDoctorModalLoading: false,\n\n            rows: [],\n            addNewModalVisibility: false,\n            addNewSpecialityModalVisibility: false,\n            addNewDegreeModalVisibility: false,\n            addNewScheduleModalVisibility: false,\n\n            user_first_name: { value: '', error: false },\n            user_last_name: { value: '', error: false },\n            user_phone_number: { value: '', error: false },\n            user_dob: { value: '', error: false },\n            user_cnic: { value: '', error: false },\n            user_email: { value: '', error: false },\n\n            user_country: { value: 'Pakistan', error: false },\n            user_city: { value: 'Lahore', error: false },\n            user_address: { value: '', error: false },\n\n            user_gender: { value: 'Male', error: false },\n            user_blood_group: { value: 'Unknown', error: false },\n            user_role: { value: 'Doctor', error: false },\n\n            user_consultancy_fee: { value: '1500', error: false },\n            user_consultancy_percentage: { value: '70', error: false },\n            user_is_active: { value: true, error: false },\n\n            speciality_description: { value: '', error: false },\n            degree_description: { value: '', error: false },\n\n            user_specialities: [],\n\n            user_degrees: [],\n            user_schedule: [],\n\n            mode: 'create',\n            toUpdateDoctorId: '',\n\n            counts: {\n                total: 0,\n                active: 0,\n                deactive: 0,\n            }\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                            Search\n                        </Link>, <span className=\"breadcrumb-item active\">Doctors</span>]\n        this.props.set_active_page(routes)\n        this.load_doctors()\n    }\n\n\n    on_edit_doctor = (doctor) => {\n        this.setState({\n            mode: 'update',\n            toUpdateDoctorId: doctor.doctor._id,\n            addNewModalVisibility: true,\n\n            user_first_name: { value: doctor.doctor.first_name, error: false },\n            user_last_name: { value: doctor.doctor.last_name, error: false },\n            user_phone_number: { value: doctor.doctor.phone_number, error: false },\n            user_dob: { value: doctor.doctor.date_of_birth, error: false },\n            user_cnic: { value: doctor.doctor.cnic, error: false },\n            user_email: { value: doctor.doctor.email, error: false },\n\n            user_country: { value: doctor.doctor.country, error: false },\n            user_city: { value: doctor.doctor.city, error: false },\n            user_address: { value: doctor.doctor.address, error: false },\n\n            user_gender: { value: doctor.doctor.gender, error: false },\n            user_blood_group: { value: doctor.doctor.blood_group, error: false },\n            user_role: { value: 'Doctor', error: false },\n\n            user_consultancy_fee: { value: doctor.details.consultancy_fee, error: false },\n            user_consultancy_percentage: { value: doctor.details.consultancy_percentage, error: false },\n            user_is_active: { value: doctor.doctor.is_active, error: false },\n\n            user_specialities: doctor.details.specialities,\n\n            user_degrees: doctor.details.degrees,\n            user_schedule: doctor.details.schedule,\n\n        }, () => console.log('state', this.state));\n    }\n\n    on_delete_doctor = (id) => {\n        confirmAlert({\n            title: \"Deactivate doctor\",\n            message: 'Are you sure you want to deactivate this doctor?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        Axios\n                            .delete(`${ADMIN_DELETE_DOCTOR}?tag=${id}`)\n                            .then(() => {\n                                // this.setState({ loading: true }, () => {\n                                    this.reset_state()\n                                    this.load_doctors()\n                                // })\n                                notify('success', '', 'Successfully deleted doctor');\n                            })\n                            .catch(err => {\n                                console.log('error', err);\n                                notify('error', '', err.toString())\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: () => console.log('no selected')//notify('info', '', 'Doctor not deleted')\n                }\n            ]\n        })\n        \n    }\n\n    load_doctors = () => {\n        const query = `${USERS_BASE_URL}?role=Doctor&active=all`\n        Axios.get(query).then(_doctors => {\n            if (_doctors.data) {\n                _doctors = _doctors.data.payload;\n                console.log('doctors', _doctors);\n                const counts = {\n                    total: 0,\n                    active: 0,\n                    deactive: 0,\n                }\n                const temp = []\n                for (let i = 0; i < _doctors.length; ++i) {\n                    temp.push({\n                        name: `Dr. ${Ucfirst(_doctors[i].doctor.first_name)} ${Ucfirst(_doctors[i].doctor.last_name)}`,\n                        phone_number: _doctors[i].doctor.phone_number,\n                        email: _doctors[i].doctor.email,\n                        consultancy_fee: _doctors[i].details.consultancy_fee,\n                        consultancy_percentage: `${_doctors[i].details.consultancy_percentage}% cut`,\n                        gender: _doctors[i].doctor.gender === 'Male' ? <span className={`badge badge-primary`}>Male</span> : <span className={`badge bg-pink-400`}>Female</span>,\n                        active: _doctors[i].doctor.is_active,\n                        actions: <div className={`d-flex`}>\n                            <IconButton \n                                icon=\"icon-pencil\" className={`mx-1`} \n                                onClick={() => this.on_edit_doctor(_doctors[i])}/>\n                            {\n                                _doctors[i].doctor.is_active ? <IconButton\n                                    color=\"red\"\n                                    icon=\"icon-cross\"\n                                    onClick={() => this.on_delete_doctor(_doctors[i].doctor._id)} /> : ''\n                            }\n                        </div>\n                    })\n                    counts.total += 1;\n                    if (_doctors[i].doctor.is_active) {\n                        counts.active += 1;\n                    }\n                    else {\n                        counts.deactive += 1;\n                    }\n                    if (i === _doctors.length - 1) {\n                        this.setState({ rows: temp, loading: false, counts: counts });\n                    }\n                }\n                if (_doctors.length === 0) {\n                    this.setState({ rows: temp, loading: false });\n                }\n            }\n            this.setState({ loading: false })\n        })\n        .catch(err => {\n            notify('error', '', err.toString());\n            this.setState({ loading: false })\n        })\n    }\n\n    on_text_field_change = (e) => {\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } })\n    }\n\n    on_selected_changed = (e, actor) => {\n        this.setState({ [actor]: { value: e !== null ? e.label : '', error: false } })\n    }\n    on_user_date_of_birth_change = (e) => {\n        if (e === '')\n            this.setState({ user_dob: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ user_dob: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    on_checkbox_change = (e) => {\n        this.setState({ [e.target.id]: { value: !e.target.checked, error: false }})\n    }\n\n    delete_item = (index, id) => {\n        const temp = this.state[id];\n        temp.splice(index, 1);\n        this.setState({ [id]: temp })\n    }\n\n    toggle_modal = (identity) => {\n        this.setState({ [identity]: !this.state[identity] })\n    }\n\n    add_item = (item, id) => {\n        const temp = this.state[id];\n        temp.push({ description: item });\n        this.setState({\n            [id]: temp,\n            speciality_description: { value: '', error: false },\n            degree_description: { value: '', error: false },\n            addNewDegreeModalVisibility: false,\n            addNewSpecialityModalVisibility: false,\n        });\n    }\n\n    reset_state = () => {\n        this.setState({\n            addNewModalVisibility: false,\n            addNewSpecialityModalVisibility: false,\n            addNewDegreeModalVisibility: false,\n            addNewScheduleModalVisibility: false,\n\n            user_first_name: { value: '', error: false },\n            user_last_name: { value: '', error: false },\n            user_phone_number: { value: '', error: false },\n            user_dob: { value: '', error: false },\n            user_cnic: { value: '', error: false },\n            user_email: { value: '', error: false },\n\n            user_country: { value: 'Pakistan', error: false },\n            user_city: { value: 'Lahore', error: false },\n            user_address: { value: '', error: false },\n\n            user_gender: { value: 'Male', error: false },\n            user_blood_group: { value: 'Unknown', error: false },\n            user_role: { value: 'Doctor', error: false },\n\n            user_consultancy_fee: { value: '1500', error: false },\n            user_consultancy_percentage: { value: '70', error: false },\n\n            speciality_description: { value: '', error: false },\n            degree_description: { value: '', error: false },\n\n            user_specialities: [],\n\n            user_degrees: [],\n            user_schedule: [],\n\n            mode: 'create',\n            toUpdateDoctorId: ''\n        })\n    }\n\n    on_submit = (e) => {\n        e.preventDefault()\n        console.log('this.state', this.state)\n        const payload = {\n            admin_id: this.props.active_user._id,\n            doctor: {\n                first_name: this.state.user_first_name.value.trim(),\n                last_name: this.state.user_last_name.value.trim(),\n                phone_number: this.state.user_phone_number.value.trim(),\n                date_of_birth: this.state.user_dob.value,\n                cnic: this.state.user_cnic.value.trim(),\n                email: this.state.user_email.value.trim(),\n                country: this.state.user_country.value,\n                city: this.state.user_city.value,\n                address: this.state.user_address.value.trim(),\n                gender: this.state.user_gender.value.trim(),\n                blood_group: this.state.user_blood_group.value.trim(),\n                role: this.state.user_role.value.trim(),\n            },\n            doctor_details: {\n                consultancy_fee: this.state.user_consultancy_fee.value,\n                consultancy_percentage: this.state.user_consultancy_percentage.value,\n                specialities: this.state.user_specialities,\n                degrees: this.state.user_degrees,\n                schedule: this.state.user_schedule,\n            }\n        }\n        if (this.state.mode === 'create') {\n            this.setState({ addNewDoctorModalLoading: true });\n            Axios\n                .post(ADMIN_CREATE_DOCTOR, payload)\n                .then(res => {\n                    console.log('res', res)\n                    this.setState({ loading: true, addNewModalVisibility: false, addNewDoctorModalLoading: false }, () => this.load_doctors())\n                })\n                .catch(err => {\n                    console.log('res', err)\n                    if (err.response){\n                        notify('error', '', err.response.data.message);\n                    }\n                    else {\n                        notify('error', '', err.toString());\n                    }\n                    \n                    this.setState({ addNewDoctorModalLoading: false })\n                })\n        }\n        else {\n            payload.doctor_id = this.state.toUpdateDoctorId;\n            payload.doctor.is_active = this.state.user_is_active.value;\n            Axios\n                .put(ADMIN_UPDATE_DOCTOR, payload)\n                .then(res => {\n                    console.log('response', res)\n                    notify('success','', 'Doctor successfully updated');\n                    this.setState({ addNewModalVisibility: false, addNewDoctorModalLoading: false }, () => {\n                        this.reset_state()\n                        this.load_doctors()    \n                    })\n                })\n                .catch(err => {\n                    console.log('err', err)\n                    notify('error','', 'There was an error updating doctor');\n                    this.setState({ addNewModalVisibility: false, addNewDoctorModalLoading: false })\n                })\n\n        }\n    }\n\n    delete_doctor = (id) => {\n        console.log('delete doctor id', id);\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <div className={`mb-2 d-flex justify-content-between`}>\n                    <div className={`d-flex justify-content-between w-100`}>\n                        \n                        <div className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-info mr-2 px-3\" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-info\">\n                                                {this.state.counts.total}\n                                            </h1>\n                                    }\n                                    <h5 className={`text-dark`}>Total</h5>\n                                </div>\n                                <i className=\"fa fa-stethoscope fa-5x text-info\"></i>\n                            </div>\n                        </div>\n                        <div className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-success mr-2 px-3\" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-success\">\n                                                {this.state.counts.active}\n                                            </h1>\n                                    }\n                                    <h5 className={`text-dark`}>Active</h5>\n                                </div>\n                                <i className=\"fa fa-check fa-5x text-success\"></i>\n                            </div>\n                        </div>\n                        <div className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-danger mr-2 px-3\" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-danger\">\n                                                {this.state.counts.deactive}\n                                            </h1>\n                                    }\n                                    <h5 className={`text-dark`}>Deactive</h5>\n                                </div>\n                                <i className=\"fa fa-times fa-5x text-danger\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`d-flex align-items-end mb-3`}>\n                        <Button icon=\"icon-plus3\" onClick={() => this.setState({ addNewModalVisibility: true })}>\n                            Add a new doctor\n                        </Button>\n                    </div>\n                </div>\n                {\n                    this.state.loading ? <>\n                        {/* <SkeletonTheme color=\"#000\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-1\" count={1} height={40}/>\n                        </SkeletonTheme> */}\n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-1\" count={8} height={45}/>\n                        </SkeletonTheme>\n                    </>: (\n                        this.state.rows.length === 0 ?\n                            <div className=\"alert alert-info mt-2 w-100\" >\n                                <strong>Info!</strong> Not found.\n                            </div> :\n                            <CustomTable\n                                rows={this.state.rows}\n                                headCells={headCells}\n                                heading={'Doctors'}\n                            />)\n                }\n                <Modal visible={this.state.addNewModalVisibility} dialogClassName=\"modal-lg\" onClickBackdrop={() => this.setState({ addNewModalVisibility: false })}>\n                    <div className={`modal-header bg-teal-400`}>\n                        <h5 className={`mb-0`}>{this.state.mode === 'create'? 'Add a new doctor': 'Update doctor'}</h5>\n                    </div>\n                    <div className={`modal-body`}>\n                        <h5 className={`font-weight-bold`}>Basic Information</h5>\n                        <div className={`row`}>\n                            <div className={`col-md-4 px-3`}>\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_first_name`}\n                                        heading={'First name'}\n                                        placeholder=\"Enter first name\"\n                                        required\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_first_name.value}\n                                        error={this.state.user_first_name.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_last_name`}\n                                        heading={'Last name'}\n                                        placeholder=\"Enter last name\"\n                                        required\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_last_name.value}\n                                        error={this.state.user_last_name.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_phone_number`}\n                                        heading={'Phone number'}\n                                        placeholder=\"Enter phone number\"\n                                        required\n                                        type=\"text\" pattern=\"\\d*\" maxlength=\"11\"\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_phone_number.value}\n                                        error={this.state.user_phone_number.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_dob`}\n                                        heading={'Date of birth'}\n                                        icon_class={'icon-calendar3'}\n                                        placeholder=\"Date of birth\"\n                                        input_type={'text'}\n                                        field_type=\"date-time\"\n                                        date_format={'ll'}\n                                        time_format={false}\n                                        onChange={this.on_user_date_of_birth_change}\n                                        value={this.state.user_dob.value}\n                                        error={this.state.user_dob.error}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_cnic`}\n                                        heading={'CNIC'}\n                                        icon_class={'icon-vcard'}\n                                        input_type={'number'}\n                                        placeholder=\"Enter CNIC\"\n                                        type=\"text\" pattern=\"\\d*\" maxlength=\"13\"\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_cnic.value}\n                                        error={this.state.user_cnic.error} />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_email`}\n                                        heading={'Email'}\n                                        icon_class={'icon-envelop'}\n                                        input_type={'email'}\n                                        required\n                                        \n                                        placeholder=\"Enter email\"\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_email.value}\n                                        error={this.state.user_email.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className=\"row\">\n                            <div className=\"col-md-8\">\n                                <h5 className={`font-weight-bold`}>Location</h5>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <Inputfield\n                                            heading={'Country'}\n                                            field_type=\"select\"\n                                            required\n                                            isClearable\n                                            menuPlacement=\"auto\"\n                                            options={COUTRIES}\n                                            classNamePrefix={`form-control`}\n                                            placeholder=\"Select Country\"\n                                            id=\"user_country\"\n                                            isDisabled\n                                            onChange={e => this.on_selected_changed(e, 'user_country')}\n                                            // value={{ id: 'country_selection', label: this.state.user_country.value }}\n                                            defaultValue={{ id: 'country_selection', label: 'Pakistan' }}\n                                            styles={{\n                                                container: base => ({\n                                                    ...base,\n                                                    backgroundColor: this.state.user_country.error ? '#FF0000' : '',\n                                                    padding: 1,\n                                                    borderRadius: 5\n                                                }),\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <Inputfield\n                                            heading={'City'}\n                                            field_type=\"select\"\n                                            required\n                                            isClearable\n                                            menuPlacement=\"auto\"\n                                            options={CITIES}\n                                            classNamePrefix={`form-control`}\n                                            placeholder=\"Select City\"\n                                            id=\"user_city\"\n                                            isDisabled={this.state.addNewDoctorModalLoading}\n                                            onChange={e => this.on_selected_changed(e, 'user_city')}\n                                            // value={{ id: 'city_selection', label: this.state.user_city.value }}\n                                            defaultValue={{ id: 'city_selection', label: 'Lahore' }}\n                                            styles={{\n                                                container: base => ({\n                                                    ...base,\n                                                    backgroundColor: this.state.user_city.error ? '#FF0000' : '',\n                                                    padding: 1,\n                                                    borderRadius: 5\n                                                }),\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <Inputfield\n                                            heading=\"Address/Area\"\n                                            className=\"form-control form-control-lg\"\n                                            id=\"user_address\"\n                                            value={this.state.user_address.value}\n                                            onChange={e => this.on_text_field_change(e)}\n                                            placeholder=\"Enter address / area you live in the city\"\n                                            disabled={this.state.addNewDoctorModalLoading}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 border-left\">\n                                <h5 className={`font-weight-bold`}>Specifications</h5>\n                                <Inputfield\n                                    heading=\"Gender\"\n                                    field_type=\"select\"\n                                    required\n                                    isClearable\n                                    menuPlacement=\"auto\"\n                                    options={GENDER_OPTIONS}\n                                    classNamePrefix={`form-control`}\n                                    placeholder=\"Select Gender\"\n                                    id=\"user_gender\"\n                                    isDisabled={this.state.addNewDoctorModalLoading}\n                                    onChange={e => this.on_selected_changed(e, 'user_gender')}\n                                    // value={{ id: 'gender_selection', label: this.state.user_gender.value }}\n                                    defaultValue={{ id: 'gender_selection', label: 'Male' }}\n                                    styles={{\n                                        container: base => ({\n                                            ...base,\n                                            backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\n                                            padding: 1,\n                                            borderRadius: 5\n                                        }),\n                                    }}\n                                />\n                                <Inputfield\n                                    heading=\"Blood group\"\n                                    field_type=\"select\"\n                                    required\n                                    isClearable\n                                    menuPlacement=\"auto\"\n                                    options={BLOOD_GROUPS_OPTIONS}\n                                    className={`Select-option`}\n                                    classNamePrefix={`form-control`}\n                                    placeholder=\"Select blood group\"\n                                    id=\"user_gender\"\n                                    isDisabled={this.state.addNewDoctorModalLoading}\n                                    onChange={e => this.on_selected_changed(e, 'user_gender')}\n                                    // value={{ id: 'blood_group_selection', label: this.state.user_blood_group.value }}\n                                    defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\n                                    styles={{\n                                        container: base => ({\n                                            ...base,\n                                            backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\n                                            padding: 1,\n                                            borderRadius: 5\n                                        }),\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <hr />\n                        <h5 className={`font-weight-bold`}>Pricing</h5>\n                        <div className={`row`}>\n                            <div className={`col-md-6`}>\n                                <Inputfield\n                                    id=\"user_consultancy_fee\"\n                                    heading=\"Consultancy fee\"\n                                    placeholder=\"Enter consultancy fee\"\n                                    required\n                                    value={this.state.user_consultancy_fee.value}\n                                    error={this.state.user_consultancy_fee.error}\n                                    onChange={this.on_text_field_change}\n                                    disabled={this.state.addNewDoctorModalLoading}\n                                />\n                            </div>\n                            <div className={`col-md-6`}>\n                                <Inputfield\n                                    id=\"user_consultancy_percentage\"\n                                    heading=\"Consultancy percentage\"\n                                    placeholder=\"Enter consultancy % shared with this doctor\"\n                                    required\n                                    value={this.state.user_consultancy_percentage.value}\n                                    error={this.state.user_consultancy_percentage.error}\n                                    onChange={this.on_text_field_change}\n                                    disabled={this.state.addNewDoctorModalLoading}\n                                />\n\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={`d-flex justify-content-between`}>\n                            <h5 className={`font-weight-bold`}>Specialities's</h5>\n                            <Button icon=\"icon-plus3\" color=\"black\" disabled={this.state.addNewDoctorModalLoading} onClick={() => this.toggle_modal('addNewSpecialityModalVisibility')}>Speciality</Button>\n                        </div>\n                        <div className={`row mt-2`}>\n                            {\n                                this.state.user_specialities.length === 0 ?\n                                    <div className=\"alert alert-info mt-2 mb-0 w-100\">\n                                        <strong>Info!</strong> Not found.\n                                    </div> :\n                                    <div className={`table-responsive table-hover table-bordered`}>\n                                        <table className={`table mb-0`}>\n                                            <thead>\n                                                <tr>\n                                                    <th>Id</th>\n                                                    <th>Description</th>\n                                                    <th className={`text-center`}>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.state.user_specialities.map((item, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td>{i + 1}</td>\n                                                                <td>{item.description}</td>\n                                                                <td className={`text-center`}>\n                                                                    <IconButton color=\"red\" icon=\"icon-cross\" onClick={() => this.delete_item(i, 'user_specialities')}>\n                                                                    </IconButton>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                            }\n                        </div>\n\n                        <hr />\n                        <div className={`d-flex justify-content-between`}>\n                            <h5 className={`font-weight-bold`}>Degree's</h5>\n                            <Button icon=\"icon-plus3\" color=\"black\" disabled={this.state.addNewDoctorModalLoading} onClick={() => this.toggle_modal('addNewDegreeModalVisibility')}>Degree</Button>\n                        </div>\n                        <div className={`row mt-2`}>\n                            {\n                                this.state.user_degrees.length === 0 ?\n                                    <div className=\"alert alert-info mt-2 w-100\" >\n                                        <strong>Info!</strong> Not found.\n                                    </div> :\n                                    <div className={`table-responsive table-hover table-bordered`}>\n                                        <table className={`table mb-0`}>\n                                            <thead>\n                                                <tr>\n                                                    <th>Id</th>\n                                                    <th>Description</th>\n                                                    <th className={`text-center`}>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.state.user_degrees.map((item, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td>{i + 1}</td>\n                                                                <td>{item.description}</td>\n                                                                <td className={`text-center`}>\n                                                                    <IconButton color=\"red\" icon=\"icon-cross\" onClick={() => this.delete_item(i, 'user_degrees')}>\n                                                                    </IconButton>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                            }\n                        </div>\n                        <hr />\n                        <div className={`d-flex justify-content-between text-muted`}>\n                            <h5 className={`font-weight-bold`}>Schedule</h5>\n                            <span>Coming soon</span>\n                            <Button icon=\"icon-plus3\" color=\"black\" disabled>Add schedule</Button>\n                        </div>\n                        <hr />\n                        <div className={``}>\n                            <h5 className={`font-weight-bold`}>Status</h5>\n                            <div className={`d-flex`}>\n\n                                <div className=\"form-check mr-2\">\n                                    <label className=\"form-check-label\">\n                                        <div className=\"uniform-checker\">\n                                            <span className={this.state.user_is_active.value ? 'checked' : ''}>\n                                                <input type=\"checkbox\"\n                                                    name=\"is_active\"\n                                                    id=\"user_is_active\"\n                                                    // defaultChecked={this.state.user_is_active.value}\n                                                    // value={this.state.user_is_active.value}\n                                                    onChange={() => this.setState({ user_is_active: { value: true, error: false } })}\n                                                    className=\"form-input-styled\" />\n                                            </span>\n                                        </div>\n                                    Is Active\n                                </label>\n                                </div>\n                                <div className=\"form-check mb-0\">\n                                    <label className=\"form-check-label\">\n                                        <div className=\"uniform-checker\">\n                                            <span className={this.state.user_is_active.value ? '' : 'checked'}>\n                                                <input type=\"checkbox\"\n                                                    name=\"is_active\"\n                                                    id=\"user_is_active\"\n                                                    // defaultChecked={!this.state.user_is_active.value}\n                                                    // value={!this.state.user_is_active.value}\n                                                    onChange={() => this.setState({ user_is_active: { value: false, error: false } })}\n                                                    className=\"form-input-styled\" />\n                                            </span>\n                                        </div>\n                                    Is Deactivated\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`modal-footer`}>\n                        <Button icon=\"icon-plus3\" disabled={this.state.addNewDoctorModalLoading} onClick={e => this.on_submit(e)}>{this.state.mode === 'create'? 'Create Doctor': 'Update doctor'}</Button>\n                        <Button icon=\"icon-cross\" color=\"red\" onClick={e => this.reset_state()}>Cancel</Button>\n                    </div>\n                </Modal>\n                {/* \n                * Speciality modal\n                */}\n                <Modal visible={this.state.addNewSpecialityModalVisibility} onClickBackdrop={() => this.toggle_modal('addNewSpecialityModalVisibility')}>\n                    <div className={`modal-header bg-teal-400`}>\n                        <h5 className={`mb-0`}>Add Speciality</h5>\n                    </div>\n                    <div className={`modal-body`}>\n                        <Inputfield\n                            id=\"speciality_description\"\n                            heading=\"Description\"\n                            placeholder=\"Enter description\"\n                            value={this.state.speciality_description.value}\n                            error={this.state.speciality_description.error}\n                            onChange={this.on_text_field_change}\n                        />\n                    </div>\n                    <div className={`modal-footer`}>\n                        <Button icon=\"icon-plus3\" onClick={() => this.add_item(this.state.speciality_description.value, 'user_specialities')}>Add</Button>\n                    </div>\n                </Modal>\n                {/* \n                * Degree modal\n                */}\n                <Modal visible={this.state.addNewDegreeModalVisibility} onClickBackdrop={() => this.toggle_modal('addNewDegreeModalVisibility')}>\n                    <div className={`modal-header bg-teal-400`}>\n                        <h5 className={`mb-0`}>Add Degree</h5>\n                    </div>\n                    <div className={`modal-body`}>\n                        <Inputfield\n                            id=\"degree_description\"\n                            heading=\"Description\"\n                            placeholder=\"Enter description\"\n                            value={this.state.degree_description.value}\n                            error={this.state.degree_description.error}\n                            onChange={this.on_text_field_change}\n                        />\n                    </div>\n                    <div className={`modal-footer`}>\n                        <Button icon=\"icon-plus3\" onClick={() => this.add_item(this.state.degree_description.value, 'user_degrees')}>Add</Button>\n                    </div>\n                </Modal>\n            </Fragment>\n        )\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_page: state.active_page,\n        active_user: state.active_user,\n    }\n}\nexport default connect(map_state_to_props, { set_active_page })(SearchDoctors);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport NO_PICTURE from '../../resources/images/placeholder.jpg'\nimport { connect } from \"react-redux\";\nimport { LOGIN_URL, BASE_URL } from '../../router/constants';\nimport { set_active_user, set_active_page } from '../../redux/actions'\nimport Inputfield from '../../components/inputfield';\nimport 'styles/animations/animations.css'\nimport moment from 'moment';\nimport { BLOOD_GROUPS_OPTIONS, CITIES, COUTRIES, GENDER_OPTIONS } from '../../utils/constant_data';\nimport Loading from '../../components/loading';\nimport { Ucfirst } from '../../utils/functions';\nimport { UserSearchByToken, UserUpdate } from '../../services/queries';\nimport notify from 'notify'\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            first_name: { value: '', error: false },\n            last_name: { value: '', error: false },\n            email: { value: '', error: false },\n            gender: { value: '', error: false },\n            date_of_birth: { value: '', error: false },\n            register_date: { value: '', error: false },\n            blood_group: { value: '', error: false },\n            role: { value: '', error: false },\n            phone_number: { value: '', error: false },\n            cnic: { value: '', error: false },\n            city: { value: '', error: false },\n            country: { value: 'Pakistan', error: false },\n            address: { value: '', error: false },\n\n            loading_status: false,\n            previous_payload: null,\n        };\n    }\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                        Home\n                    </Link>, <span className=\"breadcrumb-item active\">Profile</span>]\n        this.props.set_active_page(routes)\n        if (localStorage.user) {\n            this.setState({ loading_status: true }, () => {\n                UserSearchByToken(localStorage.getItem('user'))\n                    .then(res => {\n                        this.props.set_active_user(res.data['payload'])\n                        this.setState({\n                            first_name: { value: Ucfirst(res.data.payload.first_name), error: false },\n                            last_name: { value: Ucfirst(res.data.payload.last_name), error: false },\n                            email: { value: res.data.payload.email, error: false },\n                            cnic: { value: res.data.payload.cnic, error: false },\n                            phone_number: { value: res.data.payload.phone_number, error: false },\n                            city: { value: res.data.payload.city, error: false },\n                            address: { value: res.data.payload.address, error: false },\n                            date_of_birth: {\n                                value: res.data.payload.date_of_birth === null || res.data.payload.date_of_birth === '' ?\n                                    '' : moment(res.data.payload.date_of_birth).format('ll'), error: false\n                            },\n                            register_date: { value: moment(res.data.payload.register_date).format('lll'), error: false },\n                            blood_group: { value: res.data.payload.blood_group, error: false },\n                            gender: { value: res.data.payload.gender, error: false },\n\n                            loading_status: false\n\n                        })\n                    }).catch(err => {\n                        if (err) {\n                            console.log(err.response)\n                            if (err.response.status >= 500) {\n                                notify('error', '', `No response`)\n                                this.setState({ loading_status: false })\n                            }\n                            else if (err.response.status >= 400 && err.response.status < 500) {\n                                notify('info', '', `${err.response.status}. Please refresh the page.`)\n                                this.setState({ loading_status: false })\n                            }\n                        }\n                    })\n            })\n\n        }\n        else {\n            this.props.history.push(LOGIN_URL)\n        }\n    }\n\n    request_update = (data) => {\n        this.setState({ loading_status: true }, () => {\n            UserUpdate(data)\n                .then(res => {\n                    this.setState({ loading_status: false })\n                    notify('success', '', res.data.message)\n                }).catch(err => {\n                    console.log('request error', err)\n                    this.setState({ loading_status: false })\n                    if (err.response) {\n                        notify('error', '', err.response['message'])\n                    }\n            })\n        })\n\n    }\n\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required && input === '') {\n            return true;\n        }\n        if (only_alpha && !input.match(alphabets)) {\n            return true;\n        }\n        if (only_numbers && !input.match(numbers)) {\n            return true;\n        }\n    }\n\n    on_click_update = () => {\n        let status = false;\n        if (this.check_input(this.state.first_name.value, true, true, false)) {\n            this.setState({ first_name: { value: this.state.first_name.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.last_name.value, true, true, false)) {\n            this.setState({ last_name: { value: this.state.last_name.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.email.value, true, false, false)) {\n            this.setState({ email: { value: this.state.email.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.phone_number.value, true, false, true)) {\n            this.setState({ phone_number: { value: this.state.phone_number.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.cnic.value, true, false, true)) {\n            this.setState({ cnic: { value: this.state.cnic.value, error: true } })\n            status = true\n        }\n\n        if (status === true) {\n            notify('error', '', 'Invalid input')\n            return\n        }\n        const payload = {\n            first_name: this.state.first_name.value,\n            last_name: this.state.last_name.value,\n            email: this.state.email.value,\n            gender: this.state.gender.value,\n            date_of_birth: this.state.date_of_birth.value,\n            register_date: this.state.register_date.value,\n            blood_group: this.state.blood_group.value,\n            phone_number: this.state.phone_number.value,\n            cnic: this.state.cnic.value,\n            address: this.state.address.value,\n            city: this.state.city.value,\n        }\n        this.request_update(payload)\n    }\n\n    on_text_changed = (e) => {\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } })\n    }\n\n    on_selected_changed = (e, actor) => {\n        this.setState({ [e === null ? actor : e.id]: { value: e === null ? '' : e.label } })\n    }\n\n    on_user_date_of_birth_change = (e) => {\n        console.log(e)\n        if (e === '')\n            this.setState({ date_of_birth: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_of_birth: { value: configured_date, error: false } })\n            }\n        }\n    }\n    render() {\n        const view = <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className={`col-lg-2 col-sm-0 `}></div>\n                <div className=\"col-lg-8 col-sm-12\">\n                    <div className={`d-flex align-items-center mb-3`}>\n                        <div className=\"card-img-actions d-inline-block \">\n                            <img className=\"img-fluid rounded-circle\" src={NO_PICTURE} style={{ width: 100, height: 100 }} alt=\"\" />\n                            <div className=\"card-img-actions-overlay card-img rounded-circle\">\n                                <Link to={\"#\"} className=\"btn btn-outline bg-white text-white border-white border-2 btn-icon rounded-round\">\n                                    <i className=\"icon-plus3\"></i>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className={`d-flex flex-column ml-2`}>\n                            <span className={`h4 mb-0 font-weight-bold`}>{Ucfirst(this.state.first_name.value)} {Ucfirst(this.state.last_name.value)}</span>\n                            <span className={`mb-0 text-muted`}>{this.state.email.value}</span>\n                        </div>\n                    </div>\n\n                    <div className={`row`}>\n                        <div className={`col-lg-6`}>\n                            <Inputfield\n                                id=\"first_name\"\n                                heading=\"First Name\"\n                                placeholder=\"Enter your first name\"\n                                value={this.state.first_name.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.first_name.error}\n                            />\n                        </div>\n                        <div className={`col-lg-6`}>\n                            <Inputfield\n                                id=\"last_name\"\n                                heading=\"Last Name\"\n                                placeholder=\"Enter your last name\"\n                                type=\"email\"\n                                value={this.state.last_name.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.last_name.error}\n                            />\n\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-6`}>\n                            <Inputfield\n                                id=\"phone_number\"\n                                heading=\"Phone number\"\n                                placeholder=\"Enter phone number\"\n                                value={this.state.phone_number.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.phone_number.error}\n                            />\n\n                        </div>\n                        <div className={`col-lg-6`}>\n\n                            <Inputfield\n                                id=\"cnic\"\n                                heading=\"CNIC\"\n                                placeholder=\"Enter CNIC\"\n                                value={this.state.cnic.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.cnic.error}\n                            />\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-4`}>\n                            <Inputfield\n                                field_type=\"select\"\n                                id=\"blood_group_selection\"\n                                heading=\"Blood Group\"\n                                placeholder={'Select blood group'}\n                                error={this.state.cnic.error}\n                                isClearable\n                                name=\"color\"\n                                options={BLOOD_GROUPS_OPTIONS}\n                                menuPosition=\"auto\"\n                                onChange={e => this.on_selected_changed(e, 'blood_group_selection')}\n                                value={[{ id: 'blood_group_selection', label: this.state.blood_group.value }]}\n                            />\n                        </div>\n                        <div className={`col-lg-4`}>\n\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"Gender\"\n                                isClearable\n                                name=\"color\"\n                                options={GENDER_OPTIONS}\n                                placeholder={'Select gender'}\n                                menuPosition=\"auto\"\n                                id=\"gender_selection\"\n                                onChange={e => this.on_selected_changed(e, 'gender_selection')}\n                                value={[{ id: 'gender_selection', label: this.state.gender.value }]}\n                            />\n                        </div>\n                        <div className={`col-lg-4`}>\n                            <Inputfield\n                                id=\"user_dob\"\n                                onChange={this.on_user_date_of_birth_change}\n                                className=\"clock_datatime_picker form-control\"\n                                placeholder=\"Enter your date of birth\"\n                                heading=\"Date of birth\"\n                                field_type=\"date-time\"\n                                input={true}\n                                dateFormat={'ll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.date_of_birth.value}\n                            />\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-6`}>\n\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"Country\"\n                                isClearable\n                                options={COUTRIES}\n                                placeholder=\"Select country\"\n                                menuPosition=\"auto\"\n                                id=\"country_selection\"\n                                isDisabled\n                                onChange={e => this.on_selected_changed(e, 'country_selection')}\n                                value={[{ id: 'country_selection', label: this.state.country.value }]}\n                            />\n                        </div>\n                        <div className={`col-lg-6`}>\n\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"City\"\n                                isClearable\n                                options={CITIES}\n                                placeholder=\"Select city\"\n                                menuPosition=\"auto\"\n                                id=\"city_selection\"\n                                onChange={e => this.on_selected_changed(e, 'city_selection')}\n                                value={[{ id: 'city_selection', label: this.state.city.value }]}\n                            />\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-12`}>\n\n                            <Inputfield\n                                id=\"address\"\n                                heading=\"Address\"\n                                placeholder=\"Address\"\n                                icon_class=\"icon-home\"\n                                field_type=\"text-area\"\n                                value={this.state.address.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.address.error}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                        <span className={`text-muted`}>Registered: {this.state.register_date.value}</span>\n                        <div className={``}>\n                            <button\n                                className={`btn bg-dark btn-labeled btn-labeled-right pr-5 float-right ml-2`}\n                                onClick={() => this.props.history.push(BASE_URL)}>\n                                <b><i className={`icon-cross`}></i></b>\n                                Leave\n                            </button>\n                            <button className={`btn bg-teal-400 btn-labeled btn-labeled-right pr-5 float-right`}\n                                onClick={this.on_click_update}>\n                                <b><i className={`icon-floppy-disk`}></i></b>\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        return (\n            // <Container container_type=\"home\">\n                <div className=\"card border-top-info\">\n                    <div className=\"card-body\">\n                        {this.state.loading_status ? <Loading size={150} /> : view}\n                    </div>\n                </div>\n            // </Container>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        notify: state.notify,\n\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, notify, set_active_page })(withRouter(Profile));","import React, { Component, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { set_active_user, set_active_page } from '../../redux/actions';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/lib/echarts'\nimport { Link } from 'react-router-dom';\nimport { BASE_URL, SEARCH_DOCTORS } from '../../router/constants';\nimport * as rc from '../../services/rest_end_points';\nimport socketIOClient from \"socket.io-client\";\nimport Loading from '../../components/loading';\nimport './home.css';\nimport moment from 'moment';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            doctors: 0,\n            patient_left: 0,\n            patient_attended: 0,\n            total_attended: 0,\n            total_appointments: 0,\n            checkout_percentage: 100,\n\n            loading_status: true,\n\n            patients_per_day: [],\n\n            current_date_time: moment(new Date()).format(\"LLLL\"),\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                            Home\n                        </Link>, <span className=\"breadcrumb-item active\">Dashboard</span>]\n        this.props.set_active_page(routes)\n        this.socket = socketIOClient(rc.ROOT_URL, { path: rc.SOCKET_URL })\n        console.log('socket', this.socket)\n        this.socket.on(\"FromAPI\", data => this.order_data(data));\n        \n        // const token = localStorage.getItem('user')\n        \n        // UsersSearchByToken(token).then(res => {\n        //     // this.props.set_active_user(res.data['payload'])\n            \n        // }).catch(err => {\n        //     console.log(err)\n        // })\n    }\n\n    compare_dates(a, b) {\n        const dateA = new Date(a.date), dateB = new Date(b.date);\n        return dateA - dateB;\n    }\n\n    order_data = (data) => {\n        console.log('socket data', data)\n        const patients_per_day_raw_data = data.patients_per_day;\n        const temp = []\n        if (patients_per_day_raw_data.length > 0) {\n            for (let i = 0; i < patients_per_day_raw_data.length; ++i) {\n                const current_patient = patients_per_day_raw_data[i]\n                temp.push({\n                    date: moment(`${current_patient._id.month}/${current_patient._id.day}/${current_patient._id.year}`).format('LL'),\n                    count: current_patient.count\n                })\n                if (i === patients_per_day_raw_data.length - 1) {\n                    const numenator = data.patient_attended\n                    const denomenator = data.patient_left + data.patient_attended\n\n                    this.setState({\n                        doctors: data.doctors,\n                        patient_left: data.patient_left,\n                        patient_attended: data.patient_attended,\n                        total_attended: data.total_patients_attended,\n                        total_appointments: data.total_patients_appointments_registered,\n                        checkout_percentage: Math.ceil((numenator / (denomenator === 0 ? 1 : denomenator)) * 100),\n                        current_date_time: moment(new Date()).format(\"LLLL\"),\n                        loading_status: false,\n                        patients_per_day: temp.sort(this.compare_dates),\n\n                    })\n                }\n            }\n        }\n        else {\n            const numenator = data.patient_attended\n            const denomenator = data.patient_left + data.patient_attended\n\n            this.setState({\n                doctors: data.doctors,\n                patient_left: data.patient_left,\n                patient_attended: data.patient_attended,\n                total_attended: data.total_patients_attended,\n                total_appointments: data.total_patients_appointments_registered,\n                checkout_percentage: Math.ceil((numenator / (denomenator === 0 ? 1 : denomenator)) * 100),\n                current_date_time: moment(new Date()).format(\"LLLL\"),\n                loading_status: false,\n                patients_per_day: [],\n\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.socket.disconnect()\n    }\n    render() {\n        // console.log('response', this.state)\n        const option_patients_per_doctor = {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                }\n            },\n            legend: {\n                data: ['Total', 'Attended']\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            xAxis: {\n                type: 'value',\n                boundaryGap: [0, 0.01]\n            },\n            yAxis: {\n                type: 'category',\n                data: ['Dr. Yasir', 'Dr. Hamad', 'Dr. Shiza', 'Dr. Farukh', 'Dr. Baig']\n            },\n            series: [\n                {\n                    name: 'Total',\n                    type: 'bar',\n                    data: [14, 5, 8, 2, 1]\n                },\n                {\n                    name: 'Attended',\n                    type: 'bar',\n                    data: [6, 3, 4, 2, 0]\n                }\n            ]\n        };\n\n        const option_patients_attended_percentage = {\n            tooltip: {\n                formatter: '{a} <br/>{b} : {c}%'\n            },\n            series: [\n                {\n                    type: 'gauge',\n                    detail: { formatter: '{value}%' },\n                    data: [{ value: this.state.checkout_percentage }]\n                }\n            ]\n        };\n\n        const option_patients_attended_history = {\n            tooltip: {\n                trigger: 'axis',\n                position: function (pt) {\n                    return [pt[0], '10%'];\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: this.state.patients_per_day.map(function (a) { return a.date })\n            },\n            yAxis: {\n                type: 'value',\n                boundaryGap: [0, '100%']\n            },\n            dataZoom: [{\n                type: 'inside',\n                start: 0,\n                end: 100\n            }, {\n                start: 0,\n                end: 10,\n                handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                handleSize: '80%',\n                handleStyle: {\n                    color: '#fff',\n                    shadowBlur: 3,\n                    shadowColor: 'rgba(0, 0, 0, 0.6)',\n                    shadowOffsetX: 2,\n                    shadowOffsetY: 2\n                }\n            }],\n            series: [\n                {\n                    name: 'Patients',\n                    type: 'line',\n                    symbol: 'none',\n                    itemStyle: {\n                        color: '#00338D'\n                    },\n                    areaStyle: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: '#015BF9'\n                        }, {\n                            offset: 1,\n                            color: '#6198F7'\n                        }])\n                    },\n                    data: this.state.patients_per_day.map(function (a) { return a.count })\n                }\n            ]\n        };\n\n        const option_procedures = {\n            tooltip: {\n                trigger: 'item',\n                formatter: '{a} <br/>{b}: {c} ({d}%)'\n            },\n            legend: {\n                orient: 'horizontal',\n                left: 10,\n                data: ['Attended', 'Waiting']\n            },\n            series: [\n                {\n                    name: 'Patients Attended history',\n                    type: 'pie',\n                    radius: ['50%', '70%'],\n                    avoidLabelOverlap: false,\n                    label: {\n                        normal: {\n                            show: false,\n                            position: 'center'\n                        },\n                        emphasis: {\n                            show: true,\n                            textStyle: {\n                                fontSize: '30',\n                                fontWeight: 'bold'\n                            }\n                        }\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data: [\n                        { value: this.state.total_attended, name: 'Attended' },\n                        { value: this.state.total_appointments - this.state.total_attended, name: 'Waiting' },\n                    ]\n                }\n            ]\n        };\n        return (\n            // <Container container_type={'home'}>\n            <Fragment>\n                <div className=\"row\">\n                    <div className=\"col-lg-4 d-flex align-items-stretch \" >\n                        <div \n                            className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-info \" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-info\">\n                                                {this.state.doctors}\n                                            </h1>\n                                    }\n                                    <Link className={`h5 text-dark`} to={SEARCH_DOCTORS}>Doctors</Link>\n                                </div>\n                                <i className=\"fa fa-stethoscope fa-5x text-info\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8\" >\n\n                        <div className=\"card border-left-3 border-top-0 border-bottom-0 border-right-0 border-info \">\n                            <div className={`card-header pb-0`}>\n                                <div className=\"h6 mb-0 d-flex w-100  justify-content-center\">\n                                    <div className={`heading`}>\n                                        <span className={`filter font-weight-bold `}>\n                                            Patients Today\n                                        </span>\n                                    </div>\n                                    {/* <div className={`badge badge-dark d-block`}>\n                                        {this.state.current_date_time}\n                                    </div> */}\n                                </div>\n                            </div>\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#d9534f' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-danger\">\n                                                {this.state.patient_left}\n                                            </h1>\n                                    }\n                                    <h5>Waiting</h5>\n                                </div>\n                                <i className=\"fa fa-heartbeat fa-5x text-danger\" />\n                                <div className=\"border-left mx-3\"></div>\n                                <div >\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#5cb85c' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-success\">\n                                                {this.state.patient_attended}\n                                            </h1>\n                                    }\n                                    <h5>Checked out</h5>\n                                </div>\n                                <i className=\"fa fa-heartbeat fa-5x text-success\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-lg-8\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients per doctor</h5>\n\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_patients_per_doctor}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-4\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attended</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_patients_attended_percentage}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={`row`}>\n                    <div className=\"col-lg-4\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attended history</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_procedures}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attendence History</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts\n                                        option={option_patients_attended_history}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n            // </Container >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        active_page: state.active_page,\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, set_active_page })(Home);\n\n\n\n\n\n\n\n\n// var base = +new Date(2020, 1, 1);\n// var oneDay = 24 * 3600 * 1000;\n// var date = [];\n\n// var data = [10];\n\n// for (var i = 1; i < 60; i++) {\n//     var now = new Date(base += oneDay);\n//     date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));\n//     data.push(Math.round(Math.random() * 20) + 10);\n// }\n\n// var option_patients_attended_history = {\n//     tooltip: {\n//         trigger: 'axis',\n//         position: function (pt) {\n//             return [pt[0], '10%'];\n//         }\n//     },\n//     xAxis: {\n//         type: 'category',\n//         boundaryGap: false,\n//         data: date\n//     },\n//     yAxis: {\n//         type: 'value',\n//         boundaryGap: [0, '100%']\n//     },\n//     dataZoom: [{\n//         type: 'inside',\n//         start: 0,\n//         end: 10\n//     }, {\n//         start: 0,\n//         end: 10,\n//         handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n//         handleSize: '80%',\n//         handleStyle: {\n//             color: '#fff',\n//             shadowBlur: 3,\n//             shadowColor: 'rgba(0, 0, 0, 0.6)',\n//             shadowOffsetX: 2,\n//             shadowOffsetY: 2\n//         }\n//     }],\n//     series: [\n//         {\n//             name: 'Patients',\n//             type: 'line',\n//             symbol: 'none',\n//             itemStyle: {\n//                 color: '#00338D'\n//             },\n//             areaStyle: {\n//                 color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n//                     offset: 0,\n//                     color: '#015BF9'\n//                 }, {\n//                     offset: 1,\n//                     color: '#6198F7'\n//                 }])\n//             },\n//             data: data\n//         }\n//     ]\n//};\n\n\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport CustomTable from '../../../shared/customs/CustomTable';\r\nimport Button from '../../../components/button';\r\nimport IconButton from '../../../components/icon-button';\r\nimport moment from 'moment';\r\nimport { load_todays_appointments, set_active_page } from '../../../redux/actions';\r\nimport { Ucfirst } from '../../../utils/functions';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport Inputfield from '../../../components/inputfield';\r\n// import UserPreviewModal from '../../../shared/modals/userpreviewmodal';\r\nimport { Collapse } from 'reactstrap';\r\nimport { AppointmentsSearchToday, CreateNewPaymentLog, GetUserById, ProcedureSearch } from '../../../services/queries';\r\nimport notify from 'notify'\r\nimport { BASE_URL } from 'router/constants';\r\n\r\nconst headCells = [\r\n    { id: 'doctor_name', numeric: false, disablePadding: false, label: 'Doctor (Appointments)' },\r\n    { id: 'consultancy_fee', numeric: true, disablePadding: false, label: 'C-Fee' },\r\n    { id: 'c_doctor_share', numeric: true, disablePadding: false, label: 'Dr. Share' },\r\n    { id: 'c_hospital_share', numeric: true, disablePadding: false, label: 'H. Share' },\r\n    { id: 'procedures_fee', numeric: true, disablePadding: false, label: 'P-Fee' },\r\n    { id: 'p_doctor_share', numeric: true, disablePadding: false, label: 'Dr. Share' },\r\n    { id: 'p_hospital_share', numeric: true, disablePadding: false, label: 'H. Share' },\r\n    { id: 'balance', numeric: true, disablePadding: false, label: 'Bal' },\r\n    { id: 'actions', numeric: true, disablePadding: false, label: 'Actions' },\r\n];\r\n\r\nclass Payments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            modalLoading: false,\r\n            data: [],\r\n            rawData: [],\r\n            featuredData: {},\r\n            searchDate: moment(new Date()).format('ll'),\r\n            queryInterval: null,\r\n            checkoutModalVisibility: false,\r\n            userPreviewModalVisibility: false,\r\n            showAppointments: false,\r\n            currentCheckout: {\r\n                id: '',\r\n                doctor_name: '',\r\n                appointment_count: 0,\r\n                total_consultancy_fee: 0,\r\n                total_procedures_fee: 0,\r\n                total_amount: 0,\r\n                consultancy_share: 0,\r\n                procedures_share: 0,\r\n                balance: 0,\r\n                appointments: [],\r\n                procedures: [],\r\n            },\r\n            paid_text_input: { value: '', error: false },\r\n            mode: 'checkout',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\r\n            <i className=\"icon-home2 mr-2\"></i>\r\n                            Pricing\r\n                        </Link>, <span className=\"breadcrumb-item active\">Payments</span>]\r\n        this.props.set_active_page(routes)\r\n        this.loadData(this.state.searchDate);\r\n    }\r\n\r\n    onCheckoutToggle = (doctor_id, type) => {\r\n\r\n        // console.log('data', doctor_id, this.state.data)\r\n        // console.log('featured', this.state.featuredData);\r\n        // console.log('raw', this.state.rawData)\r\n\r\n        this.setState({ checkoutModalVisibility: true }, () => {\r\n            const selected_doctor_appointments = this.state.rawData.filter(doc => doc.doctor.id === doctor_id);\r\n            // console.log('selected doctor', this.state.featuredData[doctor_id])\r\n            const payload = {\r\n                id: doctor_id,\r\n                doctor_name: this.state.featuredData[doctor_id].doctor_name,\r\n                appointment_count: parseInt(this.state.featuredData[doctor_id].doctor_name.substring(this.state.featuredData[doctor_id].doctor_name.indexOf(\"(\") + 1, this.state.featuredData[doctor_id].doctor_name.length - 1)),\r\n                total_consultancy_fee: this.state.featuredData[doctor_id].consultancy_fee,\r\n                total_procedures_fee: this.state.featuredData[doctor_id].procedures_fee,\r\n                total_amount: this.state.featuredData[doctor_id].consultancy_fee + this.state.featuredData[doctor_id].procedures_fee,\r\n                consultancy_share: this.state.featuredData[doctor_id].c_doctor_share,\r\n                procedures_share: this.state.featuredData[doctor_id].p_doctor_share,\r\n                balance: this.state.featuredData[doctor_id].balance,\r\n                appointments: selected_doctor_appointments,\r\n                procedures: []\r\n            }\r\n            this.setState({ currentCheckout: payload, mode: type });\r\n            // console.log('payload', payload);\r\n        })\r\n\r\n    }\r\n\r\n    query = (date) => {\r\n        const that = this;\r\n        AppointmentsSearchToday(date, 'checkout')\r\n            .then(async res => {\r\n                // console.log('search', res.data)\r\n                if (res.data.payload && res.data.payload.length > 0) {\r\n                    const records = {};\r\n                    const data = res.data.payload;\r\n                    let counter = 0;\r\n\r\n                    // console.log('data length', data.length)\r\n                    while (true)  {\r\n                        const element = data[counter];\r\n                                \r\n                        await ProcedureSearch(element._id, element.doctor.id, new Date())\r\n                            .then(async _procedures => {\r\n\r\n                                /**\r\n                                 * consultancy fee + follow up - discount = charges\r\n                                 */\r\n                                const total = Number(element.appointment_charges.consultancy) + Number(element.appointment_charges.follow_up) - Number(element.appointment_charges.discount);\r\n                                /**\r\n                                 * doctor_share = (charges / 100) * percentage\r\n                                 */\r\n                                const total_c_doctor_share = (total / 100) * Number(element.doctor.consultancy_percentage)\r\n\r\n                                const total_procedures_fee = _procedures.data.payload.reduce((a, b) => a + (b['fee'] || 0), 0) - _procedures.data.payload.reduce((a, b) => a + (b['discount'] || 0), 0);\r\n                                const total_p_dr_share = _procedures.data.payload.reduce((a, b) => a + (b['dr_share'] || 0), 0);\r\n\r\n                                // console.log('check', element.doctor.id, records[element.doctor.id])\r\n                                if (records[element.doctor.id]) {\r\n                                    const name = records[element.doctor.id].doctor_name;\r\n                                    let a_count = parseInt(name.substring(name.indexOf(\"(\") + 1, name.length - 1));\r\n                                    ++a_count;\r\n                                    /**\r\n                                     * hopital share = total - doctor shares\r\n                                     */\r\n                                    records[element.doctor.id].doctor_name = `${name.substring(0, name.indexOf(\"(\") - 1)} (${a_count})`;\r\n                                    records[element.doctor.id].consultancy_fee += total;\r\n                                    records[element.doctor.id].c_doctor_share += total_c_doctor_share;\r\n                                    records[element.doctor.id].c_hospital_share += total - total_c_doctor_share;\r\n                                    records[element.doctor.id].procedures_fee += total_procedures_fee;\r\n                                    records[element.doctor.id].p_doctor_share += (total_procedures_fee * total_p_dr_share) / 100.00;\r\n                                    records[element.doctor.id].p_hospital_share += total_procedures_fee - ((total_procedures_fee * total_p_dr_share) / 100.00);\r\n                                } else {\r\n                                    await GetUserById(element.doctor.id)\r\n                                        .then(async _doctor => {\r\n                                            // console.log('appointments', element);\r\n                                            \r\n                                            records[element.doctor.id] = {\r\n                                                doctor_name: `Dr. ${Ucfirst(element.doctor.first_name)} ${Ucfirst(element.doctor.last_name)} (${1})`,\r\n                                                // appointment_count: 1,\r\n                                                consultancy_fee: total,\r\n                                                c_doctor_share: total_c_doctor_share,\r\n                                                c_hospital_share: total - total_c_doctor_share,\r\n                                                procedures_fee: total_procedures_fee,\r\n                                                p_doctor_share: (total_procedures_fee * total_p_dr_share) / 100.00,\r\n                                                p_hospital_share: total_procedures_fee - ((total_procedures_fee * total_p_dr_share) / 100.00),\r\n                                                balance: _doctor.data.payload.details.payments_balance,\r\n                                                actions: element.is_paid_to_doctor ?\r\n                                                    <IconButton\r\n                                                        className={`btn-sm`}\r\n                                                        color=\"black\"\r\n                                                        onClick={() => that.onCheckoutToggle(element.doctor.id, 'view')}\r\n                                                        icon=\"icon-eye\" /> :\r\n                                                    <IconButton\r\n                                                        className={`btn-sm`}\r\n                                                        onClick={() => that.onCheckoutToggle(element.doctor.id, 'checkout')}\r\n                                                        icon=\"icon-exit3\" />,\r\n                                            };\r\n                                        })\r\n                                }\r\n                            })\r\n                            counter++;\r\n\r\n                        if (counter === data.length) {\r\n                            this.setState({\r\n                                featuredData: records,\r\n                                data: Object.keys(records).map(item => { return records[item] }),\r\n                                rawData: res.data.payload,\r\n                                loading: false\r\n                            });\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({ featuredData: {}, data: [], rawData: [], loading: false })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error', err);\r\n            })\r\n    }\r\n\r\n    loadData = (date) => {\r\n        const app_date = new Date(date);\r\n        this.query(app_date);\r\n        const interval = setInterval(() => this.query(app_date), 15000)\r\n        this.setState({ queryInterval: interval })\r\n    }\r\n\r\n    showDoctor = (id) => {\r\n        // this.setState({\r\n        //     userPreviewModalVisibility: true\r\n        // }, () => {\r\n        //     Axios.post(USERS_SEARCH_BY_ID, { user_id: id }).then(res => {\r\n        //         this.setState({ user_modal_props: res.data.payload.user })\r\n        //     }).catch(err => {\r\n        //         console.log('failed to fetch user', err)\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    onConfirmCheckout = () => {\r\n        this.setState({ modalLoading: true }, () => {\r\n            //this step is to delete the appointments from currentCheckout payload\r\n            const details = {\r\n                ...this.state.currentCheckout,\r\n                appointments: undefined\r\n            }\r\n            CreateNewPaymentLog({\r\n                doctor_id: this.state.currentCheckout.id,\r\n                branch_id: \"5e86609dc45b265690b8a25d\",\r\n                details: details,\r\n                paid_amount: Number(this.state.paid_text_input.value),\r\n                balance: (this.state.currentCheckout.consultancy_share + \r\n                            this.state.currentCheckout.procedures_share + \r\n                            this.state.currentCheckout.balance) - \r\n                            Number(this.state.paid_text_input.value),\r\n                appointments_ids: this.state.currentCheckout.appointments.map(item => { return item._id }),\r\n            }).then(res => {\r\n                this.setState({ \r\n                    modalLoading: false, \r\n                    checkoutModalVisibility: false, \r\n                    paid_text_input: { value: \"\", error: false } }, () => {\r\n                    notify('success', '', res.data.message);\r\n                })\r\n            }).catch(err => {\r\n                this.setState({ modalLoading: false }, () => {\r\n                    notify('error', '', err.toString());\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.queryInterval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <CustomTable\r\n                    rows={this.state.data}\r\n                    headCells={headCells}\r\n                    loading={this.state.loading}\r\n                    heading={'Doctors'}\r\n                />\r\n                <Modal\r\n                    visible={this.state.checkoutModalVisibility}\r\n                    dialogClassName=\"modal-lg\"\r\n                    onClickBackdrop={() => this.setState({ checkoutModalVisibility: false })}>\r\n                    <div className={`modal-header bg-teal-400`}>\r\n                        <h5>Checkout <span className=\"h3 mb-0\">\r\n                            {this.state.currentCheckout.doctor_name}\r\n                            <Link to={\"#\"}\r\n                                onClick={() => this.showDoctor(this.state.currentCheckout.doctor_id)}>\r\n                                <i className={`ml-2 mb-1 icon-new-tab text-white`} />\r\n                            </Link>\r\n                        </span>\r\n                        </h5>\r\n                    </div>\r\n                    <div className={`modal-body`}>\r\n                        <div className={`row`}>\r\n                            <div className={`col-md-12`}>\r\n                                <div className={`table-responsive`}>\r\n\r\n                                    <table className={`table table-sm table-hover table-bordered mb-0`}>\r\n                                        <thead></thead>\r\n                                        <tbody>\r\n                                            {/* <tr>\r\n                                                <td>Share of {this.state.currentCheckout.doctor_name} (current)</td>\r\n                                                <td>{this.state.currentCheckout.curre}%</td>\r\n                                            </tr> */}\r\n                                            <tr>\r\n                                                <td>Appointments count</td>\r\n                                                <td>{this.state.currentCheckout.appointment_count}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Total Consultancy Fee</td>\r\n                                                <td>Rs. {this.state.currentCheckout.total_consultancy_fee}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Consultancy Dr. share</td>\r\n                                                <td>Rs. {this.state.currentCheckout.consultancy_share}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Total Procedures Fee</td>\r\n                                                <td>Rs. {this.state.currentCheckout.total_procedures_fee}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Procedures Dr. share</td>\r\n                                                <td>Rs. {this.state.currentCheckout.procedures_share}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Balance</td>\r\n                                                <td>Rs. {this.state.currentCheckout.balance}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className={`font-weight-bold h5`}>To be paid</td>\r\n                                                <td>Rs. {this.state.currentCheckout.consultancy_share + this.state.currentCheckout.procedures_share}/- <span className={`text-muted`}>(out of {this.state.currentCheckout.total_amount})</span></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`row mt-2 ${this.state.mode === 'view' ? 'd-none':''}`}>\r\n                            <div className={`col-md-${this.state.mode === 'view' ? 12:6}`}>\r\n                                <pre className={`w-100 text-center mb-0`}>\r\n                                    <h4 className={`mb-0`}>Total: Rs. {this.state.mode === \"view\" ? \r\n                                                    this.state.currentCheckout.paid_amount : \r\n                                                    (this.state.currentCheckout.consultancy_share + \r\n                                                        this.state.currentCheckout.procedures_share + \r\n                                                        this.state.currentCheckout.balance)}/-</h4>\r\n                                </pre>                                \r\n                            </div>\r\n                            <div className={`col-md-${this.state.mode === 'view' ? 0:3} d-flex align-items-end`}>\r\n                                {\r\n                                    this.state.mode === 'view' ? '' : <Inputfield\r\n                                        id=\"paid_text_input\"\r\n                                        heading=\"Paid amount\"\r\n                                        placeholder=\"Enter the paid amount\"\r\n                                        parent_classes=\"mb-0 mb-auto w-100\"\r\n                                        className=\"w-100\"\r\n                                        value={this.state.paid_text_input.value}\r\n                                        // error={this.state.paid_text_input.error}\r\n                                        onChange={e => this.setState({ paid_text_input: { value: e.target.value, error: false } })}\r\n                                    />\r\n                                }\r\n                                \r\n                            </div>\r\n                            <div className={`col-md-${this.state.mode === 'view' ? 0:3} d-flex align-items-end`}>\r\n                                {\r\n                                    this.state.mode === 'view' ? '' :\r\n                                        <Button\r\n                                            className={`btn-block py-2`}\r\n                                            icon=\"icon-exit3\"\r\n                                            disabled={this.state.modalLoading}\r\n                                            onClick={() => this.onConfirmCheckout()}>\r\n                                            Checkout\r\n                                        </Button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className={`btn btn-block text-left`} onClick={() => this.setState({ showAppointments: !this.state.showAppointments })}>\r\n                            <i className={`${this.state.showAppointments ? 'icon-subtract' : 'icon-add'}`} /> View Appointments ({moment(new Date(), \"YYYY-MM-DDThh:mm:ss\").format('ll')})\r\n                        </div>\r\n                        {/* <Link to className={`text-dark`} onClick={() => this.setState({ showAppointments: !this.state.showAppointments })}>\r\n                            <i className={`${this.state.showAppointments? 'icon-subtract':'icon-add'}`} /> Appointments\r\n                        </Link> */}\r\n                        <Collapse isOpen={this.state.showAppointments}>\r\n                            <div className={`table-responsive`}>\r\n                                <table className={`table table-hover table-bordered table-sm mb-0`}>\r\n                                    <thead className={`bg-dark`}>\r\n                                        <tr>\r\n                                            <th>Appointment Time</th>\r\n                                            <th>Consultancy</th>\r\n                                            <th>Follow up</th>\r\n                                            <th>Discount</th>\r\n                                            <th>Total</th>\r\n                                            <th>Consultancy Share</th>\r\n                                            <th>Payment Time</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            this.state.currentCheckout.appointments.map((item, i) => {\r\n                                                return (\r\n                                                    <tr key={i}>\r\n                                                        <td>{moment(item.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LT')}</td>\r\n                                                        <td>Rs. {item.appointment_charges.consultancy}/-</td>\r\n                                                        <td>Rs. {item.appointment_charges.follow_up}/-</td>\r\n                                                        <td>Rs. {item.appointment_charges.discount}/-</td>\r\n                                                        <td>Rs. {(\r\n                                                            Number(item.appointment_charges.consultancy) +\r\n                                                            Number(item.appointment_charges.follow_up) -\r\n                                                            Number(item.appointment_charges.discount))}/-</td>\r\n                                                        <td>Rs. {\r\n                                                            ((\r\n                                                                Number(item.appointment_charges.consultancy) +\r\n                                                                Number(item.appointment_charges.follow_up) -\r\n                                                                Number(item.appointment_charges.discount)) / 100) * item.doctor.consultancy_percentage\r\n                                                        }/- ({item.doctor.consultancy_percentage}%)</td>\r\n                                                        <td>{moment(new Date(item.appointment_charges.time), \"YYYY-MM-DDThh:mm:ss\").format('LT')}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </Collapse>\r\n                    </div>\r\n                </Modal>\r\n                {/* <UserPreviewModal\r\n                    visibility={this.state.userPreviewModalVisibility}\r\n                    modal_props={this.state.user_modal_props}\r\n                    on_click_back_drop={() => this.setState({ userPreviewModalVisibility: false, user_modal_props: null })}\r\n                    on_click_cancel={() => this.setState({ userPreviewModalVisibility: false, user_modal_props: null })} /> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        todays_patient: state.todays_patient\r\n    }\r\n}\r\nexport default connect(map_state_to_props, { load_todays_appointments, notify, set_active_page })(withRouter(Payments));","\n// class Container extends Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             authenticated: false,\n//             loading: true,\n//         }\n//     }\n\n//     componentDidMount(){\n//         // console.log('location container', window.location.pathname)\n//         const token = localStorage.getItem('user');\n//         if (token) {\n//             UsersSearchByToken(token).then(res => {\n//                 this.props.set_active_user(res.data.payload);\n//                 this.props.fetch_doctors();\n//                 this.props.fetch_procedures_list();\n//                 this.setState({ loading: false, authenticated: true });\n//             }).catch(err => {\n//                 console.log(err)\n//                 localStorage.clear()\n//                 localStorage.setItem('cached-path', window.location.pathname)\n//                 this.props.set_active_user({})\n//                 this.setState({ loading: false });\n//             })\n//         }\n//         else {\n//             this.setState({ loading: false, authenticated: false })\n//         }\n//     }\n//     render() {\n\n//         console.log('container type', this.props.container_type, 'authenticated', this.state.authenticated)\n//         if (this.state.loading){\n//             return (\n//                 <Skeletons />\n//             )\n//         }\n//         return (\n//             this.props.container_type && !_.isEmpty(this.props.active_user)? \n\n//                 <div className={`virtual-body navbar-top ${this.props.left_sidebar ? (window.innerWidth >= 500 ? 'sidebar-xs' : 'sidebar-mobile-main') : ''}`}\n//                 // style={{backgroundImage: `url(${BACKGROUND})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition:'center'}}\n//                 >\n//                     <Header />\n//                     <div className=\"page-content\">\n\n//                         <Leftsidebar />\n\n//                         <div className=\"content-wrapper\">\n\n//                             {/* {page_header? <Pageheader /> : ''} */}\n\n//                             <div className={`content`}>\n//                                 {\n//                                     this.props.children\n//                                 }\n//                             </div>\n//                             <Footer />\n//                         </div>\n//                     </div>\n//                 </div> :\n\n//                 <div className={`virtual-body d-flex justify-content-center align-items-center background_custom`}>\n//                 {\n//                     this.props.children\n//                 }\n//             </div>\n//         );\n//     }\n// }\n\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, CssBaseline, Typography, Divider, IconButton, Menu, MenuItem, Chip, Avatar, ListItemIcon, ListItemText, Backdrop, CircularProgress } from '@material-ui/core';\nimport { Menu as MenuIcon, ChevronLeft as ChevronLeftIcon, ChevronRight as ChevronRightIcon, AccountCircleRounded, PersonRounded } from '@material-ui/icons';\nimport { LeftSideBar, Skeletons } from 'components';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { set_active_user, fetch_doctors, fetch_procedures_list } from '../../redux/actions';\nimport './container.css'\nimport 'styles/animations/animations.css'\nimport { LogoutRequest, UsersSearchByToken } from 'services/queries';\nimport _ from 'lodash'\nimport { Ucfirst } from 'utils/functions';\nimport { LOGIN_URL, PROFILE, SETTINGS } from 'router/constants';\nimport notify from 'notify';\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // background: '#292b2c'\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nfunction Container(props) {\n\n    const { set_active_user, fetch_doctors, fetch_procedures_list } = props;\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const [loading, setLoading] = React.useState(true);\n    const [logoutLoading, setLogoutLoading] = React.useState(false);\n    const [authenticated, setAuthenticated] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const openMenu = Boolean(anchorEl);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = (e) => {\n        console.log('e',e.target.id)\n        setAnchorEl(null);\n        const { id } = e.target;\n        if (id === \"1\") {\n            // profile\n            console.log('route profile')\n            props.history.push(PROFILE)\n        }\n        else if (id === \"2\") {\n            // settings\n            props.history.push(SETTINGS)\n        }\n        else if (id === \"3\") {\n            //logout\n            onLogoutClick();\n        }\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('user');\n        if (token) {\n            UsersSearchByToken(token).then(res => {\n                console.log('fetching data')\n                set_active_user(res.data.payload);\n                fetch_doctors();\n                fetch_procedures_list();\n                setLoading(false);\n                setAuthenticated(true);\n            }).catch(err => {\n                console.log(err)\n                localStorage.clear()\n                localStorage.setItem('cached-path', window.location.pathname)\n                set_active_user({})\n                setLoading(false);\n            })\n        }\n        else {\n            setLoading(false);\n            setAuthenticated(false);\n        }\n    }, [set_active_user, fetch_doctors, fetch_procedures_list])\n\n    \n    const onLogoutClick = () => {\n        setLogoutLoading(true);\n        LogoutRequest().then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                notify('success', '', res.data.message)\n                setTimeout(() => {\n                    setLogoutLoading(false);\n                    props.history.push(LOGIN_URL)\n                }, 1000);\n            }\n            else {\n                setLogoutLoading(false);\n                notify('error', '', res.data.message)\n            }\n\n        }).catch(err => {\n            setLogoutLoading(false);\n            notify('error', '', err)\n        })\n\n\n    }\n\n    console.log('authenticated', authenticated);\n\n    if (loading) {\n        return (\n            <Skeletons />\n        )\n    } else {\n        if (props.container_type && !_.isEmpty(props.active_user)) {\n            return (\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AppBar\n                        position=\"fixed\"\n                        className={`${clsx(classes.appBar, { [classes.appBarShift]: open })} bg-dark`}\n                    >\n                        <Toolbar>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={handleDrawerOpen}\n                                edge=\"start\"\n                                className={clsx(classes.menuButton, { [classes.hide]: open, })}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" noWrap style={{flexGrow: 1}}>\n                                Code medicine\n                            </Typography>\n                            <div>\n                                <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMenu}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircleRounded />\n                                </IconButton>\n                                {/* <Chip \n                                    color=\"inherit\"\n                                    avatar={<Avatar><AccountCircleRounded /></Avatar>} \n                                    label={Ucfirst(props.active_user.first_name)}\n                                    onClick={handleMenu}\n                                /> */}\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={openMenu}\n                                    onClose={handleMenuClose}\n                                >\n                                    <MenuItem onClick={handleMenuClose} disabled >\n                                        <div className={`d-flex justify-conent-end mr-3`}>\n                                            <PersonRounded fontSize=\"small\" className={`mr-2`} />\n                                            <Typography variant=\"subtitle2\">{Ucfirst(props.active_user.first_name)}</Typography>\n                                        </div>\n                                    </MenuItem>\n                                    <Divider />\n                                    <MenuItem id={1} onClick={handleMenuClose}>Profile</MenuItem>\n                                    <MenuItem id={2} onClick={handleMenuClose}>Settings</MenuItem>\n                                    <Divider />\n                                    <MenuItem id={3} onClick={handleMenuClose}>Logout</MenuItem>\n                                </Menu>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer\n                        variant=\"permanent\"\n                        className={clsx(classes.drawer, { [classes.drawerOpen]: open, [classes.drawerClose]: !open })}\n                        classes={{\n                            paper: `${clsx({ [classes.drawerOpen]: open, [classes.drawerClose]: !open })} bg-dark`,\n                        }}\n                    >\n                        <div className={classes.toolbar}>\n                            <IconButton onClick={handleDrawerClose} className={`text-white`}>\n                                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                            </IconButton>\n                        </div>\n                        <Divider />\n                        <LeftSideBar open={open} />\n                    </Drawer>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        {\n                            props.children\n                        }\n                    </main>\n                    <Backdrop className={classes.backdrop} open={logoutLoading} onClick={() => console.log('loading please wait...')}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n                </div>\n            );\n        } else {\n            return (\n                <div className={`virtual-body d-flex justify-content-center align-items-center background_custom`}>\n                    {\n                        props.children\n                    }\n                </div>\n            )\n        }\n    }\n}\n\nfunction map_state_to_props(state) {\n    return {\n        left_sidebar: state.left_sidebar,\n        active_user: state.active_user,\n        \n    }\n}\nexport default connect(map_state_to_props, {\n    set_active_user,\n    fetch_doctors,\n    fetch_procedures_list,\n})(withRouter(Container));","import React, { Component, Fragment } from 'react';\nimport { LOGIN_URL, PROFILE } from '../../router/constants';\nimport { connect } from \"react-redux\";\nimport { left_sidebar_controls, set_active_user } from '../../redux/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { Ucfirst } from '../../utils/functions';\nimport notify from 'notify';\nimport { LogoutRequest } from 'services/queries';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDropDown: false,\n            collapseMenu: false,\n        };\n    }\n\n    on_sidebar_control_button_click = () => {\n        if (this.props.left_sidebar === true) {\n            this.props.left_sidebar_controls(false)\n        }\n        else {\n            this.props.left_sidebar_controls(true)\n        }\n    }\n\n    on_logout_button_click = () => {\n\n        LogoutRequest().then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                notify('success', '', res.data.message)\n                this.props.history.push(LOGIN_URL)\n                // this.props.set_active_user({})\n            }\n            else {\n                notify('error', '', res.data.message)\n            }\n\n        })\n            .catch(err => {\n                notify('error', '', err)\n            })\n\n\n    }\n\n    on_click_drop_down = () => {\n        this.setState({ showDropDown: !this.state.showDropDown })\n    }\n\n    on_click_collapse_menu = () => {\n        this.setState({ collapseMenu: !this.state.collapseMenu })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClickOutside, true);\n    }\n\n    handleClickOutside = event => {\n        const domNode = ReactDOM.findDOMNode(this);\n\n        if (!domNode || !domNode.contains(event.target)) {\n            this.setState({ showDropDown: false });\n        }\n    }\n\n    render() {\n        return (\n\n            <div className=\"navbar navbar-expand-md navbar-dark fixed-top\">\n                <div className=\"navbar-brand\">\n                    <Link onClick={this.on_sidebar_control_button_click} to={\"#\"}\n                        className=\"d-inline py-3 text-white\">\n                        <i className=\"icon-paragraph-justify2\"></i>\n                    </Link>\n                </div>\n\n                <div className=\"d-md-none\">\n                    <button\n                        className={`btn bg-teal-400 btn-labeled-left rounded-round`}\n                        onClick={() => this.on_click_drop_down()}\n                    >\n                        <i className={`icon-reading`} />\n                    </button>\n                    <div\n                        className={`dropdown-menu dropdown-menu-right ${this.state.showDropDown ? 'show' : ''}`}\n                        x-placement=\"bottom-end\"\n                        style={{ position: 'absolute', willChange: 'transform', top: '0px', right: '0px', transform: 'translate3d(-38px, 36px, 0px)' }}\n                    >\n                        <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link onClick={() => this.on_logout_button_click()} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                    </div>\n                </div>\n\n                <div className={`collapse navbar-collapse d-none d-md-none d-lg-flex justify-content-between align-items-center ${this.state.collapseMenu ? '' : 'show'}`} id=\"navbar-mobile\">\n                    <p className={`mb-0`}>\n                        {\n                            this.props.active_page !== null ? this.props.active_page.map((item, i) => {\n                                return <Fragment key={i}>{item}</Fragment>\n                            }) : ''\n                        }\n                    </p>\n                    <div className={`text-white d-flex align-items-center`}>\n                        <Link to={\"#\"} onClick={() => alert(\"Please mail us on codemedicine29@gmail.com\")} className=\"breadcrumb-elements-item mr-2\">\n                            <i className=\"icon-comment-discussion mr-2\"></i>\n                            Support\n                        </Link>\n                        <button\n                            className={`btn bg-teal-400 btn-labeled btn-labeled-left rounded-round dropdown-toggle pl-5`}\n                            onClick={() => this.on_click_drop_down()}\n                        >\n                            <b>\n                                <i className={`icon-reading`} />\n                            </b>\n                            {Ucfirst(this.props.active_user.first_name)}\n                        </button>\n                    </div>\n\n                    <div\n                        className={`dropdown-menu dropdown-menu-right ${this.state.showDropDown ? 'show' : ''}`}\n                        x-placement=\"bottom-end\"\n                        style={{ position: 'absolute', willChange: 'transform', top: '0px', right: '0px', transform: 'translate3d(-38px, 36px, 0px)' }}\n                    >\n                        <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link onClick={() => this.on_logout_button_click()} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        left_sidebar: state.left_sidebar,\n        active_user: state.active_user,\n        active_page: state.active_page\n\n    }\n}\nexport default connect(map_state_to_props, { left_sidebar_controls, set_active_user })(withRouter(Header));","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className=\" bg-dark p-2\">\n                <span>Developed by <Link to=\"/\">code-medicine</Link></span>\n            </footer>\n        );\n    }\n}\nexport default Footer;","import React from 'react';\r\nimport { AccountBalanceRounded, ArrowRightRounded, HomeRounded, ImportContactsRounded, SearchRounded, SettingsRounded } from '@material-ui/icons';\r\nimport * as RC from 'router/constants';\r\n\r\n\r\nconst nested_items_icon = <ArrowRightRounded />\r\n\r\nconst LIST = {\r\n    Dashboard: {\r\n        title: 'Home',\r\n        nested: false,\r\n        icon_class: <HomeRounded />,\r\n        url: RC.BASE_URL,\r\n        active: true,\r\n    },\r\n    Search: {\r\n        title: 'Search',\r\n        nested: true,\r\n        icon_class: <SearchRounded />,\r\n        url: '#',\r\n        open: false,\r\n        active: true,\r\n        routes: [\r\n            {\r\n                title: 'Patients',\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false,\r\n            },\r\n            {\r\n                title: 'Doctors',\r\n                url: RC.SEARCH_DOCTORS,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            }\r\n        ]\r\n    },\r\n    Reception: {\r\n        title: 'Reception',\r\n        nested: true,\r\n        icon_class: <ImportContactsRounded /> ,\r\n        url: '#',\r\n        open: false,\r\n        active: true,\r\n        routes: [\r\n            {\r\n                title: `Today's Patients`,\r\n                url: RC.RECEPTION_TODAYSPATIIENT,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            {\r\n                title: 'All Appointments',\r\n                url: RC.RECEPTION_VISITS,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            {\r\n                title: 'Procedures',\r\n                url: RC.RECEPTION_PROCEDURES,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            \r\n            {\r\n                title: `Emergency`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n            {\r\n                title: `Admissions`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n            {\r\n                title: `Requests`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n        ]\r\n    },\r\n    Accounts: {\r\n        title: 'Accounts',\r\n        nested: true,\r\n        icon_class: <AccountBalanceRounded />,\r\n        url: '#',\r\n        open: false,\r\n        active: true,\r\n        routes: [\r\n            {\r\n                title: `Day to day`,\r\n                url: RC.PAYMENTS,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            {\r\n                title: `My Payments`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n            {\r\n                title: `History`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n        ]\r\n    },\r\n    Settings: {\r\n        title: 'Settings',\r\n        nested: false,\r\n        icon_class: <SettingsRounded />,\r\n        url: RC.SETTINGS,\r\n        active: true,\r\n    },\r\n}\r\n\r\nexport default LIST;","import { SETTINGS_UPDATE_LEFTSIDEBAR_LIST } from \"../constants\";\r\nimport _ from 'lodash';\r\n\r\nconst INITIAL_SETTINGS = {\r\n    left_sidebar_collapsed: true,\r\n\r\n}\r\n\r\nexport default function (state = INITIAL_SETTINGS, action) {\r\n    switch (action.type) {\r\n        case SETTINGS_UPDATE_LEFTSIDEBAR_LIST:\r\n            const new_state = _.cloneDeep(state);\r\n            new_state.left_sidebar_collapsed = !state.left_sidebar_collapsed\r\n            return new_state;\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\nimport Notify from './reducer_notify';\nimport Left_sidebar from './reducer_sidebar_controls';\nimport Active_user from './reducer_active_user';\nimport Active_page from './reducer_active_page';\nimport Todays_patient from './reducer_todays_patients';\nimport Settings from './reducer_settings';\nimport Doctors from './reducer_doctors';\nimport ProceduresList from './reducer_procedure_list';\n\nconst root_reducer = combineReducers({\n    notify: Notify,\n    left_sidebar: Left_sidebar,\n    active_user: Active_user,\n    active_page: Active_page,\n    todays_patient: Todays_patient,\n    settings: Settings,\n    doctors: Doctors,\n    proceduresList: ProceduresList,\n    \n});\n\nexport default root_reducer","import { NOTIFY } from \"../constants\";\nimport { toast } from 'react-toastify';\n\n\nexport default function(state={},action){\n    switch (action.type){\n        case NOTIFY:\n            const options = {\n                position: toast.POSITION.TOP_RIGHT,\n                pauseOnFocusLoss: true\n            }\n            switch (action.payload['type']) {\n                case 'success':\n                    toast.success(action.payload['message'], options);\n                    break;\n                case 'error':\n                    toast.error(action.payload['message'], options);\n                    break;\n                case 'warning':\n                    toast.warn(action.payload['message'], options);\n                    break;\n                case 'info':\n                    toast.info(action.payload['message'], options);\n                    break;\n                default:\n                    toast(action.payload['message'], options);\n            }\n            return action.payload\n        default:\n            return state\n    }\n}","import { LEFT_SIDEBAR } from \"../constants\";\n\nexport default function (state=false,action){\n    switch(action.type){\n        case LEFT_SIDEBAR:\n            return action.payload\n        default:\n            return state\n    }\n}","import { ACTIVE_USER } from \"../constants\";\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ACTIVE_USER:\n            return action.payload;\n        default:\n            return state\n    }\n}","import { ACTIVE_PAGE } from \"../constants\";\r\n\r\nexport default function(state=[],action){\r\n    switch(action.type){\r\n        case ACTIVE_PAGE:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}","import { TODAYS_PATIENT, TODAYS_PATIENT_CLEAR, TODAYS_PATIENT_APPOINTMENT_UPDATE } from \"../constants\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case TODAYS_PATIENT:\r\n            console.log('todays patients', action.payload)\r\n            if (action.payload.status === 200)\r\n                return { \r\n                    loading: action.loading, \r\n                    data: action.payload.data.payload\r\n                }\r\n            else\r\n                return { \r\n                    loading: action.loading, \r\n                    data: action.payload \r\n                }\r\n        case TODAYS_PATIENT_CLEAR:\r\n            return { loading: true, data: [] }\r\n        case TODAYS_PATIENT_APPOINTMENT_UPDATE:\r\n            if (action.payload.new_item !== undefined){\r\n                return state.data.map((item,i) => {\r\n                    if (item._id !== action.payload.id) {\r\n                        // This isn't the item we care about - keep it as-is\r\n                        return item\r\n                    }\r\n                    return {\r\n                        ...item,\r\n                        ...action.payload.new_item\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return state.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { FETCH_DOCTORS } from \"redux/constants\";\r\n\r\nexport default function (state={},action){\r\n    switch (action.type) {\r\n        case FETCH_DOCTORS:\r\n            return action.payload;    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_PROCEDURE_LIST } from \"redux/constants\";\r\n\r\nexport default function (state={}, action) {\r\n    switch (action.type) {\r\n        case FETCH_PROCEDURE_LIST:\r\n            return action.payload;    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore((reducers), composeWithDevTools(applyMiddleware(promise, thunk)));\r\n\r\nexport default store;","\n// class Left_sidebar extends Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             search_toggle: '',\n//             chat_toggle: '',\n//             reception_toggle: '',\n//             procedures_toggle: '',\n//             pricing_toggle: '',\n//             current_page: 'Home',\n\n//             list: LIST\n//         }\n//     }\n//     componentDidMount() {\n//         // console.log('my user',this.props.active_user);\n\n//     }\n\n//     on_item_click = (item) => {\n//         if (this.state.list[item].nested) {\n//             const routes_list = this.state.list;\n//             routes_list[item].open = !routes_list[item].open;\n//             this.setState({ list: routes_list })\n//         }\n//     } //this.setState({ [e.target.id]: this.state[e.target.id] === '' ? 'nav-item-open' : '' });\n\n//     render() {\n//         const first_name_first_letter = this.props.active_user.first_name.charAt(0).toUpperCase()\n//         const first_name_rest = this.props.active_user.first_name.length > 1 ? this.props.active_user.first_name.substring(1) : ''\n//         const last_name_first_letter = this.props.active_user.last_name.charAt(0).toUpperCase()\n//         const last_name_rest = this.props.active_user.last_name.length > 1 ? this.props.active_user.last_name.substring(1) : ''\n\n//         return (\n//             <div className=\"sidebar sidebar-dark sidebar-main sidebar-fixed sidebar-expand-md\" >\n\n//                 <div className=\"sidebar-mobile-toggler text-center\">\n//                     <Link to={\"#\"} onClick={() => this.props.left_sidebar_controls(false)} className=\"sidebar-mobile-main-toggle\">\n//                         <i className=\"icon-arrow-left8\"></i>\n//                     </Link>\n//                     Menu\n//                     <Link to={RC.BASE_URL} className=\"sidebar-mobile-expand\">\n//                         <i className=\"icon-screen-full\"></i>\n//                         <i className=\"icon-screen-normal\"></i>\n//                     </Link>\n//                 </div>\n\n//                 <div className=\"sidebar-content\">\n//                     <div className=\"sidebar-user background_custom_left_side_bar d-flex align-items-center\" style={{ height: '25vh' }}>\n//                         <div className=\"card-body\">\n//                             <div className=\"media d-flex align-items-center\">\n//                                 {this.props.left_sidebar ? <Logo width=\"0.5in\" height=\"0.5in\" /> : ''}\n//                                 <div className=\"media-body d-flex flex-column justify-content-center align-items-center\">\n//                                     <Avatar\n//                                         className={`text-info bg-white h3 p-3 btn btn-light`}\n//                                         style={{ height: '80px', width: '80px' }}\n//                                         component=\"button\"\n//                                         onClick={() => this.props.history.push(RC.PROFILE)}>\n//                                         {first_name_first_letter}{last_name_first_letter}\n//                                     </Avatar>\n//                                     <div className={``}>\n//                                         <Link className={`text-shadow text-white`} to={RC.PROFILE}>\n//                                             {first_name_first_letter}{first_name_rest} {last_name_first_letter}{last_name_rest}\n//                                         </Link>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n\n//                     <div className=\"card card-sidebar-mobile\">\n//                         <ul className=\"nav nav-sidebar\">\n\n//                             {\n//                                 this.props.settings.left_sidebar_collapsed ?\n//                                     Object.keys(this.state.list).map((item, i) => {\n//                                         const elem = this.state.list[item];\n//                                         return <li className={`nav-item ${elem.nested ? `nav-item-submenu ${elem.open ? 'nav-item-open' : ''}` : ''}`} key={i}>\n//                                             <Link to={elem.url} className=\"nav-link bounceInLeft animated\" onClick={() => this.on_item_click(item)}>\n//                                                 <i className={elem.icon_class}></i>\n//                                                 <span>{elem.title}</span>\n//                                             </Link>\n//                                             {\n//                                                 elem.nested ?\n//                                                     <ul className=\"nav nav-group-sub\" data-submenu-title={item} style={{ display: elem.open ? 'block' : 'none' }}>\n//                                                         {\n//                                                             elem.routes.map((nitem, ni) => {\n//                                                                 return <li className=\"nav-item\" key={ni}>\n//                                                                     <Link to={nitem.url} className={`nav-link ${nitem.active ? '' : 'disabled'}`}>\n//                                                                         {nitem.title}\n//                                                                         {\n//                                                                             nitem.active ?\n//                                                                                 '' :\n//                                                                                 <span className=\"badge bg-transparent align-self-center ml-auto\">\n//                                                                                     Coming soon\n//                                                                             </span>\n//                                                                         }\n\n//                                                                     </Link>\n//                                                                 </li>\n//                                                             })\n//                                                         }\n//                                                     </ul> : ''\n//                                             }\n//                                         </li>\n//                                     }) :\n//                                     Object.keys(this.state.list).map((item, i) => {\n//                                         const elem = this.state.list[item];\n//                                         return <Fragment key={i}>\n//                                             <li className={`nav-item-header`}>\n//                                                 {elem.title}\n//                                             </li>\n//                                             {\n//                                                 elem.nested ?\n//                                                     elem.routes.map((nitem, ni) => {\n//                                                         return <li className={`nav-item`} key={ni}>\n//                                                             <Link to={nitem.url} className={`nav-link ${nitem.active ? '' : 'disabled'}`}>\n//                                                                 <i className={nitem.icon_class}></i>\n//                                                                 {nitem.title}\n//                                                                 {nitem.active ? '' : <span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span>}\n//                                                             </Link>\n//                                                         </li>\n//                                                     }) :\n//                                                     <li className=\"nav-item\">\n//                                                         <Link to={elem.url} className={`nav-link ${elem.active ? '' : 'disabled'}`}>\n//                                                             <i className={elem.icon_class} />\n//                                                             {elem.title}\n//                                                             {elem.active ? '' : <span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span>}\n//                                                         </Link>\n//                                                     </li>\n//                                             }\n//                                         </Fragment>\n//                                     })\n//                             }\n//                         </ul>\n//                     </div>\n\n\n//                 </div>\n//                 <button className={`btn `} onClick={() => console.log('STORE', store.getState())}>\n//                     Store\n//                 </button>\n\n//             </div >\n//         );\n//     }\n// }\n// function map_state_to_props(state) {\n//     return {\n//         active_user: state.active_user,\n//         left_sidebar: state.left_sidebar,\n//         settings: state.settings,\n//     }\n// }\n// export default connect(map_state_to_props, {\n//         set_active_user,\n//         left_sidebar_controls,\n//         toggle_sidebar_menu_collapse\n//     }\n// )(withRouter(Left_sidebar));\n\n\nimport React from 'react'\nimport { List, ListItem, ListItemIcon, ListItemText, Divider, Avatar, Collapse } from '@material-ui/core';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport * as RC from 'router/constants';\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { set_active_user, left_sidebar_controls, toggle_sidebar_menu_collapse } from 'redux/actions';\nimport 'styles/animations/animations.css';\nimport './left_sidebar.css'\nimport LIST from './menu-list';\nimport store from 'redux/store';\n\n\nfunction LeftSideBar(props) {\n    const [list, setList] = React.useState(LIST);\n\n    const onItemClick = (item) => {\n        if (list[item].nested) {\n            const routes_list = { ...list };\n            routes_list[item].open = !routes_list[item].open;\n            setList(routes_list)\n        }\n    }\n\n\n    const first_name_first_letter = props.active_user.first_name.charAt(0).toUpperCase();\n    const first_name_rest = props.active_user.first_name.length > 1 ? props.active_user.first_name.substring(1) : '';\n    const last_name_first_letter = props.active_user.last_name.charAt(0).toUpperCase();\n    const last_name_rest = props.active_user.last_name.length > 1 ? props.active_user.last_name.substring(1) : '';\n\n    const avatar_size = props.open ? '80px' : '40px';\n    return (\n        <div>\n            <div className={`background_custom_left_side_bar d-flex justify-content-center align-items-center flex-column`} style={{ height: '25vh' }}>\n                <Avatar\n                    className={`text-info bg-white h3 p-3 btn btn-light ${props.open ? 'zoomIn animated' : 'fadeInDownBig animated'}`}\n                    style={{ height: avatar_size, width: avatar_size }}\n                    component=\"button\"\n                    onClick={() => props.history.push(RC.PROFILE)}>\n                    {first_name_first_letter}{last_name_first_letter}\n                </Avatar>\n                {\n                    <div className={props.open ? 'zoomIn animated' : 'zoomOut animated'}>\n                        <Link className={`text-shadow text-white`} to={RC.PROFILE}>\n                            {first_name_first_letter}{first_name_rest} {last_name_first_letter}{last_name_rest}\n                        </Link>\n                    </div>\n                }\n            </div>\n\n            <List className={`zoomIn animated`}>\n                {\n                    props.settings.left_sidebar_collapsed ?\n                        Object.keys(list).map((item, i) => {\n                            const elem = list[item];\n                            return <div key={i}>\n                                <ListItem button className={`text-white`} selected={window.location.pathname === elem.url} component={Link} to={elem.url} onClick={() => onItemClick(item)}>\n                                    <ListItemIcon className={`text-white`}>{elem.icon_class}</ListItemIcon>\n                                    <ListItemText primary={elem.title} primaryTypographyProps={{ variant: 'body2' }} />\n                                    {elem.nested ? (elem.open ? <ExpandLess /> : <ExpandMore />) : ''}\n                                </ListItem>\n                                {\n                                    elem.nested ?\n                                        <Collapse in={elem.open} timeout=\"auto\" unmountOnExit>\n                                            <Divider />\n                                            <List component=\"div\" className={`bg-slate-800`} disablePadding>\n                                                {\n                                                    elem.routes.map((nitem, ni) => {\n                                                        return <ListItem key={ni * i} button disabled={!nitem.active} selected={window.location.pathname === nitem.url} className={`text-white`} component={Link} to={nitem.url}>\n                                                            <ListItemIcon className={`text-white`}>{nitem.icon_class}</ListItemIcon>\n                                                            <ListItemText primary={nitem.title} primaryTypographyProps={{ variant: 'body2' }} />\n                                                        </ListItem>\n                                                    })\n                                                }\n                                            </List>\n                                            <Divider />\n                                        </Collapse> : ''\n                                }\n                            </div>\n                        }) : ''\n                }\n            </List>\n            <button className={`btn `} onClick={() => console.log('STORE', store.getState())}>\n                Store\n            </button>\n        </div>\n    )\n}\n\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        left_sidebar: state.left_sidebar,\n        settings: state.settings,\n    }\n}\nexport default connect(map_state_to_props, {\n    set_active_user,\n    left_sidebar_controls,\n    toggle_sidebar_menu_collapse\n}\n)(withRouter(LeftSideBar));","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { BASE_URL, PROFILE, LOGIN_URL } from 'router/constants'\nimport NOPICTURE from 'resources/images/placeholder.jpg'\nimport { set_active_user } from \"redux/actions\";\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport { LOGOUT_USER_REQUEST } from 'services/rest_end_points'\nimport notify from 'notify'\n\n\n\nclass Page_header extends Component {\n\n    on_logout_button_click = () => {\n\n        Axios.post(LOGOUT_USER_REQUEST, {\n            token: localStorage.getItem('user')\n        }, {\n            headers: { 'code-medicine': localStorage.getItem('user') }\n        }).then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                this.props.set_active_user({})\n                this.props.history.push(LOGIN_URL)\n\n                notify('success', '', res.data.message)\n            }\n            else {\n                notify('error', '', res.data.message)\n            }\n\n        })\n            .catch(err => {\n                notify('error', '', err)\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"page-header page-header-light\">\n                {/* <div className=\"page-header-content header-elements-md-inline\">\n                    <div className=\"page-title d-flex\">\n                        <h4>\n                            <i className=\"icon-arrow-left52 mr-2\"></i> \n                            <span className=\"font-weight-semibold\">Home</span> - Dashboard\n                        </h4>\n                        <Link to={BASE_URL} className=\"header-elements-toggle text-default d-md-none\">\n                            <i className=\"icon-more\"></i>\n                        </Link>\n                    </div>\n\n                    <div className=\"header-elements d-none\">\n                        <div className=\"d-flex justify-content-center\">\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-bars-alt text-primary\"></i>\n                                <span>Statistics</span>\n                            </Link>\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-calculator text-primary\"></i> \n                                <span>Invoices</span>\n                            </Link>\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-calendar5 text-primary\"></i> \n                                <span>Schedule</span>\n                            </Link>\n                        </div>\n                    </div>\n                </div> */}\n\n                <div className=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\n                    <div className=\"d-flex\">\n                        <div className=\"breadcrumb py-0\">\n                            {this.props.active_page !== null ? this.props.active_page.map((item, i) => {\n                                return <Fragment key={i}>{item}</Fragment>\n                            }) : ''}\n                            {/* <Link to=\"index.html\" className=\"breadcrumb-item\">\n                                <i className=\"icon-home2 mr-2\"></i> \n                                Home\n                            </Link>\n                            <span className=\"breadcrumb-item active\">Dashboard</span> */}\n                        </div>\n\n                        <Link to={BASE_URL} className=\"header-elements-toggle text-default d-md-none\">\n                            <i className=\"icon-more\"></i>\n                        </Link>\n                    </div>\n\n                    <div className=\"header-elements d-none\">\n                        <div className=\"breadcrumb justify-content-center py-0\">\n                            <Link to={\"#\"} onClick={() => {\n                                alert(\"Please mail us on codemedicine29@gmail.com\");\n                            }} className=\"breadcrumb-elements-item\">\n                                <i className=\"icon-comment-discussion mr-2\"></i>\n                                Support\n                            </Link>\n\n                            <div className=\"breadcrumb-elements-item dropdown p-0\">\n                                <Link to={`#`} className=\"breadcrumb-elements-item dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <img src={NOPICTURE} style={{ height: 30, width: 30 }} className=\"rounded-circle mr-2\" alt=\"\" />\n                                    <span className={``}>{this.props.active_user.first_name}</span>\n                                </Link>\n\n                                <div className=\"dropdown-menu dropdown-menu-right\">\n                                    <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                                    {/* <Link to={`#`} className=\"dropdown-item\"><i className=\"icon-comment-discussion\"></i> Messages <span className=\"badge badge-pill bg-blue ml-auto\">58</span></Link> */}\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link onClick={this.on_logout_button_click} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                                </div>\n                            </div>\n                            {/* <div className=\"breadcrumb-elements-item dropdown p-0\">\n                                <Link to={BASE_URL} className=\"breadcrumb-elements-item dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <i className=\"icon-gear mr-2\"></i>\n                                    Settings\n                                </Link>\n\n                                <div className=\"dropdown-menu dropdown-menu-right\">\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-user-lock\"></i> \n                                        Account security\n                                    </Link>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-statistics\"></i> \n                                        Analytics\n                                    </Link>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-accessibility\"></i> \n                                        Accessibility\n                                    </Link>\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-gear\"></i> \n                                        All settings\n                                    </Link>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        active_page: state.active_page\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, notify })(withRouter(Page_header));","import { Button, IconButton, InputField } from 'components';\r\nimport React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport TimeKeeper from 'react-timekeeper';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { convert_object_array_to_string, Ucfirst } from 'utils/functions';\r\nimport { ProcedureCreate, UserSearchByCredentials } from 'services/queries';\r\nimport Notify from 'notify';\r\n\r\nclass CreateProcedure extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date_input: { value: moment().format('ll'), error: false },\r\n            procedure_type_input: { value: '', label: '', error: false },\r\n            patient_input: { value: '', label: '', error: false },\r\n            doctor_input: { value: '', label: '-', error: false },\r\n            reference_input: { value: '', error: false },\r\n            fee_input: { value: '', error: false },\r\n            discount_input: { value: '', error: false },\r\n            dr_share_input: { value: '', error: false },\r\n            comments_input: { value: '', error: false },\r\n            time_input: { value: moment().format('LT'), error: false },\r\n            paid_amount_input: { value: \"\", error: false },\r\n\r\n            loading: false,\r\n            doctors: [],\r\n            patients: [],\r\n            procedures_list: [],\r\n            pateints_options_loading: false,\r\n        }\r\n        this.search_patient_trigger_timmer = null;\r\n    }\r\n\r\n    populate_doctors = (doctors) => {\r\n        const temp_users = []\r\n        for (let i = 0; i < doctors.length; ++i) {\r\n            const t_user = doctors[i]\r\n\r\n            temp_users.push({\r\n                id: 'doctor_selection',\r\n                value: t_user.doctor._id,\r\n                label: `Dr. ${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${convert_object_array_to_string(t_user.details.specialities, 'description')}`\r\n            })\r\n            if (i === doctors.length - 1) {\r\n                this.setState({ doctors: temp_users });\r\n            }\r\n        }\r\n    }\r\n\r\n    populate_procedures_list = (procedures_list) => {\r\n        const temp = []\r\n        for (let i = 0; i < procedures_list.length; ++i) {\r\n            const t = procedures_list[i]\r\n\r\n            temp.push({\r\n                id: 'procedure_selection',\r\n                value: t._id,\r\n                label: `${Ucfirst(t.name)} | ${Ucfirst(t.department)} `\r\n            })\r\n            if (i === procedures_list.length - 1) {\r\n                this.setState({ procedures_list: temp });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        // console.log('cwrp', new_props)\r\n        if (new_props.doctors)\r\n            this.populate_doctors(new_props.doctors);\r\n        if (new_props.procedures_list)\r\n            this.populate_procedures_list(new_props.procedures_list);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.doctors) {\r\n            this.populate_doctors(this.props.doctors);\r\n        }\r\n        if (this.props.procedures_list) {\r\n            this.populate_procedures_list(this.props.procedures_list);\r\n        }\r\n\r\n        const { data } = this.props;\r\n        if (this.props.data){\r\n            this.setState(state => {\r\n                state.date_input.value = moment(data.time_stamp.operate).format('ll');\r\n                state.procedure_type_input.label = `${data.procedure_type.name} | ${data.procedure_type.department}`;\r\n                state.procedure_type_input.value = data.procedures_list_id\r\n                state.patient_input.label = `${data.patient.mrn} | ${Ucfirst(data.patient.first_name)} ${Ucfirst(data.patient.last_name)}`;\r\n                state.patient_input.value = data.patient_id;\r\n                state.doctor_input.label =  `Dr. ${Ucfirst(data.doctor.first_name)} ${Ucfirst(data.doctor.last_name)}`;\r\n                state.doctor_input.value = data.doctor_id;\r\n                state.reference_input.value = data.reference;\r\n                state.fee_input.value = data.fee;\r\n                state.discount_input.value = data.discount;\r\n                state.dr_share_input.value = data.dr_share;\r\n                state.comments_input.value = data.description;\r\n                state.time_input.value = moment(data.time_stamp.operate).format('LT');\r\n                state.paid_amount_input.value = data.paid_amount;\r\n                return state;\r\n            })\r\n        }\r\n    }\r\n\r\n    onCreateProcedure = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true }, () => {\r\n            try {\r\n                const operate_time = `${moment(this.state.date_input.value).format('YYYY-MM-DD')}T${moment(this.state.time_input.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`\r\n                const payload = {\r\n                    patient_id: this.state.patient_input.value.trim(),\r\n                    doctor_id: this.state.doctor_input.value.trim(),\r\n                    appointment_id: this.props.appointment_id || null,\r\n                    procedure_list_id: this.state.procedure_type_input.value.trim(),\r\n                    reference: this.state.reference_input.value.trim(),\r\n                    fee: this.state.fee_input.value,\r\n                    discount: this.state.discount_input.value.trim(),\r\n                    dr_share: this.state.dr_share_input.value.trim(),\r\n                    description: this.state.comments_input.value.trim(),\r\n                    paid_amount: this.state.paid_amount_input.value,\r\n                    time_stamp: {\r\n                        operate: operate_time,\r\n                        report: operate_time,\r\n                    }\r\n                }\r\n                if (this.props.data){\r\n                    payload._id = this.props.data._id;\r\n                    console.log('update payload', payload)\r\n                    \r\n                }\r\n                else {\r\n                    console.log('create payload', payload)\r\n                    ProcedureCreate(payload).then(_res => {\r\n                        Notify('success', '', _res.data.message);\r\n                        this.setState({ loading: false });\r\n                        setTimeout(() => {\r\n                            this.props.handleClose(true);//close modal with true to indicate that procedures should be loaded again                            \r\n                        }, 1000);\r\n                    }).catch(error => {\r\n                        Notify('error', '', error.toString());\r\n                        this.setState({ loading: false });\r\n                    })\r\n                }\r\n                \r\n            } catch (e) {\r\n                // console.log('error', e)\r\n                Notify('info', '', e.toString());\r\n                this.setState({ loading: false });\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } });\r\n    }\r\n\r\n    onSelectChange = (e, id) => {\r\n        console.log('e', e, id)\r\n        if (id === 'procedure_type_input' && e){\r\n            const respective_item = this.props.procedures_list.find(item => item._id === e.value);\r\n            this.setState({ [id]: { value: e.value, label: e.label, error: false }, fee_input: { value: respective_item.operation_charges, error: false } });\r\n        }\r\n        else {\r\n            this.setState({ [id]: { value: e ? e.value : '', label: e ? e.label : '', error: false } });\r\n        }\r\n    }\r\n\r\n    populate_patients = (str) => {\r\n        clearTimeout(this.search_patient_trigger_timmer);\r\n        if (str.length >= 2) {\r\n            this.setState({ pateints_options_loading: true }, () => {\r\n                this.search_patient_trigger_timmer = setTimeout(() => {\r\n                    UserSearchByCredentials(str, 'Patient').then(_res => {\r\n                        console.log('response ', _res.data);\r\n                        const temp = []\r\n                        if (_res.data.payload.users.length > 0){\r\n                            for (let i = 0; i < _res.data.payload.users.length; ++i) {\r\n                                const t = _res.data.payload.users[i]\r\n        \r\n                                temp.push({\r\n                                    id: 'patient_selection',\r\n                                    value: t._id,\r\n                                    label: `${t.mrn} | ${Ucfirst(t.first_name)} ${Ucfirst(t.last_name)} `\r\n                                })\r\n                                if (i === _res.data.payload.users.length - 1) {\r\n                                    this.setState({ patients: temp, pateints_options_loading: false });\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.setState({ patients: [], pateints_options_loading: false });\r\n                        }\r\n                    })\r\n                }, 1000)\r\n                \r\n            })\r\n        }\r\n        else {\r\n            this.setState({ patients: [], pateints_options_loading: false });\r\n        }\r\n    }\r\n\r\n    procedureDateInputChange = (e) => {\r\n        if (e === '') {\r\n            this.setState({ date_input: { value: '', error: true } })\r\n        }\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n                // this.props.clear_todays_appointments()\r\n                // this.props.load_todays_appointments(configured_date)\r\n                localStorage.setItem('Gh65$p3a008#2G', configured_date)\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ date_input: { value: configured_date, error: configured_date === '' ? true : false } })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal visible={this.props.visibility} dialogClassName=\"modal-lg\" onClickBackdrop={() => this.props.handleClose()}>\r\n                <form method=\"post\" onSubmit={this.onCreateProcedure}>\r\n                    <div className={`modal-header ${this.props.data ? 'bg-slate' : 'bg-teal-400'}`}>\r\n                        <h5>{this.props.data? `Update Procedure`:`Create New Procedure`}</h5>\r\n                        <div className={`w-25`}>\r\n                            <DateTimePicker id=\"date_input\"\r\n                                onChange={(e) => this.procedureDateInputChange(e)}\r\n                                className=\"clock_datatime_picker text-teal-400\"\r\n                                inputProps={{\r\n                                    placeholder: 'Select Date',\r\n                                    width: '100%',\r\n                                    className: `form-control ${this.state.date_input.error ? 'border-danger' : ''}`,\r\n                                    disabled: this.state.loading\r\n                                }}\r\n                                input={true}\r\n                                dateFormat={'ll'}\r\n                                timeFormat={false}\r\n                                closeOnSelect={true}\r\n                                value={this.state.date_input.value}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={`modal-body`}>\r\n                        <div className={`container-fluid`}>\r\n\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-8`}>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-12`}>\r\n                                            <InputField\r\n                                                heading=\"What procedure to do?\"\r\n                                                field_type=\"select\"\r\n                                                required\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                options={this.state.procedures_list}\r\n                                                className={`Select-option`}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Search for procedure\"\r\n                                                id=\"procedure_type_input\"\r\n                                                isDisabled={this.state.loading}\r\n                                                onChange={e => this.onSelectChange(e, 'procedure_type_input')}\r\n                                                // value={{ id: 'blood_group_selection', label: this.state.user_blood_group.value }}\r\n                                                value={{ id: 'procedure_type_input', value: this.state.procedure_type_input.value, label: this.state.procedure_type_input.label }}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.procedure_type_input.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-10`}>\r\n                                            <InputField\r\n                                                heading=\"Select Patient\"\r\n                                                field_type=\"select\"\r\n                                                required\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                isLoading={this.state.pateints_options_loading}\r\n                                                options={this.state.patients}\r\n                                                noOptionsMessage={(e) => \"Type to Search\"}\r\n                                                className={`Select-option`}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Search Patients\"\r\n                                                isDisabled={this.state.loading}\r\n                                                onChange={e => this.onSelectChange(e, 'patient_input')}\r\n                                                onInputChange={e => this.populate_patients(e)}\r\n                                                value={{ id: 'patient_input', value: this.state.patient_input.value, label: this.state.patient_input.label }}\r\n                                                // defaultValue={{ id: 'patient_input', value: this.state.patient_input.value, label: this.state.patient_input.label }}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.patient_input.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-md-2 d-flex align-items-end`}>\r\n                                            <Popup\r\n                                                trigger={\r\n                                                    <IconButton\r\n                                                        icon=\"icon-plus3\"\r\n                                                        size=\"lg\"\r\n                                                        className={`btn-block`}\r\n                                                        color=\"gray\"\r\n                                                        variant=\"filled\"\r\n                                                        onClick={() => console.log('call the new user modal')}\r\n                                                    />\r\n                                                }\r\n                                                flowing\r\n                                                // hoverable\r\n                                                content={\r\n                                                    <div className={`card card-body bg-dark text-white shadow ml-1 py-1 mt-4`}>\r\n                                                        Add new Patient\r\n                                                </div>\r\n                                                }\r\n                                                position='top center'\r\n                                                style={{ zIndex: 15000 }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-8`}>\r\n                                            <InputField\r\n                                                heading=\"Select doctor\"\r\n                                                field_type=\"select\"\r\n                                                required\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                options={this.state.doctors}\r\n                                                className={`Select-option`}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Search Doctor\"\r\n                                                id=\"doctor_input\"\r\n                                                isDisabled={this.state.loading}\r\n                                                onChange={e => this.onSelectChange(e, 'doctor_input')}\r\n                                                value={{ id: 'doctor_input', label: this.state.doctor_input.label, value: this.state.doctor_input.value }}\r\n                                                // defaultValue={{ id: 'doctor_input', label: this.state.doctor_input.label }}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.doctor_input.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"reference_input\"\r\n                                                heading=\"Refered by\"\r\n                                                className=\"form-control\"\r\n                                                value={this.state.reference_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Reference of a doctor\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"fee_input\"\r\n                                                heading=\"Fee\"\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                value={this.state.fee_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Enter Fee\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"discount_input\"\r\n                                                heading=\"Discount\"\r\n                                                className=\"form-control\"\r\n                                                value={this.state.discount_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Enter Discount\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"dr_share_input\"\r\n                                                heading=\"Dr. share (%)\"\r\n                                                className=\"form-control\"\r\n                                                min=\"0\"\r\n                                                max=\"100\"\r\n                                                type=\"number\"\r\n                                                required\r\n                                                value={this.state.dr_share_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Enter Doctor share\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-8`}>\r\n                                            <InputField\r\n                                                id=\"comments_input\"\r\n                                                heading=\"Comments if any\"\r\n                                                placeholder=\"Write specific description if need to be addressed\"\r\n                                                icon_class=\"icon-home\"\r\n                                                field_type=\"text-area\"\r\n                                                value={this.state.comments_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                disabled={this.state.loading}\r\n                                                // error={this.state.comments_input.error}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <div className={``}>\r\n                                            <InputField\r\n                                                id=\"paid_amount_input\"\r\n                                                heading=\"Paid Amount\"\r\n                                                placeholder=\"Enter amount\"\r\n                                                value={this.state.paid_amount_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                // error={this.state.paid_amount_input.error}\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                            </div>\r\n                                            <div className={`h4`}>\r\n                                                <span className={`font-weight-bold`}>Balance: </span>{(parseInt(this.state.paid_amount_input.value) || 0) - ((parseInt(this.state.fee_input.value) || 0) - (parseInt(this.state.discount_input.value) || 0))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-4`}>\r\n                                    <label>Specify the time of procedure</label>\r\n                                    <TimeKeeper\r\n                                        time={this.state.time_input.value}\r\n                                        onChange={(new_time) => this.setState({ time_input: { value: new_time.formatted12, error: false } })}\r\n                                        // onDoneClick={() => console.log('time set')}\r\n                                        coarseMinutes={5}\r\n                                        forceCoarseMinutes\r\n                                        switchToMinuteOnHourSelect={true}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`modal-footer`}>\r\n                        <div className=\"mr-auto d-flex\">\r\n                            <span className=\"badge badge-light badge-striped badge-striped-left border-left-teal-400\" >\r\n                                <span className=\"h6 font-weight-bold mr-1\">Total: {(parseInt(this.state.fee_input.value) || 0) - (parseInt(this.state.discount_input.value) || 0)}</span>\r\n                            </span>\r\n                            <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                                <span className=\"h6 font-weight-bold mr-1\">Discount: {parseInt(this.state.discount_input.value) || 0}</span>\r\n                            </span>\r\n                            <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                                <span className=\"h6 font-weight-bold mr-1\">Dr. Share: {(((parseInt(this.state.fee_input.value) || 0) - (parseInt(this.state.discount_input.value) || 0)) * (parseInt(this.state.dr_share_input.value) || 0)) / 100}</span>\r\n                            </span>\r\n                        </div>\r\n                        <Button icon=\"icon-plus3\" type=\"submit\">\r\n                            {this.props.data ? `Update` : `Create`}\r\n                        </Button>\r\n                        <Button icon=\"icon-cross\" color=\"red\" type=\"button\" onClick={() => this.props.handleClose()}>\r\n                            Cancel\r\n                    </Button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        doctors: state.doctors.payload,\r\n        procedures_list: state.proceduresList.payload,\r\n    }\r\n}\r\nexport default connect(map_state_to_props)(CreateProcedure);","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport { InputField, Button } from 'components'\r\nimport { connect } from 'react-redux';\r\nimport { convert_object_array_to_string, Ucfirst } from 'utils/functions';\r\nimport { CreateNewProcedureItem } from 'services/queries';\r\nimport Notify from 'notify';\r\n\r\nclass CreateProcedureList extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            doctors: [],\r\n\r\n            name_input: { value: '', error: false },\r\n            department_input: { value: '', error: false },\r\n            description_input: { value: '', error: false },\r\n            operation_risk_input: { value: '', error: false },\r\n            operation_efficacy_input: { value: '', error: false },\r\n            operation_alternative_input: { value: '', error: false },\r\n            operation_time_input: { value: '', error: false },\r\n            operation_doctors_input: { value: [], error: false },\r\n            operation_charges_input: { value: '', error: false },\r\n\r\n        }\r\n    }\r\n\r\n    populate_doctors = (props) => {\r\n        const temp_users = []\r\n        for (let i = 0; i < props.doctors.length; ++i) {\r\n            const t_user = props.doctors[i]\r\n\r\n            temp_users.push({\r\n                id: 'doctor_selection',\r\n                value: t_user.doctor._id,\r\n                label: `Dr. ${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${convert_object_array_to_string(t_user.details.specialities, 'description')}`\r\n            })\r\n            if (i === props.doctors.length - 1) {\r\n                this.setState({ doctors: temp_users });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        // console.log('cwrp', new_props)\r\n        this.populate_doctors(new_props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.doctors) {\r\n            this.populate_doctors(this.props);\r\n        }\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } });\r\n    }\r\n\r\n    onDoctorsSelectChange = (e) => {\r\n        console.log('select', e)\r\n        this.setState({ operation_doctors_input: { value: e, error: false } })\r\n    }\r\n\r\n    onCreateProcedureList = (e) => {\r\n        e.preventDefault();\r\n        console.log('state', this.state)\r\n        /**\r\n         *  -department_input: {value: \"hahahah\", error: false}\r\n            -description_input: {value: \"hahahaha\", error: false}\r\n            doctors: (8) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n            loading: false\r\n            -name_input: {value: \"hahaha\", error: false}\r\n            -operation_alternative_input: {value: \"none\", error: false}\r\n            -operation_charges_input: {value: \"123\", error: false}\r\n            -operation_doctors_input:\r\n                error: false\r\n                value: Array(2)\r\n                    0: {id: \"doctor_selection\", value: \"6005efaeec7d8958bdac3b58\", label: \"Dr. Ashvin Patel | \"}\r\n                    1: {id: \"doctor_selection\", value: \"6005e6c0ec7d8958bdac3b3b\", label: \"Dr. Farrukh Shahid | \"}\r\n                length: 2\r\n                __proto__: Array(0)\r\n                __proto__: Object\r\n            -operation_efficacy_input: {value: \"none\", error: false}\r\n            -operation_risk_input: {value: \"none\", error: false}\r\n            -operation_time_input: {value: \"56\", error: false}\r\n         */\r\n        try {\r\n            const payload = {\r\n                name: this.state.name_input.value.trim(),\r\n                department: this.state.department_input.value.trim(),\r\n                description: this.state.description_input.value.trim(),\r\n                operation_alternative: this.state.operation_alternative_input.value.trim(),\r\n                operation_charges: this.state.operation_charges_input.value.trim(),\r\n                operation_doctors: this.state.operation_doctors_input.value.map(item => item.value),\r\n                operation_efficacy: this.state.operation_efficacy_input.value.trim(),\r\n                operation_risk: this.state.operation_risk_input.value.trim(),\r\n                operation_time: parseInt(this.state.operation_time_input.value.trim())\r\n            }\r\n            console.log('payload', payload);\r\n            CreateNewProcedureItem(payload).then(_res => {\r\n                console.log('response', _res.data)\r\n                Notify('success', '', _res.data.message);\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                Notify('error', '', err.toString());\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log('error', err);\r\n            Notify('error', '', err.toString());\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal visible={this.props.visibility} dialogClassName=\"modal-lg\" onClickBackdrop={() => this.props.handleClose()}>\r\n                <form method=\"post\" onSubmit={this.onCreateProcedureList}>\r\n                    <div className={`modal-header bg-teal-400`}>\r\n                        <h5>Add New Procedure To List</h5>\r\n                    </div>\r\n                    <div className={`modal-body`}>\r\n                        <div className={`container-fluid`}>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-6`}>\r\n                                    <InputField\r\n                                        id=\"name_input\"\r\n                                        heading=\"Procedure name\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.name_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter name of the procedure\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={`col-lg-6`}>\r\n                                    <InputField\r\n                                        id=\"department_input\"\r\n                                        heading=\"Department Name\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.department_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter name of the department\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"description_input\"\r\n                                        heading=\"Description\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.description_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter description of procedure\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-3`}>\r\n                                    <InputField\r\n                                        id=\"operation_charges_input\"\r\n                                        heading=\"Fee\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_charges_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter default fee\"\r\n                                        helper=\"Only for default value\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={`col-lg-3`}>\r\n                                    <InputField\r\n                                        id=\"operation_time_input\"\r\n                                        heading=\"Operation time (minutes)\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_time_input.value}\r\n                                        helper=\"Number of minutes\"\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter Time of operation in minutes\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={`col-lg-6`}>\r\n                                    <InputField\r\n                                        heading=\"Select doctor\"\r\n                                        field_type=\"select\"\r\n                                        required\r\n                                        isClearable\r\n                                        closeMenuOnSelect={false}\r\n                                        menuPlacement=\"auto\"\r\n                                        options={this.state.doctors}\r\n                                        className={`Select-option`}\r\n                                        classNamePrefix={`form-control`}\r\n                                        placeholder=\"Select doctors for this procedure\"\r\n                                        id=\"doctor_input\"\r\n                                        isMulti\r\n                                        isDisabled={this.state.loading}\r\n                                        onChange={_doctors => this.setState({ operation_doctors_input: { value: _doctors, error: false } })}\r\n                                        // value={{ id: 'blood_group_selection', label: this.state.user_blood_group.value }}\r\n                                        // defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\r\n                                        styles={{\r\n                                            container: base => ({\r\n                                                ...base,\r\n                                                backgroundColor: this.state.operation_doctors_input.error ? '#FF0000' : '',\r\n                                                padding: 1,\r\n                                                borderRadius: 5\r\n                                            }),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"operation_risk_input\"\r\n                                        heading=\"Operation Risk\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_risk_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter the risk involved in the procedure (none if not)\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"operation_efficacy_input\"\r\n                                        heading=\"Efficacy\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_efficacy_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter the effictiveness of the procedure\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"operation_alternative_input\"\r\n                                        heading=\"Alternative\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_alternative_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter the alternative of this procedure (none if not)\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={`modal-footer`}>\r\n                        <Button icon=\"icon-plus3\" type=\"submit\">\r\n                            Create\r\n                        </Button>\r\n                        <Button icon=\"icon-cross\" color=\"red\" onClick={() => this.props.handleClose()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        doctors: state.doctors.payload\r\n    }\r\n}\r\nexport default connect(map_state_to_props)(CreateProcedureList);","import React from 'react'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\n\r\nfunction TodaysPatientRowLoading(props) {\r\n    return (\r\n        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n            <div className={`container-fluid mt-2 bg-light`} >\r\n                {/* {this.props.reference} */}\r\n                <div className={`row`}>\r\n                    {/* Patient name and phone number */}\r\n                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 `}>\r\n                        <Skeleton className=\"my-1\" count={1} height={120}/>\r\n                    </div>\r\n                    {/* Appointment Time column */}\r\n                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0`} >\r\n                        <Skeleton className=\"my-1\" count={1} height={120} />\r\n                    </div>\r\n                    {/* appointment details */}\r\n                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                        {/* Appointment date and time */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 font-weight-bold h6\">\r\n                                <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                <span className=\"text-muted float-lg-right float-md-right float-left\">\r\n                                    <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Reason */}\r\n                        <div className={`row`}>\r\n                            <div className={`col-12 h6`}>\r\n                                <span className=\"font-weight-bold\">\r\n                                    <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                </span>\r\n                                <span className={`float-right`}>\r\n                                    <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Actions */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <Skeleton className=\"my-1\" count={1} height={35}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SkeletonTheme>\r\n    )\r\n}\r\nexport default TodaysPatientRowLoading;","import { IconButton } from 'components'\r\nimport React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Select, { components } from 'react-select'\r\nimport { Popup } from 'semantic-ui-react';\r\nimport { PATIENT_VISIT_STATUSES } from 'utils/constant_data';\r\nimport { convert_object_array_to_string, Ucfirst } from 'utils/functions';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment'\r\nimport CreateProcedure from './create-procedure';\r\nimport CreateProcedureList from './create-procedure-list';\r\nimport { GetProcedures } from 'services/queries';\r\nimport { Link } from 'react-router-dom';\r\nimport TodaysPatientRowLoading from '../todays_patient/todays_patient_row_loading';\r\n\r\nconst Menu = props => {\r\n    return (\r\n        <components.Menu {...props} >\r\n            <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\r\n                {props.children}\r\n            </div>\r\n        </components.Menu>\r\n    );\r\n};\r\n\r\nclass Procedures extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctors: [],\r\n            patients: [],\r\n            search_date: { value: moment(new Date()).format('ll') },\r\n            create_procedure_modal_visibility: { visibility: false, data: null, type: 0 },//0 for create, 1 for update\r\n            create_procedure_list_modal_visibility: { visibility: false, data: null, type: 0 },//0 for create, 1 for update\r\n            procedures: [],\r\n            procedures_copy: [],\r\n            loading: true,\r\n\r\n            doctors_input: { value: '', label: '', error: false },\r\n            patients_input: { value: '', label: '', error: false },\r\n            status_selection: { value: '', label: '', error: false },\r\n        }\r\n    }\r\n\r\n    populate_doctors = (props) => {\r\n        const temp_users = []\r\n        for (let i = 0; i < props.doctors.length; ++i) {\r\n            const t_user = props.doctors[i]\r\n\r\n            temp_users.push({\r\n                id: `doctor_selection`,\r\n                value: t_user.doctor._id,\r\n                label: `Dr. ${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${convert_object_array_to_string(t_user.details.specialities, 'description')}`\r\n            })\r\n            if (i === props.doctors.length - 1) {\r\n                this.setState({ doctors: temp_users });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        this.populate_doctors(new_props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.doctors) {\r\n            this.populate_doctors(this.props);\r\n        }\r\n        if (localStorage.getItem('Gh65$p3a008#3B')){\r\n            this.setState({ search_date: { value: localStorage.getItem('Gh65$p3a008#3B') } }, () => this.load_procedures())\r\n        }\r\n        else {\r\n            this.load_procedures()\r\n        }\r\n    }\r\n\r\n    load_procedures = () => {\r\n        !this.state.loading && this.setState({ loading: true })\r\n        GetProcedures(this.state.search_date.value).then(_procedures => {\r\n            console.log('procedures', _procedures.data)\r\n            this.setState({ procedures: _procedures.data.payload, loading: false })\r\n        }).catch(err => console.log('error', err))\r\n    }\r\n\r\n    todays_date_change = (e) => {\r\n        if (e === '') {\r\n            this.setState({ search_date: { value: '' } })\r\n        }\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n                localStorage.setItem('Gh65$p3a008#3B', configured_date)\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ search_date: { value: configured_date } }, () => this.load_procedures())\r\n            }\r\n        }\r\n    }\r\n\r\n    filter_records = () => {\r\n        // this.state.procedures.find(item => item.)\r\n        return this.state.procedures.filter(item => \r\n            (this.state.doctors_input.value === \"\" ? true : item.doctor_id === this.state.doctors_input.value) &&\r\n            (this.state.patients_input.value === \"\" ? true : item.patient_id === this.state.patients_input.value) &&\r\n            (this.state.status_selection.label === \"\" ? true : item.procedure_status === this.state.status_selection.label))\r\n    }\r\n\r\n    onSelectChange = (e, id) => {\r\n        console.log('e', e, id)\r\n        this.setState({ [id]: { value: e ? e.value : '', label: e ? e.label : '', error: false } });\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log('doctors', this.props.doctors, 'state', this.state.doctors)\r\n        const records = this.filter_records();\r\n        return (\r\n            <Fragment>\r\n                <div className={`container-fluid`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"font-weight-semibold\">Doctors</label>\r\n                                        <Select\r\n                                            isClearable\r\n                                            components={{ Menu }}\r\n                                            menuPlacement=\"auto\"\r\n                                            options={this.state.doctors}\r\n                                            classNamePrefix={`form-control`}\r\n                                            placeholder=\"Search Doctor\"\r\n                                            onChange={e => this.onSelectChange(e, \"doctors_input\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"font-weight-semibold\">Patients</label>\r\n                                        <Select\r\n                                            id=\"patient_selection\"\r\n                                            isClearable\r\n                                            components={{ Menu }}\r\n                                            menuPlacement=\"auto\"\r\n                                            options={[]}\r\n                                            classNamePrefix={`form-control`}\r\n                                            placeholder=\"Search Patient\"\r\n                                        // onInputChange={e => this.populate_patient(e)}\r\n                                            onChange={e => this.onSelectChange(e, \"patients_input\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={`col-md-4`}>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"font-weight-semibold\">Status</label>\r\n                                        <Select\r\n                                            isClearable\r\n                                            options={PATIENT_VISIT_STATUSES}\r\n                                            placeholder=\"Status\"\r\n                                            onChange={e => this.onSelectChange(e, \"status_selection\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 d-flex justify-content-center align-items-end mb-2 pb-2\">\r\n\r\n                            <Popup\r\n                                trigger={\r\n                                    <IconButton\r\n                                        icon=\"icon-filter4\"\r\n                                        variant=\"filled\"\r\n                                        color=\"black\"\r\n                                        size=\"lg\"\r\n                                        className={`mx-1`}\r\n                                    // onClick={this.set_filters}\r\n                                    />\r\n                                }\r\n                                content={\r\n                                    <div className={`card card-body bg-dark text-white shadow mb-1 py-1`}>\r\n                                        Filter records\r\n                                    </div>\r\n                                }\r\n                                flowing\r\n                                // hoverable\r\n                                position='top center'\r\n                            />\r\n\r\n                            <Popup\r\n                                trigger={\r\n                                    <IconButton\r\n                                        icon=\"icon-add-to-list\"\r\n                                        variant=\"filled\"\r\n                                        size=\"lg\"\r\n                                        className={`mx-1`}\r\n                                        onClick={() => this.setState({ create_procedure_list_modal_visibility: { visibility: true, data: null, type: 0 } })}\r\n                                    />\r\n                                }\r\n                                content={\r\n                                    <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                        New Procedure Item\r\n                                    </div>\r\n                                }\r\n                                flowing\r\n                                // hoverable\r\n                                position='top center'\r\n                            />\r\n\r\n                            <Popup\r\n                                trigger={\r\n                                    <IconButton\r\n                                        icon=\"icon-plus3\"\r\n                                        variant=\"filled\"\r\n                                        size=\"lg\"\r\n                                        className={`mx-1`}\r\n                                        onClick={() => this.setState({ create_procedure_modal_visibility: { visibility: true, data: null, type: 0 } })}\r\n                                    />\r\n                                }\r\n                                content={\r\n                                    <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                        New Procedure\r\n                                </div>\r\n                                }\r\n                                flowing\r\n                                // hoverable\r\n                                position='top center'\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"table-header-background shadow-sw\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-md-6 col-12 d-flex align-items-center\">\r\n                                <span className=\"text-white\">Procedure list for date</span>\r\n                                <span className=\"badge badge-secondary ml-2 d-none d-lg-block\">\r\n                                    {this.state.search_date.value}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-lg-3 d-none d-lg-block col-0\"></div>\r\n                            <div className=\"col-lg-3 col-md-6 col-12 d-flex\">\r\n                                <DateTimePicker id=\"dob_text_input\"\r\n                                    onChange={this.todays_date_change}\r\n                                    className=\"clock_datatime_picker \"\r\n                                    inputProps={{\r\n                                        placeholder: 'Select Date',\r\n                                        width: '100%',\r\n                                        className: `form-control bg-teal-400 border-teal-400`\r\n                                    }}\r\n                                    input={true}\r\n                                    dateFormat={'ll'}\r\n                                    timeFormat={false}\r\n                                    closeOnSelect={true}\r\n                                    value={this.state.search_date.value}\r\n\r\n                                    onClick={() => console.log('date select', this.state.search_date.value)}\r\n                                />\r\n                                <button className=\"btn bg-teal-400 border-teal-400 text-teal-400 btn-sm ml-2\" onClick={() => {\r\n                                    // this.props.clear_todays_appointments()\r\n                                    // this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\r\n                                }}>\r\n                                    <i className=\"icon-search4\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`table-responsive mt-2 card mb-0 pb-0`}>\r\n                        <table className={`table table-hover mb-0`}>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.loading ?\r\n                                        <div className={``}>\r\n                                            <div className={``}><TodaysPatientRowLoading /></div>\r\n                                            <div className={``}><TodaysPatientRowLoading /></div>\r\n                                        </div> :\r\n                                        records.length === 0 ?\r\n                                            <div className=\"alert alert-info mb-0\">\r\n                                                <strong>Info!</strong> No Procedures found.\r\n                                            </div> :\r\n                                            records.map((item, i) => {\r\n                                                return (\r\n                                                    <tr key={i}>\r\n                                                        <td>\r\n                                                            <div className={`container-fluid`} >\r\n                                                                <div className={`row`}>\r\n                                                                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-left-teal-400 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                                                                        <div className={`btn btn-outline bg-teal-400 text-teal-400 btn-block jackInTheBox animated`}>\r\n                                                                            <span className={`rounded-circle text-white bg-teal-400 h3 p-2`}>{item.patient.first_name.charAt(0).toUpperCase()}{item.patient.last_name.charAt(0).toUpperCase()}</span>\r\n                                                                            <h4 className={`mt-2`}>{Ucfirst(item.patient.first_name)} {Ucfirst(item.patient.last_name)}</h4>\r\n                                                                            <span><i className=\"icon-phone-wave mr-1\"></i> {item.patient.phone_number}</span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-bottom-sm-2 border-left-teal-400 border-right-teal-400 border-right-2 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                                                                        <div className={`h-100 d-flex flex-column justify-content-center jackInTheBox animated text-teal-400 btn-block text-center`}>\r\n                                                                            <h1>{moment(item.time_stamp.operate, \"YYYY-MM-DDThh:mm:ss\").format('hh:mm a')}</h1>\r\n                                                                            <p>{moment(item.time_stamp.operate).fromNow()}</p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                                                                        <div className={`font-weight-bold`}>{item.procedure_type.name.toUpperCase()} | {item.procedure_type.department.toUpperCase()}</div>\r\n                                                                        <div className={``}>\r\n                                                                            {item.appointment_id ? <Link className={`text-teal-400`}>Appointment </Link> : 'Appointment '}\r\n                                                                                with<Link className=\"text-teal-400 font-weight-bold ml-1\" to={\"#\"}>\r\n                                                                                Dr. {Ucfirst(item.doctor.first_name)} {Ucfirst(item.doctor.last_name)}\r\n                                                                                <i className=\"icon-user-tie ml-1\"></i>\r\n                                                                            </Link>\r\n                                                                            <span className={`badge badge-${'waiting' === 'checked out' ? 'primary' : 'danger'} float-right`}>\r\n                                                                                {item.procedure_status}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className={`row`}>\r\n                                                                            <div className={`col-lg-12`}>\r\n                                                                                <span className={`font-weight-bold`}>Report Time: </span>{moment(item.time_stamp.report).format('LLL')}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className={`row`}>\r\n                                                                            <div className={`col-lg-12`}>\r\n                                                                                <span className={`font-weight-bold`}>Fee:</span> Rs {item.fee}/-  <span className={`font-weight-bold`}>Discount:</span> Rs {item.discount || 0}/- {item.discount_purpose && item.discount_purpose !== \"\" ? `(${item.discount_purpose})` : '(standard)'}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className={`row`}>\r\n                                                                            <div className={`col-lg-12`}>\r\n                                                                                <IconButton\r\n                                                                                    icon=\"icon-pencil\"\r\n                                                                                    color=\"default\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    onClick={() => this.setState({\r\n                                                                                        create_procedure_modal_visibility: {\r\n                                                                                            visibility: true,\r\n                                                                                            data: item,\r\n                                                                                            type: 1\r\n                                                                                        }\r\n                                                                                    })}\r\n                                                                                    />\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.create_procedure_modal_visibility.visibility &&\r\n                    <CreateProcedure\r\n                        visibility={this.state.create_procedure_modal_visibility.visibility}\r\n                        handleClose={(load_procedures) => {\r\n                                this.setState({ create_procedure_modal_visibility: { visibility: false, data: null, type: 0 } })\r\n                                if (load_procedures) this.load_procedures();\r\n                            }\r\n                        }\r\n                        data={this.state.create_procedure_modal_visibility.data}\r\n                    />\r\n                }\r\n                {\r\n                    this.state.create_procedure_list_modal_visibility.visibility &&\r\n                    <CreateProcedureList\r\n                        visibility={this.state.create_procedure_list_modal_visibility.visibility}\r\n                        handleClose={() => this.setState({ create_procedure_list_modal_visibility: { visibility: false, data: null, type: 0 } })}\r\n                    />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        doctors: state.doctors.payload,\r\n    }\r\n}\r\nexport default connect(map_state_to_props)(Procedures);","import React, { Component } from 'react';\r\nimport Loading from 'components/loading';\r\nimport { ProcedureCreate, ProcedureDelete, ProcedureUpdate } from 'services/queries';\r\nimport notify from 'notify'\r\n\r\nclass ProcedureItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            description_text_input: { value: this.props.data.procedure_description, error: false },\r\n            charges_text_input: { value: this.props.data.procedure_fee, error: false },\r\n            discount_text_input: { value: this.props.data.procedure_discount, error: false },\r\n            dr_share_text_input: { value: this.props.data.procedure_dr_share, error: false },\r\n\r\n            prev_description: this.props.data.procedure_description,\r\n            prev_fee: this.props.data.procedure_fee,\r\n            prev_discount: this.props.data.procedure_discount,\r\n            prev_dr_share: this.props.data.procedure_dr_share,\r\n\r\n            edited: false,\r\n            save_click_loading: false,\r\n        }\r\n    }\r\n\r\n    handle_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => {\r\n            if (this.state.description_text_input.value !== this.state.prev_description ||\r\n                parseInt(this.state.charges_text_input.value) !== this.state.prev_fee ||\r\n                parseInt(this.state.discount_text_input.value) !== this.state.prev_discount ||\r\n                parseInt(this.state.dr_share_text_input.value) !== this.state.prev_dr_share) {\r\n                /**\r\n                 * If data loaded is edited\r\n                 */\r\n                this.setState({ edited: true })\r\n            }\r\n            else {\r\n                this.setState({ edited: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    on_save_click = () => {\r\n        /**\r\n         * create request for procedures\r\n         * fee\r\n         * discount\r\n         * description\r\n         */\r\n        this.setState({ save_click_loading: true })\r\n        if (this.props.data.type === 'new') {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id,\r\n                // doctor_id: \r\n                fee: parseInt(this.state.charges_text_input.value),\r\n                discount: parseInt(this.state.discount_text_input.value),\r\n                dr_share: parseInt(this.state.dr_share_text_input.value),\r\n                description: this.state.description_text_input.value,                \r\n            }\r\n            // console.log('payload', payload)\r\n            // return ;\r\n            ProcedureCreate(payload).then(res => {\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('success', '', res.data.message)\r\n                this.props.save_opp(this.props.index, {\r\n                    id: res.data.payload._id, // this.props.data.id,\r\n                    fee: res.data.payload.fee, // parseInt(this.state.charges_text_input.value), \r\n                    discount: res.data.payload.discount, // parseInt(this.state.discount_text_input.value),\r\n                    dr_share: res.data.payload.dr_share, // parseInt(this.state.dr_share_text_input.value),\r\n                    description: res.data.payload.description, // this.state.description_text_input.value \r\n                })\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('error', '', 'Network error')\r\n            })\r\n        }\r\n        else if (this.props.data.type === 'previous') {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id,\r\n                procedure_id: this.props.data.id,\r\n                fee: parseInt(this.state.charges_text_input.value),\r\n                discount: parseInt(this.state.discount_text_input.value),\r\n                dr_share: parseInt(this.state.dr_share_text_input.value),\r\n                description: this.state.description_text_input.value\r\n            }\r\n            ProcedureUpdate(payload).then(res => {\r\n                console.log('success');\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('success', '', res.data.message)\r\n                this.props.save_opp(this.props.index, {\r\n                    id: this.props.data.id,\r\n                    fee: parseInt(this.state.charges_text_input.value),\r\n                    discount: parseInt(this.state.discount_text_input.value),\r\n                    dr_share: parseInt(this.state.dr_share_text_input.value),\r\n                    description: this.state.description_text_input.value\r\n                })\r\n\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('error', '', 'Network error')\r\n            })\r\n        }\r\n    }\r\n\r\n    on_delete_click = () => {\r\n        /**\r\n         * delete request for procedures\r\n         * appointment id\r\n         * procedure id\r\n         */\r\n        if (this.props.data.type !== 'new') {\r\n            this.props.delete_opp(this.props.index)\r\n            ProcedureDelete(this.props.data.id).then(res => {\r\n                this.setState({ save_click_loading: false, edited: false });\r\n                notify('success', '', res.data.message);\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('error', '', 'Network error' + err.toString())\r\n            })\r\n        }\r\n        else {\r\n            this.props.delete_opp(-1)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('procedure item props', this.props)\r\n        const save_button_classes = `btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon mx-1 ${this.state.save_click_loading ? 'p-0' : ''}`;\r\n        const update_button_classes = `btn btn-outline-dark btn-sm secondary btn-icon mx-1 ${this.state.save_click_loading ? 'p-0' : ''}`;\r\n        const delete_button_classes = `btn btn-outline btn-sm bg-danger border-danger text-danger secondary btn-icon`;\r\n        return (\r\n            <tr>\r\n                <td className=\"p-0\" style={{ width: '50%' }}>\r\n                    <input\r\n                        id={`description_text_input`}\r\n                        placeholder=\"Enter Reason\"\r\n                        disabled={this.state.save_click_loading}\r\n                        input_type={'text'}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.description_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.description_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"p-0\" style={{ width: '10%' }}>\r\n                    <input\r\n                        id={`charges_text_input`}\r\n                        placeholder=\"Charges\"\r\n                        input_type={'text'}\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.charges_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.charges_text_input.error}`\r\n                    />\r\n                </td>\r\n                <td className=\"p-0\" style={{ width: '10%' }}>\r\n                    <input\r\n                        id={`discount_text_input`}\r\n                        placeholder=\"Discount\"\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.discount_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.discount_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"p-0\" style={{ width: '10%' }}>\r\n                    <input\r\n                        id={`dr_share_text_input`}\r\n                        placeholder=\"Dr Share %\"\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.dr_share_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.discount_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"d-flex align-items-end justify-content-center border-0\" style={{ padding: '3px' }}>\r\n                    <button className={delete_button_classes}\r\n                        onClick={this.on_delete_click}>\r\n                        <i className=\"icon-cross\" onClick={this.on_delete_click} />\r\n                    </button>\r\n                    {this.state.edited ?\r\n                        <button className={this.props.data.type === 'new' ? save_button_classes : update_button_classes}\r\n                            onClick={this.on_save_click}>\r\n                            {this.state.save_click_loading ? <Loading size=\"30\" /> : <i className=\"icon-floppy-disk\" />}\r\n                        </button> : ''}\r\n                </td>\r\n            </tr>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default ProcedureItem","import React from 'react'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\n\r\n\r\nfunction ProcedureLoading(props) {\r\n    return (\r\n        <div>\r\n            <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n                <div className={`row`}>\r\n                    <div className={`col-lg-4`}>\r\n                        <Skeleton className=\"my-2\" count={3} height={40} />\r\n                    </div>\r\n                    <div className={`col-lg-4`}>\r\n                        <Skeleton className=\"my-2\" count={3} height={40} />\r\n                    </div>\r\n                    <div className={`col-lg-4`}>\r\n                        <Skeleton className=\"my-2\" count={3} height={40} />\r\n                    </div>\r\n                </div>\r\n            </SkeletonTheme>\r\n        </div>\r\n    )\r\n}\r\nexport default ProcedureLoading;","import React, { Component, Fragment } from 'react';\r\nimport ProcedureItem from './procedure_item';\r\nimport Modal from \"react-bootstrap4-modal\";\r\nimport { connect } from 'react-redux';\r\nimport { update_appointment, load_todays_appointments, clear_todays_appointments } from '../../../../redux/actions';\r\nimport ReactToPrint from 'react-to-print';\r\nimport LOGO from '../../../../resources/images/LOGO.png';\r\nimport { get_utc_date, Ucfirst } from '../../../../utils/functions';\r\nimport moment from 'moment';\r\nimport Inputfield from '../../../../components/inputfield';\r\nimport ProcedureLoading from './procedure_loading';\r\nimport { AppointmentCharges, AppointmentCheckout, AppointmentSearchById, AppointmentUpdateCharges, ProcedureCreate, ProcedureSearchByAppointmentId, ProcedureUpdate } from '../../../../services/queries';\r\nimport _ from 'lodash';\r\nimport notify from 'notify'\r\n\r\nclass ProcedureModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            consultancy_fee_text_input: { value: \"\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n            paid_amount_copy: 0,\r\n            total: 0,\r\n            discount: 0,\r\n            minimum_payable: 0,\r\n            procedures_list: [],\r\n            procedures_list_copy: [],\r\n            user_data: null,\r\n            loading_status: true,\r\n            edited_items: [],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.add_procedure({\r\n        //     procedure_fee: 0,\r\n        //     procedure_discount: 0,\r\n        //     procedure_description: '',\r\n        //     type: 'new'\r\n        // })s\r\n        this.handle_total_values();\r\n    }\r\n\r\n\r\n\r\n    save_procedure = (key, data) => {\r\n        const temp = this.state.procedures_list;\r\n        temp[key].type = 'previous';\r\n        temp[key].procedure_fee = data.fee;\r\n        temp[key].procedure_discount = data.discount;\r\n        temp[key].procedure_dr_share = data.dr_share;\r\n        temp[key].procedure_description = data.description;\r\n        temp[key].id = data.id\r\n        this.setState({ procedures_list: temp }, () => this.handle_total_values());\r\n    }\r\n\r\n    delete_procedure = (key) => {\r\n        const temp = this.state.procedures_list;\r\n        if (key === -1)\r\n            temp.pop();\r\n        else {\r\n            temp.splice(key, 1);\r\n        }\r\n        this.setState({ procedures_list: [] }, () => {\r\n            this.setState({ procedures_list: temp }, () => this.handle_total_values())\r\n        })\r\n    }\r\n\r\n    // add_procedure_click = () => {\r\n    //     if ((this.state.procedures_list.filter((data) => { return data.type === 'new' })).length === 0) {\r\n    //         this.add_procedure({\r\n    //             id: null,//Math.max.apply(Math, this.state.procedures_list.map(function(obj) { return obj.id })),\r\n    //             procedure_fee: 0,\r\n    //             procedure_discount: 0,\r\n    //             procedure_dr_share: 0,\r\n    //             procedure_description: '',\r\n    //             type: 'new',\r\n    //         })\r\n\r\n    //     }\r\n    //     else {\r\n    //         notify('info', '', 'There is an unsaved procedure. Please save it first')\r\n    //     }\r\n    // }\r\n\r\n    mount = (appointment_id) => {\r\n        ProcedureSearchByAppointmentId(appointment_id)\r\n            .then(res => {\r\n                this.setState({ procedures_list: res.data.payload, procedures_list_copy: _.cloneDeep(res.data.payload) });\r\n\r\n                AppointmentCharges(appointment_id)\r\n                    .then(res => {\r\n                        const amount = res.data.payload.paid_for_procedures === 0 ?\r\n                            \"\" :\r\n                            res.data.payload.paid_for_procedures.toString();\r\n                        this.setState({\r\n                            loading_status: false,\r\n                            paid_text_input: { value: amount, error: false },\r\n                            paid_amount_copy: amount\r\n                        }, () => this.handle_total_values())\r\n                        /**\r\n                         * Fetch appointment by id, we need patient data here\r\n                         */\r\n                        AppointmentSearchById(appointment_id)\r\n                            .then(res => this.setState({ user_data: res.data.payload, loading_status: false }))\r\n                            .catch(err => {\r\n                                notify('error', '', err.toString())\r\n                                this.setState({ loading_status: false })\r\n                            })\r\n                    }).catch(err => {\r\n                        notify('error', '', err.toString())\r\n                        this.setState({ loading_status: false })\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ procedures_list: [], loading_status: false })\r\n                if (err.response) {\r\n                    if (err.response.status === 401) {\r\n                        notify('error', '', 'Session timeout! Please Signin again');\r\n                    }\r\n                    else {\r\n                        notify('error', '', 'Server is not responding! Please try again later');\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        if (new_props.visibility && new_props.appointment_id !== null) {\r\n            this.mount(new_props.appointment_id);\r\n        }\r\n        else if (new_props.visibility && new_props.appointment_id === null) {\r\n            notify('error', '', 'Something went wrong! Please try again later');\r\n        }\r\n\r\n    }\r\n\r\n    handle_change = (e) => {\r\n        const that = this;\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => {\r\n            that.handle_total_values()\r\n        })\r\n    }\r\n\r\n    // handle_total_values = () => {\r\n    //     let procedure_total = 0;\r\n    //     let procedure_discount = 0;\r\n    //     for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n    //         procedure_total += this.state.procedures_list[i].procedure_fee;\r\n    //         procedure_discount += this.state.procedures_list[i].procedure_discount;\r\n    //     }\r\n\r\n    //     const t_total = this.state.consultancy_fee_text_input.value.length > 0 ?\r\n    //         parseInt(this.state.consultancy_fee_text_input.value) : 0;\r\n    //     const t_discount = this.state.discount_text_input.value.length > 0 ?\r\n    //         parseFloat(this.state.discount_text_input.value) : 0;\r\n    //     const t_followup = this.state.follow_up_text_input.value.length > 0 ?\r\n    //         parseFloat(this.state.follow_up_text_input.value) : 0;\r\n\r\n    //     this.setState({\r\n    //         total: ((t_total + t_followup) - t_discount) + (procedure_total - procedure_discount),\r\n    //         minimum_payable: (t_total - t_discount) + (procedure_total - procedure_discount),\r\n    //         discount: t_discount + procedure_discount\r\n    //     })\r\n    // }\r\n\r\n    show_procedures = () => {\r\n        return this.state.procedures_list.map((item, index) => {\r\n            console.log('item', item);\r\n            return <ProcedureItem\r\n                key={index}\r\n                appointment_id={this.props.appointment_id}\r\n                data={item}\r\n                index={index}\r\n                save_opp={this.save_procedure}\r\n                delete_opp={this.delete_procedure} />\r\n        })\r\n    }\r\n\r\n    handle_close_modal = () => {\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if (this.state.procedures_list[i]._id === null) {\r\n                notify('info', '', 'There are unsaved procedures. Either delete them or save them.')\r\n                return;\r\n            }\r\n        }\r\n        this.setState({\r\n            procedures_list: [],\r\n            consultancy_fee_text_input: { value: \"\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n            total: 0,\r\n            discount: 0\r\n        })\r\n        this.props.cancelProcedureModal()\r\n    }\r\n\r\n\r\n    handle_checkout_button_click = () => {\r\n        const paid = parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value)\r\n        if (paid < this.state.minimum_payable) {\r\n            notify('error', '', 'Payment is less that minimum payable amount.')\r\n            return;\r\n        }\r\n        else {\r\n            const that = this;\r\n            AppointmentCheckout(this.props.appointment_id).then(res => {\r\n                notify('info', '', res.data.message)\r\n                this.props.clear_todays_appointments();\r\n                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                setTimeout(() => {\r\n                    this.handle_close_modal();\r\n                }, 1000)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    that.props.notify('error', '', err.toString());\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.last_element.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    calculate_balance = () => {\r\n        if (this.state.paid_text_input.value.length > 0) {\r\n            return -1 * (this.state.total - parseInt(this.state.paid_text_input.value))\r\n        }\r\n        else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ***********************************************************************************************************\r\n     * \r\n     * ***********************************************************************************************************\r\n     * \r\n     * ***********************************************************************************************************\r\n     */\r\n\r\n    on_text_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } })\r\n    }\r\n\r\n    on_item_text_change = (e, index) => {\r\n        console.log('e', e.target.type, e.target.value)\r\n        const prev_procedure_list = this.state.procedures_list;\r\n        prev_procedure_list[index][e.target.id] = (e.target.type === 'number' ? \r\n                                                    (e.target.value === \"\" ? 0 : parseInt(e.target.value)) : \r\n                                                    e.target.value);\r\n        this.setState({ procedures_list: prev_procedure_list }, () => {\r\n            this.handle_total_values();\r\n            this.compare_changes(index);\r\n        });\r\n    }\r\n\r\n    on_item_delete_click = (e, index) => {\r\n        if (this.state.procedures_list[index]._id && this.state.procedures_list[index]._id !== \"\") {\r\n            // previous procedure delete\r\n            const prev_procedure_list = this.state.procedures_list;\r\n            prev_procedure_list[index]['is_deleted'] = !prev_procedure_list[index]['is_deleted'];\r\n            \r\n            this.setState({ \r\n                procedures_list: prev_procedure_list, \r\n                edited_items: prev_procedure_list[index]['is_deleted'] ? \r\n                    [...this.state.edited_items, index] : \r\n                    this.state.edited_items.filter(x => x !== index) \r\n                }, () => this.handle_total_values());\r\n\r\n        }\r\n        else {\r\n            // new procedure delete\r\n            const prev_procedure_list = this.state.procedures_list;\r\n            prev_procedure_list.splice(index, 1);\r\n            this.setState({ procedures_list: prev_procedure_list }, () => this.handle_total_values());\r\n        }\r\n\r\n    }\r\n\r\n    handle_total_values = () => {\r\n        let procedure_total = 0;\r\n        let procedure_discount = 0;\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if (!this.state.procedures_list[i].is_deleted && this.state.procedures_list[i].is_active) {\r\n                procedure_total += this.state.procedures_list[i].fee;\r\n                procedure_discount += this.state.procedures_list[i].discount;\r\n            }\r\n        }\r\n        this.setState({\r\n            total: procedure_total - procedure_discount,\r\n            minimum_payable: procedure_total - procedure_discount,\r\n            discount: procedure_discount\r\n        })\r\n    }\r\n\r\n    compare_changes = (index) => {\r\n        // check only the old ones\r\n        if (index < this.state.procedures_list_copy.length) {\r\n            let changes = false;\r\n            if (this.state.procedures_list_copy[index].description !== this.state.procedures_list[index].description) changes = true;\r\n            if (this.state.procedures_list_copy[index].fee !== this.state.procedures_list[index].fee) changes = true;\r\n            if (this.state.procedures_list_copy[index].discount !== this.state.procedures_list[index].discount) changes = true;\r\n            if (this.state.procedures_list_copy[index].dr_share !== this.state.procedures_list[index].dr_share) changes = true;\r\n            if (this.state.procedures_list_copy[index].is_deleted !== this.state.procedures_list[index].is_deleted) changes = true;\r\n\r\n            this.setState({\r\n                edited_items: changes ?\r\n                    (this.state.edited_items.indexOf(index) === -1 ?\r\n                        [...this.state.edited_items, index] :\r\n                        this.state.edited_items) :\r\n                    (this.state.edited_items.length === 0 ? [] :\r\n                        this.state.edited_items.filter(x => x !== index))\r\n            });\r\n        }\r\n    }\r\n\r\n    add_procedure(item) {\r\n        this.setState({ procedures_list: [...this.state.procedures_list, item] }, () => {\r\n            this.scrollToBottom()\r\n        });\r\n    };\r\n\r\n    add_procedure_click = () => {\r\n        const obj = {\r\n            _id: null,\r\n            description: \"\",\r\n            fee: 0,\r\n            discount: 0,\r\n            dr_share: 0,\r\n            is_deleted: false,\r\n            is_active: true,\r\n            doctor_id: \"\",\r\n            appointment_id: this.props.appointment_id,\r\n            time_stamp: {\r\n                created: new Date(),\r\n                operate: new Date(),\r\n                report: new Date(),\r\n                last_updated: new Date(),\r\n            }\r\n        }\r\n        this.add_procedure(obj);\r\n    }\r\n\r\n    on_save_changes_click = async () => {\r\n\r\n        let error = false;\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if ((this.state.procedures_list[i].discount) > this.state.procedures_list[i].fee) {\r\n                notify('error', '', `Discount cannot be more than the charges in procedure number ${i + 1}`);\r\n                error = true;\r\n            }\r\n            else if (this.state.procedures_list[i].dr_share > 100) {\r\n                notify('error', '', 'Doctor share cannot be more than 100%');\r\n                error = true;\r\n            }\r\n        }\r\n        if (error) {\r\n            return;\r\n        }\r\n        this.setState({ loading_status: true });\r\n\r\n        let procedures_to_create = this.state.procedures_list.filter(procedure => { return procedure._id === null });\r\n        let procedures_to_update = this.state.procedures_list.filter(procedure => { return procedure._id !== null });\r\n\r\n        procedures_to_update = procedures_to_update.filter((o, i) => this.state.edited_items.indexOf(i) > -1);\r\n\r\n        if (procedures_to_create.length > 0) {\r\n            await ProcedureCreate(procedures_to_create).then(res => {\r\n                notify('success', '', res.data.message)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    notify('error', '', err.toString());\r\n                }\r\n            });\r\n        }\r\n        if (procedures_to_update.length > 0) {\r\n            await ProcedureUpdate(procedures_to_update).then(res => {\r\n                notify('success', '', res.data.message)\r\n                this.setState({ edited_items: [] });\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    notify('error', '', err.toString());\r\n                }\r\n            });\r\n        }\r\n        // this.setState({ loading_status: false });\r\n        this.mount(this.props.appointment_id);\r\n    }\r\n\r\n    on_save_payment_click = () => {\r\n\r\n        if (parseInt(this.state.paid_text_input.value) < this.state.total) {\r\n            notify('info', '', 'Paid amount is insufficient');\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            appointment_id: this.props.appointment_id,\r\n            procedures: this.state.total,\r\n            paid_for_procedures: parseInt(this.state.paid_text_input.value),\r\n        }\r\n        AppointmentUpdateCharges(payload).then(res => {\r\n            notify('success', '', res.data.message);\r\n        }).catch(err => {\r\n            notify('error', '', 'Changes could not be saved! ' + err.toString());\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log('edited items', this.state.edited_items)\r\n        // this.handle_total_values();\r\n        console.log('procedure modal', this.state.paid_amount_copy, parseInt(this.state.paid_text_input.value));\r\n\r\n        const undo_button_classes = `btn btn-outline btn-sm bg-teal-400 btn-block text-teal-400`;\r\n        // const update_button_classes = `btn btn-outline-dark btn-sm secondary btn-icon mx-1 ${this.state.save_click_loading ? 'p-0' : ''}`;\r\n        const delete_button_classes = `btn btn-outline btn-sm bg-danger btn-block text-danger`;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal\r\n                    visible={this.props.visibility}\r\n                    onClickBackdrop={this.props.procedure_backDrop}\r\n                    fade={true}\r\n                    dialogClassName={`modal-dialog modal-lg `}\r\n                >\r\n                    <div className=\"modal-header d-flex flex-lg-row flex-column bg-teal-400\">\r\n                        <h5 className=\"modal-title\">Procedures</h5>\r\n                        <div className=\"\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn bg-dark btn-sm btn-labeled btn-labeled-right pr-5 mr-1\"\r\n                                style={{ textTransform: \"inherit\" }}\r\n                                disabled={this.state.loading_status}\r\n                                onClick={this.add_procedure_click}>\r\n                                <b><i className=\"icon-plus3\" /></b>\r\n                                New Procedure\r\n                            </button>\r\n                            <ReactToPrint\r\n                                trigger={() => <button\r\n                                    type=\"button\"\r\n                                    className=\"btn bg-secondary btn-labeled btn-labeled-right btn-sm pr-5\"\r\n                                    style={{ textTransform: \"inherit\" }}\r\n                                    disabled={this.state.loading_status}\r\n                                >\r\n                                    <b><i className=\"icon-printer2\" /></b>Print</button>}\r\n                                content={() => this.componentRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body pt-1 bg-light\" style={{ height: '60vh', overflowY: 'auto', overflowX: 'hidden' }}>\r\n                        {\r\n                            this.state.loading_status ?\r\n                                <ProcedureLoading /> :\r\n                                (\r\n                                    this.state.procedures_list.length === 0 ?\r\n                                        <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\r\n                                            <strong>Info!</strong> No Procedures found.\r\n                                        </div> :\r\n                                        <div className=\"table-responsive px-1\">\r\n                                            <table className=\"table table-bordered w-100\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className={`border-0`} style={{ width: '50%' }}>Procedure reason</th>\r\n                                                        <th className={`border-0`} style={{ width: '12%' }}>Charges</th>\r\n                                                        <th className={`border-0`} style={{ width: '12%' }}>Discount</th>\r\n                                                        <th className={`border-0`} style={{ width: '12%' }}>Dr. Share</th>\r\n                                                        <th className={`border-0 text-center`} >Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        this.state.procedures_list.map((item, i) => {\r\n                                                            return (\r\n                                                                <Fragment >\r\n                                                                    <tr>\r\n                                                                        <td className={'p-0'} style={{ borderLeft: item._id? \"\":\"2px solid #26a69a\" }} colSpan=\"5\">\r\n                                                                            <div className={`d-flex flex-lg-row flex-md-column flex-column justify-content-lg-between`}>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Created: {moment(item.time_stamp.created).format(\"LLL\")}</label>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Operate: {moment(item.time_stamp.operate).format(\"LLL\")}</label>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Report: {moment(item.time_stamp.report).format(\"LLL\")}</label>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Last updated: {moment(item.time_stamp.last_updated).format(\"LLL\")}</label>\r\n                                                                            </div>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr >\r\n                                                                        <td className={'p-0'} style={{ width: '50%', borderLeft: item._id? \"\":\"2px solid #26a69a\" }}>\r\n                                                                            <input\r\n                                                                                id=\"description\"\r\n                                                                                placeholder=\"Enter Reason\"\r\n                                                                                type={'text'}\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.description}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" style={{ width: '12%' }}>\r\n                                                                            <input\r\n                                                                                id=\"fee\"\r\n                                                                                placeholder=\"Charges\"\r\n                                                                                type={'number'}\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.fee === 0 ? \"\" : item.fee}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" style={{ width: '12%' }}>\r\n                                                                            <input\r\n                                                                                id=\"discount\"\r\n                                                                                placeholder=\"Discount\"\r\n                                                                                type=\"number\"\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.discount === 0 ? \"\" : item.discount}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" style={{ width: '12%' }}>\r\n                                                                            <input\r\n                                                                                id=\"dr_share\"\r\n                                                                                placeholder=\"Dr Share %\"\r\n                                                                                type=\"number\"\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.dr_share === 0 ? \"\" : item.dr_share}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" >\r\n                                                                            {\r\n                                                                                item.is_deleted ?\r\n                                                                                    <button\r\n                                                                                        disabled={this.state.loading_status}\r\n                                                                                        className={undo_button_classes}\r\n                                                                                        onClick={e => this.on_item_delete_click(e, i)}>\r\n                                                                                        Undo\r\n                                                                                </button> :\r\n                                                                                    <button\r\n                                                                                        disabled={this.state.loading_status}\r\n                                                                                        className={delete_button_classes}\r\n                                                                                        onClick={e => this.on_item_delete_click(e, i)}>\r\n                                                                                        Delete\r\n                                                                                </button>\r\n                                                                            }\r\n                                                                            {/* disabled={item.is_deleted || this.state.loading_status} */}\r\n\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </Fragment>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                )\r\n                        }\r\n\r\n\r\n                        <div style={{ float: \"left\", clear: \"both\" }}\r\n                            ref={(el) => { this.last_element = el; }}>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer d-flex flex-lg-row flex-column border border-top pt-3\">\r\n                        <div className=\"mr-auto d-flex\">\r\n                            <span className=\"badge badge-light badge-striped badge-striped-left border-left-teal-400\" >\r\n                                <span className=\"h6 font-weight-bold mr-1\">Total: {this.state.total}</span>\r\n                            </span>\r\n                            <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                                <span className=\"h6 font-weight-bold mr-1\">Discount: {this.state.discount}</span>\r\n                            </span>\r\n                            <Inputfield\r\n                                id=\"paid_text_input\"\r\n                                // heading=\"Amount Paid\"\r\n                                icon_class=\"icon-cash3\"\r\n                                placeholder=\"Amount paid\"\r\n                                disabled={this.state.loading_status}\r\n                                value={this.state.paid_text_input.value}\r\n                                error={this.state.paid_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-dark btn-labeled btn-sm btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={\r\n                                this.state.paid_text_input.value === \"\" ||\r\n                                ((this.state.total > parseInt(this.state.paid_text_input.value)) ||\r\n                                parseInt(this.state.paid_amount_copy) === parseInt(this.state.paid_text_input.value))\r\n                            }\r\n                            onClick={this.on_save_payment_click}>\r\n                            <b><i className=\"icon-floppy-disk\" /></b>\r\n                            Save Payment\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-dark btn-labeled btn-sm btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={\r\n                                this.state.procedures_list.length === 0 ||\r\n                                (this.state.procedures_list_copy.length === this.state.procedures_list.length &&\r\n                                    this.state.edited_items.length === 0)\r\n                            }\r\n                            onClick={this.on_save_changes_click}>\r\n                            <b><i className=\"icon-floppy-disk\" /></b>\r\n                            Save Changes\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-sm btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.handle_close_modal}>\r\n                            <b><i className=\"icon-cross\" /></b>\r\n                            Cancel\r\n                        </button>\r\n                        {/* <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 mt-1\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_checkout_button_click}\r\n                    >\r\n                        <b><i className=\"icon-checkmark2\" /></b>\r\n                        Checkout\r\n                    </button> */}\r\n                    </div>\r\n\r\n                </Modal>\r\n                <div className={`d-none`}>\r\n                    <div className={`row px-3 py-5`} ref={el => (this.componentRef = el)}>\r\n\r\n                        <div className={`col-12 row`}>\r\n\r\n                            <div className={`col-6`}>\r\n                                <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\r\n                            </div>\r\n                            <div className={`col-6`}>\r\n                                {this.state.user_data ? <div className=\"table-responsive card\">\r\n                                    <table className=\"table table-hover mb-0\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">MRN#</td>\r\n                                                <td className=\"py-1\">{this.state.user_data.patient.mrn}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Patient</td>\r\n                                                <td className=\"py-1\">{`${Ucfirst(this.state.user_data.patient.first_name)} ${Ucfirst(this.state.user_data.patient.last_name)}`}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Contact</td>\r\n                                                <td className=\"py-1\">{`${this.state.user_data.patient.phone_number}`}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Doctor</td>\r\n                                                <td className=\"py-1\">{`${Ucfirst(this.state.user_data.doctor.first_name)} ${Ucfirst(this.state.user_data.doctor.last_name)}`}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Date</td>\r\n                                                <td className=\"py-1\">{`${moment(get_utc_date(this.state.user_data.appointment_date), \"YYYY-MM-DDThh:mm:ss\").format('LLLL')}`}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div> : <span>Cannot fetch user data</span>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={`table-responsive px-1 row col-12 mt-2`}>\r\n                            <h2 className={`font-weight-bold`}>Procedures</h2>\r\n                            <table className=\"table table-sm table-bordered table-hover mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"py-1\">\r\n                                            <b>Description</b>\r\n                                        </th>\r\n                                        <th className=\"py-1\">\r\n                                            <b>Discount</b>\r\n                                        </th>\r\n                                        <th className=\"py-1\">\r\n                                            <b>Charges</b>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.procedures_list ?\r\n                                            this.state.procedures_list.map((item, i) => {\r\n                                                return (<tr key={i} >\r\n                                                    <td className=\"py-1\">\r\n                                                        {item.description}\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">\r\n                                                        {item.discount}\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">\r\n                                                        {item.fee}\r\n                                                    </td>\r\n                                                </tr>)\r\n\r\n                                            }) : 'No procedure found'\r\n                                    }\r\n                                    <tr>\r\n                                        <td className={`font-weight-bold`} colSpan=\"2\">Total</td>\r\n                                        <td className={`font-weight-bold`}>{this.state.total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className={`d-flex justify-content-between mt-2`}>\r\n                                <h2 className={`font-weight-bold`}>Payment</h2>\r\n                                {/* <h2 className={`font-weight-bold`}>{this.state.total}</h2>                             */}\r\n                            </div>\r\n                            <table className={`table table-sm table-bordered table-hover mb-0 mt-2`}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Paid</td>\r\n                                        <td>{this.state.paid_text_input.value}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Balance</td>\r\n                                        <td>{parseInt(this.state.paid_text_input.value) - this.state.total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className={`d-flex justify-content-between`}>\r\n                                <span className={`text-muted`}>- Invoice date-time {moment(new Date()).format('LLL')}</span>\r\n                                {/* <span className={`text-muted`}>{this.state.user_data.appointment_id}</span> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { update_appointment, load_todays_appointments, clear_todays_appointments })(ProcedureModal);","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap4-modal\";\nimport LOGO from '../../../../resources/images/LOGO.png';\nimport Loading from '../../../../components/loading';\nimport ReactToPrint from 'react-to-print';\nimport { get_utc_date, Ucfirst } from '../../../../utils/functions';\nimport moment from 'moment'\nimport { AppointmentInvoice } from '../../../../services/queries';\n\n\nclass Invoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            loading: true,\n        }\n    }\n\n    componentWillReceiveProps(new_props, new_state) {\n        if (new_props.visibility === true) {\n            console.log('fetching data')\n            AppointmentInvoice(new_props.appointment_id)\n                .then(res => {\n                    console.log('fetched', res.data)\n                    this.setState({ data: res.data.payload, loading: false })\n                })\n        }\n        else {\n            this.setState({ data: null })\n        }\n    }\n\n    get_total = () => {\n        if (this.state.data !== null) {\n            const procedures = parseInt(this.state.data.appointment_charges.procedures);\n            const consultancy = parseInt(this.state.data.appointment_charges.consultancy);\n            const follow_up = parseInt(this.state.data.appointment_charges.follow_up);\n            const discount = parseInt(this.state.data.appointment_charges.discount);\n\n            return procedures + consultancy + follow_up - discount;\n        }\n        return 0;\n    }\n\n    get_balance = () => {\n        if (this.state.data !== null) {\n            const total = this.get_total();\n            const paid = parseInt(this.state.data.appointment_charges.paid);\n            const paid_for_procedures = parseInt(this.state.data.appointment_charges.paid_for_procedures);\n\n            return total - paid - paid_for_procedures;\n        }\n        return 0;\n    }\n\n    get_total_paid = () => {\n        if (this.state.data !== null) {\n            const paid = parseInt(this.state.data.appointment_charges.paid);\n            const paid_for_procedures = parseInt(this.state.data.appointment_charges.paid_for_procedures);\n            console.log('charges', this.state.data.appointment_charges)\n            return paid + paid_for_procedures;\n        }\n        return 0;\n    }\n\n    componentWillUnmount() {\n        this.setState({ data: null })\n    }\n\n    render() {\n        const table_header = <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\n            </div>\n            {this.state.data ?\n                <div className=\"col-lg-6\">\n\n                    <div className=\"table-responsive card\">\n                        <table className=\"table table-hover mb-0\">\n                            <tbody>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">MRN# </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{this.state.data.patient.mrn}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Patient </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${Ucfirst(this.state.data.patient.first_name)} ${Ucfirst(this.state.data.patient.last_name)}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Contact</span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${this.state.data.patient.phone_number}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Doctor </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${Ucfirst(this.state.data.doctor.first_name)} ${Ucfirst(this.state.data.doctor.last_name)}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Date </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${moment(get_utc_date(this.state.data.appointment_date), \"YYYY-MM-DDThh:mm:ss\").format('LLLL')}`}</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div> : <Loading size={150} />\n            }\n        </div>\n        const procedures_table = this.state.data !== null && this.state.data.appointment_procedures.length > 0 ? <div className=\"table-responsive card\">\n            <table className=\"table table-hover mb-0\">\n                <thead>\n                    <tr>\n                        <th className=\"py-1\">\n                            <b>Description</b>\n                        </th>\n                        <th className=\"py-1\">\n                            <b>Charges</b>\n                        </th>\n                        <th className=\"py-1\">\n                            <b>Discount</b>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.data ?\n                            this.state.data.appointment_procedures.map((item, i) => {\n                                return (<tr key={i} >\n                                    <td className=\"py-1\">\n                                        {item.description}\n                                    </td>\n                                    <td className=\"py-1\">\n                                        {item.fee}\n                                    </td>\n                                    <td className=\"py-1\">\n                                        {item.discount}\n                                    </td>\n                                </tr>)\n\n                            }) : 'No procedure found'\n                    }\n                </tbody>\n            </table>\n        </div> : ''\n        const appointment_charges_table = <div className=\"table-responsive card\">\n            <table className=\"table table-hover mb-0\">\n                <tbody>\n                    <tr>\n                        <td className=\"py-1\">Procedures total fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.procedures : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Consultancy fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.consultancy : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Follow up fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.follow_up : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Discount on Appointment charges</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.discount : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1 h4\">Total</td>\n                        <td className=\"py-1 h4\">\n                            {this.get_total()}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        const appointment_paid_balance = <div className={`table-responsive card`}>\n            <table className={\"table table-hover mb-0\"}>\n                <tbody>\n                    <tr>\n                        <td className=\"py-1\">Paid Amount</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.paid : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Paid Amount for procedures</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.paid_for_procedures : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Total paid Amount</td>\n                        <td className=\"py-1\">\n                            {this.get_total_paid()}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Due Amount</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.get_balance() : ''}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        return (\n            <Modal visible={this.props.visibility}\n                onClickBackdrop={this.props.close_modal}\n                fade={true}\n                dialogClassName={`modal-dialog modal-lg `}>\n                <div className=\"modal-body pb-0\" ref={el => (this.componentRef = el)}>\n                    <div className=\"container-fluid\" >\n                        {table_header}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                {this.state.data !== null && this.state.data.appointment_procedures.length > 0 ? <h4 className=\"font-weight-bold\">Procedures</h4> : ''}\n                                {procedures_table}\n                                <h4 className=\"font-weight-bold\">Appointment Charges</h4>\n                                {appointment_charges_table}\n                                <div className={`row`}>\n                                    <div className={`col-lg-6`}>\n\n                                    </div>\n                                    <div className={`col-lg-6`}>\n                                        {appointment_paid_balance}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <ReactToPrint\n                        trigger={() => <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5\"\n                            style={{ textTransform: \"inherit\" }}\n                        >\n                            <b><i className=\"icon-printer2\" /></b>Print</button>}\n                        content={() => this.componentRef}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-danger btn-labeled btn-labeled-right btn-sm pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={this.props.close_modal}\n                    >\n                        <b><i className=\"icon-cross\" /></b>\n                        Close\n                    </button>\n\n\n                </div>\n            </Modal>\n        )\n    }\n}\nexport default Invoice","import React, { Component } from 'react';\nimport moment from 'moment'\nimport { USERS_SEARCH_BY_CREDENTIALS } from 'services/rest_end_points';\nimport Loading from 'components/loading';\nimport Select from 'react-select'\nimport Modal from 'react-bootstrap4-modal';\nimport DateTimePicker from 'react-datetime';\nimport { load_todays_appointments, clear_todays_appointments } from 'redux/actions';\nimport { connect } from \"react-redux\";\n// import Inputfield from '../../../../shared/customs/inputfield/inputfield';\nimport './styles.css'\nimport { Ucfirst } from 'utils/functions';\nimport { AppointmentUpdate, GetRequest, PostRequest } from 'services/queries';\nimport notify from 'notify'\n\nclass UpdateAppointmentModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patients: [{\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${Ucfirst(this.props.payload.patient_ref.first_name)} ${Ucfirst(this.props.payload.patient_ref.last_name)} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            }],\n            doctors: [{\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `Dr. ${Ucfirst(this.props.payload.doctor_ref.first_name)} ${Ucfirst(this.props.payload.doctor_ref.last_name)} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            }],\n            appointment_patient: { value: this.props.payload.patient_ref.id, error: false },\n            appointment_doctor: { value: this.props.payload.doctor_ref.id, error: false },\n            // appointment_reason: { value: this.props.payload.reason, error: false },\n            appointment_comments: { value: this.props.payload.comments, error: false },\n            appointment_referee: { value: this.props.payload.referee, error: false },\n            appointment_date: { value: moment.utc(this.props.payload.date).format('ll'), error: false },\n            appointment_time: { value: this.props.payload.time, error: false },\n\n            patient_select_value: {\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${Ucfirst(this.props.payload.patient_ref.first_name)} ${Ucfirst(this.props.payload.patient_ref.last_name)} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            },\n            doctor_select_value: {\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `Dr. ${Ucfirst(this.props.payload.doctor_ref.first_name)} ${Ucfirst(this.props.payload.doctor_ref.last_name)} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            },\n        };\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                return await PostRequest(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await GetRequest(_url)\n            }\n        }\n        catch (err) {\n            notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    async render_users(string, role) {\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        const res_users = await this.request({}, query, 'get')\n        let temp_users = []\n        if (role === 'patient') {\n            temp_users.push({\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            })\n        }\n        else {\n            temp_users.push({\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `${this.props.payload.doctor_ref.first_name} ${this.props.payload.doctor_ref.last_name} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            })\n        }\n        if (res_users.status === 200) {\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `appointment_${role.toLowerCase()}_selection`,\n                    reference: t_user._id,\n                    label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient') {\n                this.setState({ patients: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctors: temp_users })\n            }\n        }\n    }\n\n    populate_patients = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({\n                patients: [{\n                    id: 'appointment_patient_selection',\n                    reference: this.props.payload.patient_ref.id,\n                    label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number}`\n                }]\n            })\n\n        }\n    }\n\n    populate_doctors = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({\n                doctors: [{\n                    id: 'appointment_doctor_selection',\n                    reference: this.props.payload.doctor_ref.id,\n                    label: `Dr. ${Ucfirst(this.props.payload.doctor_ref.first_name)} ${Ucfirst(this.props.payload.doctor_ref.last_name)} | ${this.props.payload.doctor_ref.phone_number}`\n                }]\n            })\n\n        }\n    }\n\n\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n\n            switch (e.id) {\n                case 'appointment_patient_selection':\n                    const val_patient = {\n                        id: 'appointment_patient_selection',\n                        reference: e.reference,\n                        label: e.label\n                    }\n                    this.setState({ appointment_patient: { value: e.reference, error: false }, patient_select_value: val_patient })\n                    break;\n                case 'appointment_doctor_selection':\n                    const val_doctor = {\n                        id: 'appointment_doctor_selection',\n                        reference: e.reference,\n                        label: e.label\n                    }\n                    this.setState({ appointment_doctor: { value: e.reference, error: false }, doctor_select_value: val_doctor })\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'appointment_patient_selection':\n                    this.setState({ appointment_patient: { value: '', error: false }, patient_select_value: '' })\n                    break;\n                case 'appointment_doctor_selection':\n                    this.setState({ appointment_doctor: { value: '', error: false }, doctor_select_value: '' })\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'appointment_reason_text_input':\n                this.setState({ appointment_reason: { value: e.target.value, error: false } })\n                break;\n            case 'appointment_comments_text_input':\n                this.setState({ appointment_comments: { value: e.target.value, error: false }});\n                break;\n            case 'appointment_referee_text_input':\n                this.setState({ appointment_referee: { value: e.target.value, error: false }});\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_apointment_date_change = (e) => {\n        if (e === '')\n            this.setState({ appointment_date: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ appointment_date: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    on_apointment_time_change = (e) => {\n\n        if (e === '')\n            this.setState({ appointment_time: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('LT');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ appointment_time: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required && input === '') {\n            return true;\n        }\n        if (only_alpha && input !== '' && !input.match(alphabets)) {\n            return true;\n        }\n        if (only_numbers && input !== '' && !input.match(numbers)) {\n            return true;\n        }\n        return false;\n    }\n\n    on_submit = () => {\n        this.setState({ loading_status: true })\n        let error = false\n        if (this.check_input(this.state.appointment_patient.value, true)) {\n            this.setState({ appointment_patient: { value: this.state.appointment_patient.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_doctor.value, true)) {\n            this.setState({ appointment_doctor: { value: this.state.appointment_doctor.value, error: true } })\n            error = true\n        }\n        // if (this.check_input(this.state.appointment_reason.value)) {\n        //     this.setState({ appointment_reason: { value: this.state.appointment_reason.value, error: true } })\n        //     error = true\n        // }\n        if (this.check_input(this.state.appointment_comments.value, false, false, false)) {\n            this.setState({ appointment_reason: { value: this.state.appointment_comments.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_referee.value, false, false, false)) {\n            this.setState({ appointment_reason: { value: this.state.appointment_referee.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_date.value, true)) {\n            this.setState({ appointment_date: { value: this.state.appointment_date.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_time.value, true)) {\n            this.setState({ appointment_time: { value: this.state.appointment_time.value, error: true } })\n            error = true\n        }\n\n        if (error === true) {\n            notify('error', '', 'Invalid inputs')\n            this.setState({ loading_status: false })\n            return\n        }\n        localStorage.setItem('h7vjys8yyd12', this.props.id)\n        const data = {\n            appointment_id: this.props.payload.visit_id,\n            doctor_id: this.state.appointment_doctor.value,\n            appointment_date: `${moment(this.state.appointment_date.value).format('YYYY-MM-DD')}T${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\n            appointment_time: this.state.appointment_time.value,\n            // appointment_description: this.state.appointment_reason.value,\n            appointment_comments: this.state.appointment_comments.value,\n            appointment_referee: this.state.appointment_referee.value\n        }\n        AppointmentUpdate(data).then(res => {\n            // console.log('res', res)\n            notify('success', '', res.data.message)\n            this.setState({ \n                loading_status: false \n                \n            })\n            this.props.clear_todays_appointments()\n            this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\n            setTimeout(() => this.props.close(), 2000);\n        }).catch(err => {\n            console.log('res err', err)\n            notify('error', '', `Network error ${err.toString()}`)\n            this.setState({ loading_status: false })\n        })\n    }\n\n    render() {\n        const add_appointment_modal_body =\n            <div className=\"modal-body\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <pre>\n                            Patient: <span className=\"h3\">{Ucfirst(this.props.payload.patient_ref.first_name)} {Ucfirst(this.props.payload.patient_ref.last_name)}</span>\n                        </pre>\n                        <div className=\"form-group d-none\">\n                            <label>Patient <span className=\"text-danger\">*</span></label>\n                            <Select\n                                id=\"appointment_patient_selection\"\n                                isClearable\n                                menuPlacement=\"auto\"\n                                isDisabled\n                                options={this.state.patients}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Select Patient\"\n                                onInputChange={e => this.populate_patients(e)}\n                                onChange={e => this.on_selected_changed(e, \"appointment_patient_selection\")}\n                                value={this.state.patient_select_value}\n                                styles={{\n                                    container: base => ({\n                                        ...base,\n                                        backgroundColor: this.state.appointment_patient.error ? '#FF0000' : '',\n                                        padding: 1,\n                                        borderRadius: 5\n                                    }),\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Doctor <span className=\"text-danger\">*</span></label>\n                            <Select\n                                id=\"appointment_doctor_selection\"\n                                isClearable\n                                options={this.state.doctors}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Select a Doctor\"\n                                menuPlacement=\"auto\"\n                                onInputChange={e => this.populate_doctors(e)}\n                                onChange={e => this.on_selected_changed(e, 'appointment_doctor_selection')}\n                                value={this.state.doctor_select_value}\n                                styles={{\n                                    container: base => ({\n                                        ...base,\n                                        backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\n                                        padding: 1,\n                                        borderRadius: 5\n                                    }),\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Reffered by</label>\n                            <input\n                                id=\"appointment_referee_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Doctor name for reference\"\n                                value={this.state.appointment_referee.value}\n                                onChange={e => this.on_text_field_change(e)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Comments (if any)</label>\n                            <textarea\n                                id=\"appointment_comments_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Any special comments about the patient\"\n                                rows=\"4\"\n                                value={this.state.appointment_comments.value}\n                                onChange={e => this.on_text_field_change(e)}\n                            />\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Date <span className=\"text-danger\">*</span></label>\n                                    <DateTimePicker id=\"dob_text_input\"\n                                        onChange={this.on_apointment_date_change}\n                                        className=\"clock_datatime_picker\"\n                                        inputProps={{ placeholder: 'Select Date', width: '100%', className: 'form-control' }}\n                                        input={true}\n                                        dateFormat={'ll'}\n                                        timeFormat={false}\n                                        closeOnSelect={true}\n                                        value={this.state.appointment_date.value}\n                                    />\n                                </div>\n\n\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Time <span className=\"text-danger\">*</span></label>\n                                    <DateTimePicker id=\"dob_text_input\"\n                                        onChange={this.on_apointment_time_change}\n                                        className=\"clock_datatime_picker\"\n                                        inputProps={{ placeholder: 'Select Time', width: '100%', className: 'form-control' }}\n                                        input={true}\n                                        dateFormat={false}\n                                        timeFormat={true}\n                                        closeOnSelect={true}\n                                        strictParsing={true}\n                                        value={this.state.appointment_time.value}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        {/* <Inputfield\n                            id=\"appointment_reason_text_input\"\n                            label_tag={'What is the reason for the visit'}\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            placeholder=\"Enter visit reason\"\n                            field_type=\"text-area\"\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.appointment_reason.value}\n                            error={this.state.appointment_reason.error}\n                        /> */}\n                        {/* <div className=\"form-group form-group-float\">\n                            <div className=\"form-group-float-label is-visible mb-1\">\n                                What is the reason for the visit\n                            </div>\n                            <textarea rows={5} cols={5}\n                                id=\"appointment_reason_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Reason for visit\"\n                                onChange={this.on_text_field_change}\n                                value={this.state.appointment_reason.value} />\n                        </div> */}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n\n                    </div>\n\n                </div>\n            </div>\n        return (\n            <Modal\n                visible={this.props.visibility}\n                onClickBackdrop={() => this.props.close()}\n                fade={true}\n                dialogClassName={`modal-dialog-centered modal-lg`}>\n\n                <div className=\"modal-header bg-teal-400\">\n                    <h5 className=\"modal-title\">Update Appointment</h5>\n                </div>\n                {this.state.loading_status ? <Loading size={150} /> : add_appointment_modal_body}\n                <div className=\"modal-footer\">\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={this.on_submit}>\n                        <b><i className=\"icon-plus3\"></i></b>\n                        Update\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={() => this.props.close()}>\n                        <b><i className=\"icon-cross\"></i></b>\n                        Cancel\n                    </button>\n\n                </div>\n            </Modal>\n        )\n    }\n}\nexport default connect(null, { notify, load_todays_appointments, clear_todays_appointments })(UpdateAppointmentModal);","import React, { Component, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport UpdateAppointmentModal from './appointment/update_appointment_modal';\r\nimport { Ucfirst } from 'utils/functions'\r\nimport Loading from 'components/loading';\r\nimport './todays_patient_row.css'\r\nimport { connect } from 'react-redux';\r\nimport { load_todays_appointments, clear_todays_appointments } from 'redux/actions'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { AppointmentCheckout, ProcedureSearchByAppointmentId } from 'services/queries';\r\nimport notify from 'notify'\r\nimport CreateProcedure from '../procedures/create-procedure';\r\n// import '../../../../node_modules/semantic-ui-css/semantic.min.css';\r\n\r\nclass TodaysPatientRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toggle: false,\r\n            toggle_icon: 'icon-eye-plus',\r\n            row_data: this.props.row_data,\r\n            hidden_data: this.props.hidden_data,\r\n            hidden_header_elements: this.props.hidden_header_elements,\r\n            hidden_header_color: this.props.hidden_header_color,\r\n            col_span: '',\r\n            appointment_time_difference_from_now: moment(this.props.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").fromNow(),\r\n\r\n            update_appointment_modal_visibility: false,\r\n            procedure_modal_visibility: false,\r\n\r\n            procedure_loading: false,\r\n            procedures_list: []\r\n        }\r\n    }\r\n    toggle_row = () => {\r\n        if (this.state.toggle)\r\n            this.setState({ toggle: false, procedure_loading: false, toggle_icon: 'icon-eye-plus' })\r\n        else\r\n            this.setState({ toggle: true, procedure_loading: true, toggle_icon: 'icon-eye-minus' }, () => {\r\n                ProcedureSearchByAppointmentId(this.state.row_data._id)\r\n                    .then(_procedures => {\r\n                        this.setState({ procedures_list: _procedures.data.payload, procedure_loading: false })\r\n                    })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props.row_data);\r\n        // this.setState({row_data: this.props.data})\r\n        this.setState({ col_span: this.props.columns })\r\n        setInterval(() => {\r\n            this.setState({ appointment_time_difference_from_now: moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").fromNow() })\r\n        }, 60000)\r\n    }\r\n\r\n    view_user = (id) => {\r\n        this.props.toggle_user_view_modal(id)\r\n    }\r\n\r\n    handle_checkout = () => {\r\n        confirmAlert({\r\n            title: \"Checkout confirmation\",\r\n            message: 'Are you sure you want to checkout?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n\r\n                        const that = this;\r\n                        AppointmentCheckout(this.state.row_data._id)\r\n                            .then(res => {\r\n                                notify('info', '', res.data.message)\r\n                                this.props.clear_todays_appointments();\r\n                                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                            }).catch(err => {\r\n                                if (err.response) {\r\n                                    if (err.response.status === 400) {\r\n                                        that.props.notify('error', '', err.response.data.message);\r\n                                    }\r\n                                    else {\r\n                                        that.props.notify('error', '', err.response.data.message);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    that.props.notify('error', '', err.toString());\r\n                                }\r\n                            })\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => console.log('Not checked out')\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    render_read_only_cols = () => {\r\n        const options = {\r\n            consultancy_charges: <Popup\r\n                trigger={\r\n                    <button className=\"btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon m-1\"\r\n                        onClick={() => this.props.toggle_consultancy_modal(this.props.row_data._id)}>\r\n                        <i className=\"icon-vcard\"></i>\r\n                    </button>}\r\n                content={<div className=\"card card-body bg-teal-400 text-white shadow mr-1 mt-3 py-1\">Payment</div>}\r\n                flowing\r\n                position='left center'\r\n            />,\r\n            procedures: <Popup\r\n                trigger={\r\n                    <button className=\"btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon m-1\"\r\n                        onClick={() => this.setState({ procedure_modal_visibility: true }, () => console.log('state', this.state))}>\r\n                            {/* this.props.toggle_procedure_modal(this.props.row_data._id)}> */}\r\n                        <i className=\"icon-add-to-list\"></i>\r\n                    </button>}\r\n                content={<div className=\"card card-body bg-teal-400 text-white shadow py-1\">Procedures</div>}\r\n                flowing\r\n                position='top center'\r\n            />,\r\n            invoice: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1`}\r\n                        onClick={() => this.props.toggle_invoice_modal(this.props.row_data._id)}>\r\n                        <i className={`icon-file-text2`}></i>\r\n                    </button>}\r\n                content={<div className={`card card-body bg-teal-400 text-white shadow py-1`}>Details</div>}\r\n                flowing\r\n                // hoverable\r\n                position='top center'\r\n            />,\r\n            edit: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1`}\r\n                        onClick={() => this.setState({ update_appointment_modal_visibility: true })}    >\r\n                        <i className={`icon-pencil3`}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={<div className={`card card-body bg-teal-400 text-white shadow py-1`}>Edit appointment</div>}\r\n                position='top center'\r\n            />,\r\n            follow_ups: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1`}\r\n                        onClick={() => alert('In progress')}    >\r\n                        <i className={`icon-loop`}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={<div className={`card card-body bg-teal-400 text-white shadow py-1`}>Follow ups</div>}\r\n                position='top center'\r\n            />,\r\n            details: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-dark border-dark text-dark btn-icon m-1`}\r\n                        onClick={this.toggle_row}>\r\n                        <i className={this.state.toggle_icon}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={\r\n                    <div className={`card card-body bg-dark text-white shadow ml-1 mt-3 py-1`}>\r\n                        Show more details\r\n                            </div>\r\n                }\r\n                position='right center'\r\n            />,\r\n            checkout: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1 float-right`}\r\n                        onClick={() => this.handle_checkout()}>\r\n                        <i className={'icon-exit'}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={\r\n                    <div className={`card card-body bg-teal-400 text-white shadow py-1 mt-3 mr-2`}>\r\n                        Checkout\r\n                    </div>\r\n                }\r\n                position='left center'\r\n            />\r\n        }\r\n\r\n        return (\r\n            // <div>{this.state.row_data}</div>\r\n            <div className={`container-fluid`} >\r\n                {/* {this.props.reference} */}\r\n                <div className={`row`}>\r\n                    {/* Patient name and phone number */}\r\n                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-left-teal-400 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                        <div className={`btn btn-outline bg-teal-400 text-teal-400 btn-block jackInTheBox animated`}\r\n                            style={{ verticalAlign: 'center' }}\r\n                            onClick={() => this.view_user(this.state.row_data.patient['id'])}\r\n                        >\r\n                            <span className={`img-fluid rounded-circle text-white bg-teal-400 h3 p-2`} >\r\n                                {this.state.row_data.patient['first_name'].charAt(0).toUpperCase() + this.state.row_data.patient['last_name'].charAt(0).toUpperCase()}\r\n                            </span>\r\n                            <h4 className=\"mt-2\">{Ucfirst(this.state.row_data.patient['first_name']) + ' ' + Ucfirst(this.state.row_data.patient['last_name'])}</h4>\r\n                            <span><i className=\"icon-phone-wave mr-1\"></i> {this.state.row_data.patient['phone_number']}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Appointment Time column */}\r\n                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-bottom-sm-2 border-left-teal-400 border-right-teal-400 border-right-2 btn-block d-flex align-items-center justify-content-center text-center`} >\r\n                        <div className={` jackInTheBox animated`} >\r\n                            <h1 className=\"mb-0\">{moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('hh:mm a')}</h1>\r\n                            <p>{this.state.appointment_time_difference_from_now}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* appointment details */}\r\n                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                        {/* Appointment date and time */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 font-weight-bold h6\">\r\n                                Appointment with <Link className=\"text-teal-400 font-weight-bold ml-1\" to={\"#\"}\r\n                                    onClick={() => this.view_user(this.state.row_data.doctor['id'])}>\r\n                                    {Ucfirst(this.state.row_data.doctor['first_name']) + ' ' + Ucfirst(this.state.row_data.doctor['last_name'])}\r\n                                    <i className=\"icon-user-tie ml-1\"></i>\r\n                                </Link>\r\n                                <span className=\"text-muted float-lg-right float-md-right float-left\">\r\n                                    {`${moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LL')}`}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Reason */}\r\n                        <div className={`row`}>\r\n                            <div className={`col-12 h6`}>\r\n                                <span className=\"font-weight-bold\">Comments</span>\r\n                                <span className=\" h6 text-muted\">\r\n                                    {` ${this.state.row_data.appointment_comments.length > 25 ? this.state.row_data.appointment_comments.substring(0, 25) + '...' : this.state.row_data.appointment_comments}`}\r\n                                </span>\r\n                                <span className={`badge badge-${this.state.row_data.appointment_status.info === 'checked out' ? 'primary' : 'danger'} float-right`}>\r\n                                    {this.state.row_data.appointment_status.info}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Actions */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {!this.state.row_data.appointment_status.is_paid ?\r\n                                    <Fragment>\r\n                                        {options['consultancy_charges']}\r\n                                        {options['procedures']}\r\n                                        {options['invoice']}\r\n                                        {options['edit']}\r\n                                        {options['follow_ups']}\r\n                                        {options['details']}\r\n                                        {options['checkout']}\r\n                                    </Fragment> :\r\n                                    <Fragment>\r\n                                        {options['invoice']}\r\n                                        {options['follow_ups']}\r\n                                        {options['details']}\r\n                                    </Fragment>}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render_hidden_elements = () => {\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <h5>Comments</h5>\r\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\r\n                    <p className=\"mb-1\">\r\n                        {this.state.hidden_data.appointment_comments}\r\n                    </p>\r\n                </blockquote>\r\n                <h5 className=\"font-weight-semibold\">Procedures</h5>\r\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\r\n\r\n                    {\r\n                        this.state.procedure_loading ? <Loading size={100} /> : (\r\n                            this.state.procedures_list.length > 0 ?\r\n                                this.state.procedures_list.map((item, i) => {\r\n                                    return (\r\n                                        <div className=\"\">\r\n                                            <footer className=\"blockquote-footer text-dark\">\r\n                                                {item.description.toUpperCase()}\r\n                                            </footer>\r\n                                            {/* <span className=\"text-secondary procedureslist-secondary-text\">{'item'}</span> */}\r\n                                        </div>\r\n                                    )\r\n                                }) : <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\r\n                                    <strong>Info!</strong> No Procedures found.\r\n                                    </div>\r\n                        )\r\n                    }\r\n                </blockquote>\r\n            </div>\r\n        )\r\n    }\r\n    render_hidden_header_elements = () => {\r\n        return this.state.hidden_header_elements.map((str, i) => {\r\n            return <Fragment key={i}>{str}</Fragment>\r\n        })\r\n    }\r\n\r\n    close_update_appointment_modal = () => {\r\n        this.setState({ update_appointment_modal_visibility: false })\r\n    }\r\n\r\n    open_update_appointment_modal = () => {\r\n        this.setState({ update_appointment_modal_visibility: true })\r\n    }\r\n\r\n    call_back_update_appointment_modal = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <tr >\r\n                    <td colSpan={this.state.col_span}>\r\n                        {\r\n                            this.render_read_only_cols()\r\n                        }\r\n                    </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                    <td colSpan={`${this.state.col_span + 1}`} className={`${this.state.toggle ? '' : 'py-0'}`}>\r\n                        <Collapse isOpen={this.state.toggle} >\r\n                            <div className=\"float-right\">\r\n                                <Link onClick={this.toggle_row} to=\"#\" className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                                    <i className=\"icon-cross3 icon-2x\"></i>\r\n                                </Link>\r\n                            </div>\r\n                            {\r\n                                this.render_hidden_elements()\r\n                            }\r\n                        </Collapse>\r\n                        <UpdateAppointmentModal\r\n                            id={this.state.row_data._id}\r\n                            visibility={this.state.update_appointment_modal_visibility}\r\n                            close={this.close_update_appointment_modal}\r\n                            call_back={this.call_back_update_appointment_modal}\r\n                            state={'update'}\r\n                            payload={{\r\n                                visit_id: this.state.row_data._id,\r\n                                patient_ref: this.state.row_data.patient,\r\n                                doctor_ref: this.state.row_data.doctor,\r\n                                reason: this.state.row_data['appointment_description'],\r\n                                date: this.state.row_data.appointment_date,\r\n                                time: this.state.row_data.appointment_time,\r\n                                comments: this.state.row_data.appointment_comments,\r\n                                referee: this.state.row_data.appointment_referee,\r\n                            }} />\r\n                        {\r\n                            this.state.procedure_modal_visibility &&\r\n                            <CreateProcedure\r\n                                visibility={this.state.procedure_modal_visibility}\r\n                                handleClose={() => this.setState({ procedure_modal_visibility: false })}\r\n                                appointment_id={this.state.row_data._id}\r\n                            />\r\n                        }\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n                {/* update appointment modal */}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { notify, load_todays_appointments, clear_todays_appointments })(TodaysPatientRow)","import React, { Component } from 'react';\r\n// import NO_PICTURE from '../../resources/images/placeholder.jpg'\r\nimport moment from 'moment';\r\n// import { classNameColors } from '../constant_data';\r\n\r\nclass User extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: this.props.data,\r\n            size: this.props.size,\r\n\r\n            text_size: '',\r\n            icon_size: '',\r\n            button_size: '',\r\n            heading_size: '',\r\n\r\n        }\r\n    }\r\n\r\n    calculate_age = (dob1) => {\r\n        var today = new Date();\r\n        var birthDate = new Date(dob1);  // create a date object directly from `dob1` argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        return age_now;\r\n    }\r\n\r\n    componentDidMount(){\r\n        switch(this.state.size){\r\n            case 'large':\r\n                this.setState({\r\n                    text_size: 'h3',\r\n                    icon_size: '',\r\n                    button_size: 'btn-lg',\r\n                    heading_size: 'h1 font-weight-bold'\r\n                })\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    render(){\r\n\r\n        const store = this.state.data\r\n        const name = store['first_name'] + ' ' + store['last_name']\r\n        const gender = store['gender']\r\n        const date_of_birth = store['date_of_birth']\r\n        const email = store['email']\r\n        const phone = store['phone_number']\r\n\r\n        const icon = this.state.icon_size\r\n        const text = this.state.text_size\r\n        return(\r\n            <div className=\"media\">\r\n                <div className=\"mr-3\">\r\n                    <div className={`img-fluid rounded-circle text-white bg-teal-400 h3 d-flex justify-content-center align-items-center p-2`} \r\n                        style={{height: '50px', width: '50px'}}// src={NO_PICTURE} \r\n                        >\r\n                        {store['first_name'].charAt(0) + store['last_name'].charAt(0)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                    <h5 className={`mb-0 ${this.state.heading_size}`}>{name} {gender === 'Male'? \r\n                                            <span className=\"badge badge-primary\">\r\n                                                <small>Male</small>\r\n                                            </span>:\r\n                                            <span className=\"badge bg-pink-400\">\r\n                                               <small>Female</small>\r\n                                            </span>}</h5>\r\n                    <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <span className={`${text}`}><i className={`icon-person ${icon}`}></i> {this.calculate_age(date_of_birth)} years old</span>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                        <span className={`mt-1 ${text}`}><i className={`icon-calendar3 mr-2 ${icon}`}></i> {moment(new Date(date_of_birth).toString()).format('MMM Do YY')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6 col-sm-12\">  \r\n                            <span className={`mt-1 ${text}`}><i className={`icon-phone-wave mr-2 ${icon}`}></i>{phone}</span>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <span className={`mt-1 ${text}`}><i className={`icon-envelop5 mr-2 ${icon}`}></i>{email}</span>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default User","import React from 'react'\r\nimport Modal from \"react-bootstrap4-modal\";\r\nimport Loading from \"../../components/loading\";\r\nimport User from '../customs/user/user';\r\nimport { Link } from 'react-router-dom';\r\nimport 'styles/animations/animations.css'\r\n\r\nfunction UserPreviewModal(props) {\r\n\r\n\r\n    function handle_on_click_back_drop() {\r\n        props.on_click_back_drop()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal visible={props.visibility} \r\n                onClickBackdrop={() => handle_on_click_back_drop()}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog-centered modal-lg `}\r\n                >\r\n                \r\n                <div className=\"modal-body\">\r\n                    <div className=\"float-right\">\r\n                        <Link onClick={() => handle_on_click_back_drop()} \r\n                            to=\"#\" \r\n                            className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                            <i className=\"icon-cross3 icon-2x\"></i>\r\n                        </Link>\r\n                    </div>\r\n                    {\r\n                        props.modal_props === null? <Loading size={150} />: <User data={props.modal_props} size=\"large\"/> \r\n                    }\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                \r\n                </div>\r\n                \r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPreviewModal;\r\n","import React, { Component } from 'react';\r\nimport { BLOOD_GROUPS_OPTIONS, GENDER_OPTIONS, CITIES, COUTRIES } from '../../utils/constant_data';\r\nimport { ADMIN_CREATE_PATIENT } from '../../services/rest_end_points';\r\nimport Axios from 'axios';\r\nimport Loading from '../../components/loading';\r\nimport Inputfield from '../../components/inputfield';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport moment from 'moment'\r\nimport notify from 'notify'\r\n\r\nclass NewUserModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading_status: false,\r\n\r\n            user_first_name: { value: '', error: false },\r\n            user_last_name: { value: '', error: false },\r\n            user_phone_number: { value: '', error: false },\r\n            user_dob: { value: '', error: false },\r\n            user_age: { value: '', error: false },\r\n            \r\n            user_cnic: { value: '', error: false },\r\n            user_email: { value: '', error: false },\r\n\r\n            user_country: { value: 'Pakistan', error: false },\r\n            user_city: { value: 'Lahore', error: false },\r\n            user_address: { value: '', error: false },\r\n\r\n            user_gender: { value: 'Male', error: false },\r\n            user_blood_group: { value: 'Unknown', error: false },\r\n            user_role: { value: 'Patient', error: false },\r\n        }\r\n    }\r\n\r\n    on_text_field_change = (e) => {\r\n        if (e.target.id === 'user_age') {\r\n            const dob = e.target.value === '' ? '' : moment(moment().subtract(parseInt(e.target.value), 'years').calendar()).format('ll');\r\n            this.setState({ user_age: { value: e.target.value, error: false }, user_dob: { value: dob, error: false } });\r\n        } \r\n        else {\r\n            this.setState({ [e.target.id]: { value: e.target.value, error: false }})\r\n        }\r\n    }\r\n    \r\n    on_selected_changed = (e, actor) => {\r\n        if (e !== null) {\r\n            this.setState({ [e.id]: { value: e.label, error: false } })\r\n        }\r\n        else {\r\n            this.setState({ [actor]: { value: '', error: false } })\r\n        }\r\n    }\r\n    \r\n    on_user_date_of_birth_change = (e) => {\r\n        if (e === '')\r\n            this.setState({ user_dob: { value: '', error: false } })\r\n        else {\r\n            let configured_date = null;\r\n            let configured_age = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n                configured_age = e.fromNow();\r\n                if (configured_age.includes('years')){\r\n                    configured_age = configured_age.split(' ');\r\n                    configured_age = configured_age[0];\r\n                }\r\n                else {\r\n                    configured_age = \"0\"\r\n                }\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n                configured_age = ''\r\n            }\r\n            finally {\r\n                this.setState({ \r\n                    user_dob: { value: configured_date, error: false }, \r\n                    user_age: { value: configured_age, error: false } \r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\r\n        const alphabets = /^[A-Za-z]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (required && input === '') {\r\n            return true;\r\n        }\r\n        if (only_alpha && input !== '' && !input.match(alphabets)) {\r\n            return true;\r\n        }\r\n        if (only_numbers && input !== '' && !input.match(numbers)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    check_hard_constraints = (input, include = \"\", length_check = \"default\", val = -1) => {\r\n        if (!input.includes(include)) { return true; }\r\n        switch (length_check) {\r\n            case 'eq':\r\n                if (input.length !== val) { return true }\r\n                break;\r\n            case 'min':\r\n                if (input.length < val) { return true }\r\n                break;\r\n            case 'max':\r\n                if (input.length > val) { return true }\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_submit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading_status: true })\r\n        const data = {\r\n            admin_id: this.props.active_user._id,\r\n            patient: {\r\n                first_name: this.state.user_first_name.value.trim(),\r\n                last_name: this.state.user_last_name.value.trim(),\r\n                phone_number: this.state.user_phone_number.value.trim(),\r\n                date_of_birth: this.state.user_dob.value,\r\n                cnic: this.state.user_cnic.value.trim(),\r\n                email: this.state.user_email.value.trim(),\r\n                country: this.state.user_country.value,\r\n                city: this.state.user_city.value,\r\n                address: this.state.user_address.value.trim(),\r\n                gender: this.state.user_gender.value.trim(),\r\n                blood_group: this.state.user_blood_group.value.trim(),\r\n                role: this.state.user_role.value.trim(),\r\n            }\r\n        }\r\n        // console.log('submit data', data)\r\n        Axios.post(ADMIN_CREATE_PATIENT, data).then(response => {\r\n            notify('success', '', response.data['message']);\r\n            this.setState({ loading_status: false }, () => {\r\n                this.close_modal()\r\n            })\r\n        }).catch(err => {\r\n            this.setState({ loading_status: false })\r\n            if (err.response) {\r\n                if (err.response.status === 400){\r\n                    notify('error', '', err.response.data.error.message)\r\n                }\r\n                else if (err.response.status === 422){\r\n                    notify('error', '', err.response.data.error[0])\r\n                }\r\n            }\r\n            else if (err.request) {\r\n                console.log('request error', err);\r\n            }\r\n            else {\r\n                console.log('error', err)\r\n            }\r\n        })\r\n    }\r\n\r\n    close_modal = () => {\r\n        this.props.close()\r\n        this.props.call_back()\r\n\r\n    }\r\n\r\n    render() {\r\n        const add_user_modal_body = <div className=\"modal-body\">\r\n            <div className={`row`}>\r\n                <div className={`col-md-4 px-3`}>\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_first_name`}\r\n                            heading={'First name'}\r\n                            placeholder=\"Enter first name\"\r\n                            required\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_first_name.value}\r\n                            // error={this.state.user_first_name.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_last_name`}\r\n                            heading={'Last name'}\r\n                            placeholder=\"Enter last name\"\r\n                            required\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_last_name.value}\r\n                            error={this.state.user_last_name.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_phone_number`}\r\n                            heading={'Phone number'}\r\n                            placeholder=\"Enter phone number\"\r\n                            required\r\n                            maxLength=\"13\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_phone_number.value}\r\n                            error={this.state.user_phone_number.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_age`}\r\n                            heading={'Age'}\r\n                            icon_class={'icon-vcard'}\r\n                            type={'number'}\r\n                            required\r\n                            maxLength=\"2\"\r\n                            placeholder=\"Enter Age\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_age.value}\r\n                            error={this.state.user_age.error}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_dob`}\r\n                            heading={'Date of birth'}\r\n                            icon_class={'icon-calendar3'}\r\n                            placeholder=\"Enter Date of birth\"\r\n                            type={'text'}\r\n                            field_type=\"date-time\"\r\n                            date_format={'ll'}\r\n                            time_format={false}\r\n                            onChange={this.on_user_date_of_birth_change}\r\n                            value={this.state.user_dob.value}\r\n                            error={this.state.user_dob.error}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_cnic`}\r\n                            heading={'CNIC'}\r\n                            icon_class={'icon-vcard'}\r\n                            type={'number'}\r\n                            maxLength=\"13\"\r\n                            placeholder=\"Enter CNIC\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_cnic.value}\r\n                            error={this.state.user_cnic.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_email`}\r\n                            heading={'Enter email'}\r\n                            icon_class={'icon-envelop'}\r\n                            type={'email'}\r\n                            placeholder=\"Enter email\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_email.value}\r\n                            error={this.state.user_email.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Inputfield \r\n                                heading={'Country'}\r\n                                field_type=\"select\"\r\n                                required\r\n                                isClearable\r\n                                menuPlacement=\"auto\"\r\n                                options={COUTRIES}\r\n                                classNamePrefix={`form-control`}\r\n                                placeholder=\"Select Country\"\r\n                                id=\"country_selection\"\r\n                                isDisabled\r\n                                onChange={e => this.on_selected_changed(e, 'country_selection')}\r\n                                value={{ id: 'country_selection', label: this.state.user_country.value }}\r\n                                defaultValue={{ id: 'country_selection', label: 'Pakistan' }}\r\n                                styles={{\r\n                                    container: base => ({\r\n                                        ...base,\r\n                                        backgroundColor: this.state.user_country.error ? '#FF0000' : '',\r\n                                        padding: 1,\r\n                                        borderRadius: 5\r\n                                    }),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Inputfield \r\n                                heading={'City'}\r\n                                field_type=\"select\"\r\n                                required\r\n                                isClearable\r\n                                menuPlacement=\"auto\"\r\n                                options={CITIES}\r\n                                classNamePrefix={`form-control`}\r\n                                placeholder=\"Select City\"\r\n                                id=\"city_selection\"\r\n                                onChange={e => this.on_selected_changed(e, 'city_selection')}\r\n                                value={{ id: 'city_selection', label: this.state.user_city.value }}\r\n                                defaultValue={{ id: 'city_selection', label: 'Lahore' }}\r\n                                styles={{\r\n                                    container: base => ({\r\n                                        ...base,\r\n                                        backgroundColor: this.state.user_city.error ? '#FF0000' : '',\r\n                                        padding: 1,\r\n                                        borderRadius: 5\r\n                                    }),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Inputfield \r\n                                heading=\"Address/Area\"\r\n                                className=\"form-control form-control-lg\"\r\n                                id=\"user_address\"\r\n                                value={this.state.user_address.value}\r\n                                error={this.state.user_address.error}\r\n                                onChange={e => this.on_text_field_change(e)}\r\n                                placeholder=\"Enter address / area you live in the city\"\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 border-left\">\r\n                    <Inputfield \r\n                        heading=\"Gender\"\r\n                        field_type=\"select\"\r\n                        required\r\n                        isClearable\r\n                        menuPlacement=\"auto\"\r\n                        options={GENDER_OPTIONS}\r\n                        classNamePrefix={`form-control`}\r\n                        placeholder=\"Select Gender\"\r\n                        id=\"gender_selection\"\r\n                        onChange={e => this.on_selected_changed(e, 'gender_selection')}\r\n                        // value={this.state.user_gender.value}\r\n                        defaultValue={{ id: 'gender_selection', label: 'Male' }}\r\n                        styles={{\r\n                            container: base => ({\r\n                                ...base,\r\n                                backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\r\n                                padding: 1,\r\n                                borderRadius: 5\r\n                            }),\r\n                        }}\r\n                        />\r\n                    <Inputfield \r\n                        heading=\"Blood group\"\r\n                        field_type=\"select\"\r\n                        required\r\n                        isClearable\r\n                        menuPlacement=\"auto\"\r\n                        options={BLOOD_GROUPS_OPTIONS}\r\n                        className={`Select-option`}\r\n                        classNamePrefix={`form-control`}\r\n                        placeholder=\"Select blood group\"\r\n                        id=\"blood_group_selection\"\r\n                        onChange={e => this.on_selected_changed(e, 'blood_group_selection')}\r\n                        defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\r\n                        styles={{\r\n                            container: base => ({\r\n                                ...base,\r\n                                backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\r\n                                padding: 1,\r\n                                borderRadius: 5\r\n                            }),\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return (\r\n            <Modal\r\n                visible={this.props.visibility}\r\n                onClickBackdrop={this.close_modal}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog-centered modal-lg`}>\r\n                <form onSubmit={this.on_submit}>\r\n                    <div className=\"modal-header bg-teal-400\">\r\n                        <h5 className=\"modal-title\">New Patient</h5>\r\n                    </div>\r\n\r\n                    {this.state.loading_status ? <Loading /> : add_user_modal_body}\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <span className=\"float-left\"><span className=\"text-danger\">*</span> Are required fields</span>\r\n                        \r\n                        <button\r\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            type=\"submit\"\r\n                            disabled={this.state.loading_status}>\r\n                            <b><i className=\"icon-plus3\"></i></b>\r\n                            Add\r\n                        </button>\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.close_modal}>\r\n                            <b><i className=\"icon-cross\"></i></b>\r\n                            Cancel\r\n                        </button>\r\n\r\n                        \r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default NewUserModal","import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select'\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport { USERS_SEARCH_BY_CREDENTIALS } from '../../../../services/rest_end_points';\r\nimport { load_todays_appointments, clear_todays_appointments } from '../../../../redux/actions';\r\nimport { connect } from \"react-redux\";\r\nimport NewUserModal from '../../../../shared/modals/newusermodal';\r\n// import Clock from 'react-clock';\r\nimport 'react-clock/dist/Clock.css';\r\n// import { HOURS12, HOURS24, MINS_BY_5, TIME_PERIOD } from '../../../../shared/constant_data';\r\n// import { get_utc_date } from '../../../../shared/functions';\r\nimport './styles.css'\r\nimport TimeKeeper from 'react-timekeeper';\r\n// import { Height } from '@material-ui/icons';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport { AppointmentCreate, GetRequest, PostRequest } from '../../../../services/queries';\r\nimport notify from 'notify';\r\n\r\nclass NewAppointmentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading_status: false,\r\n\r\n            patients: [],\r\n            doctors: [],\r\n\r\n            appointment_patient: { value: '', error: false },\r\n            appointment_doctor: { value: '', error: false },\r\n            appointment_referee: { value: '', error: false },\r\n            appointment_comments: { value: '', error: false },\r\n            appointment_date: { value: moment().format('ll'), error: false },\r\n            appointment_time: { value: moment().format('LT'), error: false },\r\n\r\n            new_patient_modal_visibility: false,\r\n\r\n            patient_select_value: '',\r\n            doctor_select_value: '',\r\n\r\n            hours: { value: '12', error: false },\r\n            mins: { value: '00', error: false },\r\n            time_period: { value: 'AM', error: false },\r\n\r\n        }\r\n    }\r\n\r\n    async request(_data, _url, _method = \"post\") {\r\n        try {\r\n            if (_method === 'post') {\r\n                return await PostRequest(_url, _data)\r\n            }\r\n            else if (_method === 'get') {\r\n                return await GetRequest(_url)\r\n            }\r\n        }\r\n        catch (err) {\r\n            notify('error', '', 'Server is not responding! Please try again later')\r\n            return null\r\n        }\r\n    }\r\n\r\n    async render_users(string, role) {\r\n        try {\r\n            const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}&active=true`\r\n            const res_users = await this.request({}, query, 'get')\r\n            let temp_users = [];\r\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\r\n                if (role === 'Patient'){\r\n                    const t_user = res_users.data.payload['users'][i]\r\n                    temp_users.push({\r\n                        id: `appointment_${role.toLowerCase()}_selection`,\r\n                        reference: t_user._id,\r\n                        label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\r\n                    })\r\n                }\r\n                else if (role === 'Doctor'){\r\n                    const t_user = res_users.data.payload['users'][i]\r\n                    temp_users.push({\r\n                        id: `appointment_${role.toLowerCase()}_selection`,\r\n                        reference: t_user.doctor._id,\r\n                        label: `${t_user.doctor.first_name} ${t_user.doctor.last_name} | ${t_user.doctor.phone_number} | ${t_user.doctor.email}`\r\n                    })\r\n                    console.log(t_user.doctor)\r\n                }\r\n                \r\n            }\r\n            if (role === 'Patient') {\r\n                this.setState({ patients: temp_users })\r\n            }\r\n            else if (role === 'Doctor') {\r\n                this.setState({ doctors: temp_users })\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n    populate_patients = (string) => {\r\n        if (string.length >= 1) {\r\n            this.render_users(string, 'Patient')\r\n        }\r\n        else {\r\n            this.setState({ patients: [] })\r\n        }\r\n    }\r\n\r\n    populate_doctors = (string) => {\r\n        if (string.length >= 1) {\r\n            this.render_users(string, 'Doctor')\r\n        }\r\n        else {\r\n            this.setState({ doctors: [] })\r\n        }\r\n    }\r\n\r\n\r\n    on_selected_changed = (e, actor) => {\r\n        if (e !== null) {\r\n\r\n            switch (e.id) {\r\n                case 'appointment_patient_selection':\r\n                    const val_patient = {\r\n                        id: 'appointment_patient_selection',\r\n                        reference: e.reference,\r\n                        label: e.label\r\n                    }\r\n                    this.setState({ appointment_patient: { value: e.reference, error: false }, patient_select_value: val_patient })\r\n                    break;\r\n                case 'appointment_doctor_selection':\r\n                    const val_doctor = {\r\n                        id: 'appointment_doctor_selection',\r\n                        reference: e.reference,\r\n                        label: e.label\r\n                    }\r\n                    this.setState({ appointment_doctor: { value: e.reference, error: false }, doctor_select_value: val_doctor })\r\n                    break;\r\n                case 'hour_selection':\r\n                    console.log('e', e)\r\n                    this.setState({ hours: { value: e.label, error: false } })\r\n                    break;\r\n                case 'min_selection':\r\n                    this.setState({ mins: { value: e.label, error: false } })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (actor) {\r\n                case 'appointment_patient_selection':\r\n                    this.setState({ appointment_patient: { value: '', error: false }, patient_select_value: '' })\r\n                    break;\r\n                case 'appointment_doctor_selection':\r\n                    this.setState({ appointment_doctor: { value: '', error: false }, doctor_select_value: '' })\r\n                    break;\r\n                case 'hour_selection':\r\n                    this.setState({ hours: { value: '12', error: false } })\r\n                    break;\r\n                case 'min_selection':\r\n                    this.setState({ mins: { value: '00', error: false } })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    on_text_field_change = (e) => {\r\n        switch (e.target.id) {\r\n            case 'appointment_referee_text_input':\r\n                this.setState({ appointment_referee: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'appointment_comments_text_input':\r\n                this.setState({ appointment_comments: { value: e.target.value, error: false } })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    on_apointment_date_change = (e) => {\r\n        if (e === '')\r\n            this.setState({ appointment_date: { value: '', error: false } })\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ appointment_date: { value: configured_date, error: false } })\r\n            }\r\n        }\r\n    }\r\n\r\n    on_apointment_time_change = (time) => {\r\n\r\n        console.log('time', moment(time).format(\"LT\"));\r\n        this.setState({ appointment_time: { value: moment(time).format(\"LT\") } })\r\n        // if (e === '')\r\n        //     this.setState({ appointment_time: { value: '' } })\r\n        // else {\r\n        //     var configured_date = null;\r\n        //     try {\r\n        //         configured_date = e.format('LT');\r\n        //     }\r\n        //     catch (err) {\r\n        //         configured_date = ''\r\n        //     }\r\n        //     finally {\r\n        //         this.setState({ appointment_time: { value: configured_date } })\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\r\n        const alphabets = /^[A-Za-z]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (required && input === '') {\r\n            return true;\r\n        }\r\n        if (only_alpha && !input.match(alphabets)) {\r\n            return true;\r\n        }\r\n        if (only_numbers && !input.match(numbers)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_submit = () => {\r\n        this.setState({ loading_status: true })\r\n        let error = false\r\n        if (this.check_input(this.state.appointment_patient.value, true)) {\r\n            this.setState({ appointment_patient: { value: this.state.appointment_patient.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.appointment_doctor.value, true)) {\r\n            this.setState({ appointment_doctor: { value: this.state.appointment_doctor.value, error: true } })\r\n            error = true\r\n        }\r\n        // if (this.check_input(this.state.appointment_reason.value, true)) {\r\n        //     this.setState({ appointment_reason: { value: this.state.appointment_reason.value, error: true } })\r\n        //     error = true\r\n        // }\r\n        if (this.check_input(this.state.appointment_date.value, true)) {\r\n            this.setState({ appointment_date: { value: this.state.appointment_date.value, error: true } })\r\n            error = true\r\n        }\r\n\r\n        if (this.check_input(this.state.hours.value, true, false, true)) {\r\n            this.setState({ hours: { value: this.state.hours.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.mins.value, true, false, true)) {\r\n            this.setState({ mins: { value: this.state.mins.value, error: true } })\r\n            error = true\r\n        }\r\n\r\n        if (error === true) {\r\n            notify('error', '', 'Invalid inputs')\r\n            this.setState({ loading_status: false })\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            patient: this.state.appointment_patient.value,\r\n            doctor: this.state.appointment_doctor.value,\r\n            date: `${moment(this.state.appointment_date.value).format('YYYY-MM-DD')}T${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\r\n            time: `${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\r\n            description: \"\",\r\n            comments: this.state.appointment_comments.value,\r\n            referee: this.state.appointment_referee.value\r\n        }\r\n        // console.log('data',data)\r\n        // return;\r\n        AppointmentCreate(data).then(res => {\r\n            notify('success', '', res.data.message)\r\n            this.setState({\r\n                appointment_patient: { value: '', error: false },\r\n                appointment_doctor: { value: '', error: false },\r\n                appointment_date: { value: moment().format('ll'), error: false },\r\n                appointment_time: { value: moment().format(\"LT\"), error: false },\r\n                appointment_comments: { value: '', error: false },\r\n                appointment_referee: { value: '', error: false },\r\n                patient_select_value: '',\r\n                doctor_select_value: '',\r\n                loading_status: false,\r\n            })\r\n            this.props.clear_todays_appointments()\r\n            this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\r\n            this.props.close()\r\n\r\n        }).catch(err => {\r\n            if (err) {\r\n                if (err.response) {\r\n                    notify('error', '', err.response.message)\r\n                    // notify('error', '', res.data.message)\r\n                    // this.setState({ loading_status: false })\r\n                }\r\n                else {\r\n                    notify('error', '', 'Server not responding ' + err.toString())\r\n                }\r\n                this.setState({ loading_status: false })\r\n            } else {\r\n                notify('error', '', 'Network error' + err.toString())\r\n                this.setState({ loading_status: false })\r\n            }\r\n        })\r\n    }\r\n    open_new_patient_modal = () => {\r\n        this.props.close()\r\n        this.setState({ new_patient_modal_visibility: true })\r\n    }\r\n\r\n    close_new_patient_modal = () => {\r\n        this.setState({ new_patient_modal_visibility: false })\r\n    }\r\n\r\n    call_back_new_patient_modal = () => {\r\n\r\n    }\r\n\r\n    render() {      \r\n        return (\r\n            <Fragment>\r\n\r\n                {/* Register new patient modal */}\r\n                <NewUserModal\r\n                    visibility={this.state.new_patient_modal_visibility}\r\n                    close={this.close_new_patient_modal}\r\n                    call_back={this.props.bind_function} />\r\n\r\n                <Modal\r\n                    visible={this.props.visibility}\r\n                    onClickBackdrop={this.props.close}\r\n                    fade={true}\r\n                    dialogClassName={`modal-dialog-centered modal-lg`}>\r\n\r\n                    <div className=\"modal-header bg-teal-400\" >\r\n                        <h5 className=\"modal-title\">New Appointment</h5>\r\n                        {/** Date select */}\r\n                        <div className={`w-25`}>\r\n                            <DateTimePicker id=\"dob_text_input\"\r\n                                onChange={this.on_apointment_date_change}\r\n                                className=\"clock_datatime_picker text-teal-400\"\r\n                                inputProps={{ \r\n                                    placeholder: 'Select Date', \r\n                                    width: '100%', \r\n                                    className: `form-control ${this.state.appointment_date.error ? 'border-danger' : ''}`, \r\n                                    disabled: this.state.loading_status\r\n                                }}\r\n                                input={true}\r\n                                dateFormat={'ll'}\r\n                                timeFormat={false}\r\n                                closeOnSelect={true}\r\n                                value={this.state.appointment_date.value}\r\n                                \r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <div className={`row`}>\r\n                                    <div className={`col-md-10`}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"font-weight-semibold\">Select or add user<span className=\"text-danger\"> * </span></label>\r\n                                            <Select\r\n                                                id=\"appointment_patient_selection\"\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                options={this.state.patients}\r\n                                                // components={{ Control: ControlComponent }}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Select Patient\"\r\n                                                onInputChange={e => this.populate_patients(e)}\r\n                                                onChange={e => this.on_selected_changed(e, \"appointment_patient_selection\")}\r\n                                                value={this.state.patient_select_value}\r\n                                                isDisabled={this.state.loading_status}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.appointment_patient.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`col-md-2 d-flex align-items-end mb-3 `}>\r\n                                        <Popup\r\n                                            trigger={\r\n                                                <button \r\n                                                    disabled={this.state.loading_status}\r\n                                                    className={`btn btn-outline btn-lg bg-secondary btn-block border-secondary text-dark btn-icon`} onClick={this.open_new_patient_modal}>\r\n                                                    <i className=\"icon-plus3\"></i>\r\n                                                </button>}\r\n                                            flowing\r\n                                            // hoverable\r\n                                            content={\r\n                                                <div className={`card card-body bg-dark text-white shadow ml-1 py-1 mt-4`}>\r\n                                                    Add new Patient\r\n                                                </div>\r\n                                            }\r\n                                            position='top center'\r\n                                            style={{ zIndex: 15000 }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-semibold\">Which doctor to assign<span className=\"text-danger\"> * </span></label>\r\n                                    <Select\r\n                                        id=\"appointment_doctor_selection\"\r\n                                        isClearable\r\n                                        options={this.state.doctors}\r\n                                        classNamePrefix={`form-control`}\r\n                                        placeholder=\"Select a Doctor\"\r\n                                        menuPlacement=\"auto\"\r\n                                        onInputChange={e => this.populate_doctors(e)}\r\n                                        onChange={e => this.on_selected_changed(e, 'appointment_doctor_selection')}\r\n                                        value={this.state.doctor_select_value}\r\n                                        isDisabled={this.state.loading_status}\r\n                                        styles={{\r\n                                            container: base => ({\r\n                                                ...base,\r\n                                                backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\r\n                                                padding: 1,\r\n                                                borderRadius: 5\r\n                                            }),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-semibold\">Refered by</label>\r\n                                    <input\r\n                                        id=\"appointment_referee_text_input\"\r\n                                        className=\"form-control\"\r\n                                        value={this.state.appointment_referee.value}\r\n                                        onChange={e => this.on_text_field_change(e)}\r\n                                        placeholder=\"Reference of any doctor if any\"\r\n                                        disabled={this.state.loading_status}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Additional comments</label>\r\n                                    <textarea rows={3} cols={3}\r\n                                        id=\"appointment_comments_text_input\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Comments for the appointment\"\r\n                                        onChange={e => this.on_text_field_change(e)}\r\n                                        value={this.state.appointment_comments.value}\r\n                                        disabled={this.state.loading_status} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4\">\r\n\r\n                                <div className={`mt-1 d-flex justify-content-center`}>\r\n                                    <TimeKeeper\r\n                                        time={this.state.appointment_time.value}\r\n                                        onChange={(new_time) => this.on_apointment_time_change(new_time)}\r\n                                        // onDoneClick={() => console.log('time set')}\r\n                                        coarseMinutes={5}\r\n                                        forceCoarseMinutes\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <Select\r\n                            isClearable\r\n                            menuPlacement=\"auto\"\r\n                            options={[]}\r\n                            classNamePrefix={`form-control`}\r\n                            placeholder=\"Select Branch\"\r\n                            id=\"branch_selection\"\r\n                            isDisabled\r\n                            // onChange={e => this.on_selected_changed(e, 'gender_selection')}\r\n                            value={{\r\n                                id: 'branch_selection',\r\n                                label: 'Ghazi chowk'\r\n                            }}\r\n                            styles={{\r\n                                container: base => ({\r\n                                    ...base,\r\n                                    backgroundColor: '',\r\n                                    padding: 0,\r\n                                    borderRadius: 5,\r\n                                    width: '200px'\r\n                                }),\r\n                            }}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={this.state.loading_status}\r\n                            onClick={this.on_submit}>\r\n                            <b><i className=\"icon-plus3\"></i></b>\r\n                            Create\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.props.close}>\r\n                            <b><i className=\"icon-cross\"></i></b>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        notify: state.notify,\r\n        todays_patient: state.todays_patient\r\n    }\r\n}\r\nexport default connect(map_state_to_props, { notify, load_todays_appointments, clear_todays_appointments })(NewAppointmentModal);","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport Inputfield from '../../../../components/inputfield';\r\nimport { connect } from 'react-redux';\r\nimport { update_appointment, load_todays_appointments, clear_todays_appointments } from '../../../../redux/actions';\r\nimport ReactToPrint from 'react-to-print';\r\nimport LOGO from '../../../../resources/images/LOGO.png';\r\nimport { get_utc_date, Ucfirst } from '../../../../utils/functions';\r\nimport moment from 'moment';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport { AppointmentCharges, AppointmentCheckout, AppointmentSearchById, AppointmentUpdateCharges } from '../../../../services/queries';\r\nimport notify from 'notify'\r\n\r\nclass ConsultancyModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            consultancy_fee_text_input: { value: \"1500\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n\r\n            total: 0,\r\n            balance: 0,\r\n            procedure_charges: 0,\r\n\r\n            loading: false,\r\n\r\n            data: null\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        if (new_props.visibility && new_props.appointment_id !== null) {\r\n            this.setState({ loading: true });\r\n            AppointmentCharges(new_props.appointment_id)\r\n                .then(res => {\r\n                    this.setState({\r\n                        consultancy_fee_text_input: { value: res.data.payload.consultancy === 0 ? \"\" : res.data.payload.consultancy.toString(), error: false },\r\n                        discount_text_input: { value: res.data.payload.discount === 0 ? \"\" : res.data.payload.discount.toString(), error: false },\r\n                        follow_up_text_input: { value: res.data.payload.follow_up === 0 ? \"\" : res.data.payload.follow_up.toString(), error: false },\r\n                        paid_text_input: { value: res.data.payload.paid === 0 ? \"\" : res.data.payload.paid.toString(), error: false },\r\n                        procedure_charges: res.data.payload.procedures,\r\n                    }, () => {\r\n                        this.handle_total_values()\r\n                        AppointmentSearchById(this.props.appointment_id)\r\n                            .then(res => this.setState({ data: res.data.payload, loading: false }))\r\n                            .catch(err => this.setState({ loading: false }))\r\n                    })\r\n                }).catch(err => {\r\n                    notify('error', '', err.toString())\r\n                })\r\n        }\r\n        else if (new_props.visibility && new_props.appointment_id === null) {\r\n            // notify('error', '', \"Something went wrong! Please try again later\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                consultancy_fee_text_input: { value: \"\", error: false },\r\n                discount_text_input: { value: \"\", error: false },\r\n                follow_up_text_input: { value: \"\", error: false },\r\n                paid_text_input: { value: \"\", error: false }\r\n            })\r\n        }\r\n    }\r\n\r\n    handle_total_values = () => {\r\n        this.setState({\r\n            total: parseInt(this.state.consultancy_fee_text_input.value === \"\" ? 0 : this.state.consultancy_fee_text_input.value) +\r\n                parseInt(this.state.follow_up_text_input.value === \"\" ? 0 : this.state.follow_up_text_input.value) -\r\n                parseInt(this.state.discount_text_input.value === \"\" ? 0 : this.state.discount_text_input.value),\r\n        }, () => {\r\n            if (this.state.paid_text_input.value !== \"\") {\r\n                this.setState({\r\n                    balance: this.state.total - parseInt(this.state.paid_text_input.value)\r\n                })\r\n            }\r\n            else {\r\n                this.setState({ balance: 0 })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    on_text_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => this.handle_total_values())\r\n    }\r\n\r\n    handle_save_button_click = (e) => {\r\n        e.preventDefault()\r\n        this.setState({ loading: true });\r\n        const payload = {\r\n            appointment_id: this.props.appointment_id,\r\n            consultancy: parseInt(this.state.consultancy_fee_text_input.value === \"\" ? 0 : this.state.consultancy_fee_text_input.value),\r\n            discount: parseInt(this.state.discount_text_input.value === \"\" ? 0 : this.state.discount_text_input.value),\r\n            follow_up: parseInt(this.state.follow_up_text_input.value === \"\" ? 0 : this.state.follow_up_text_input.value),\r\n            paid: parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value),\r\n        }\r\n        AppointmentUpdateCharges(payload)\r\n            .then(res => {\r\n                notify('success', '', res.data.message)\r\n                this.setState({ loading: false }, () => {\r\n                    setTimeout(() => this.props.toggle_modal(), 1000);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                notify('error', '', 'Changes could not be saved! ' + err.toString())\r\n                this.setState({ loading: false });\r\n            })\r\n    }\r\n\r\n    handle_checkout_button_click = () => {\r\n        const paid = parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value)\r\n        if (paid < this.state.minimum_payable) {\r\n            notify('error', '', 'Payment is less that minimum payable amount.')\r\n        }\r\n        else {\r\n            const that = this;\r\n            AppointmentCheckout(this.props.appointment_id).then(res => {\r\n                notify('info', '', res.data.message)\r\n                this.props.clear_todays_appointments();\r\n                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                // setTimeout(() => {\r\n                //     this.props.toggle_modal();\r\n                // }, 1000)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    that.props.notify('error', '', err.toString());\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal visible={this.props.visibility} onClickBackdrop={this.props.toggle_modal}>\r\n                <div className={`modal-header bg-teal-400`}>\r\n                    <h5>Payment</h5>\r\n                    <ReactToPrint\r\n                        trigger={() => <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-secondary btn-labeled btn-labeled-right btn-sm pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={this.state.loading}\r\n                        >\r\n                            <b><i className=\"icon-printer2\" /></b>Print</button>}\r\n                        content={() => this.componentRef}\r\n                        onBeforeGetContent={this.gather_invoice_data}\r\n                    />\r\n                </div>\r\n                <div className={`modal-body bg-light`}>\r\n                    <div className={`row`}>\r\n                        <div className={`col-lg-6 col-md-6`}>\r\n                            <Inputfield\r\n                                id=\"consultancy_fee_text_input\"\r\n                                heading=\"Consultancy Fee\"\r\n                                icon_class=\"icon-cash3\"\r\n                                placeholder=\"Fee\"\r\n                                disabled={false}\r\n                                value={this.state.consultancy_fee_text_input.value}\r\n                                error={this.state.consultancy_fee_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <Inputfield\r\n                                id=\"discount_text_input\"\r\n                                heading=\"Discount over total\"\r\n                                placeholder=\"Discount\"\r\n                                value={this.state.discount_text_input.value}\r\n                                error={this.state.discount_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <Inputfield\r\n                                id=\"follow_up_text_input\"\r\n                                heading=\"Follow ups Fee\"\r\n                                placeholder=\"Follow ups Fee\"\r\n                                custom_classes=\"\"\r\n                                disabled={false}\r\n                                value={this.state.follow_up_text_input.value}\r\n                                error={this.state.follow_up_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <hr className={`mb-0`} />\r\n                            <Inputfield\r\n                                id=\"paid_text_input\"\r\n                                heading=\"Paid Amount\"\r\n                                placeholder=\"Fee paid\"\r\n                                disabled={false}\r\n                                value={this.state.paid_text_input.value}\r\n                                error={this.state.paid_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                        </div>\r\n                        <div className={`col-lg-6 col-md-6`}>\r\n                            {\r\n                                this.state.loading ?\r\n                                    <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n                                        <Skeleton className=\"my-1\" count={1} height={15} width={80} />\r\n                                        <div className={`row`}>\r\n                                            <div className={`col-6`}>\r\n                                                <Skeleton className=\"my-2\" count={5} height={30} />\r\n                                            </div>\r\n                                            <div className={`col-6`}>\r\n                                                <Skeleton className=\"my-2\" count={5} height={30} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </SkeletonTheme> :\r\n                                    (\r\n                                        <div className={`table-responsive px-1`}>\r\n                                            <table className={`table table-sm table-bordered table-hover mb-0`}>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className={`border-0`}>Appointment charges</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Consultancy</td>\r\n                                                        <td>{this.state.consultancy_fee_text_input.value}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Follow up</td>\r\n                                                        <td>{this.state.follow_up_text_input.value}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Discount</td>\r\n                                                        <td>{this.state.discount_text_input.value}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className={`font-weight-bold`}>Total</td>\r\n                                                        <td className={`font-weight-bold`}>{this.state.total}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Balance</td>\r\n                                                        <td>{this.state.balance}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            {/* <div className={`text-center`}>\r\n                                    Charges for procedures are <span className={`font-weight-bold`}>Rs. {this.state.procedure_charges}</span>\r\n                                </div> */}\r\n                                        </div>)}\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className={`d-none`}>\r\n                        <div className={`row px-3 py-5`} ref={el => (this.componentRef = el)}>\r\n\r\n                            <div className={`col-12 row`}>\r\n\r\n                                <div className={`col-6`}>\r\n                                    <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\r\n                                </div>\r\n                                <div className={`col-6`}>\r\n                                    {\r\n                                        this.state.data ? <div className=\"table-responsive card\">\r\n                                            <table className=\"table table-hover mb-0\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">MRN#</td>\r\n                                                        <td className=\"py-1\">{this.state.data.patient.mrn}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Patient</td>\r\n                                                        <td className=\"py-1\">{`${Ucfirst(this.state.data.patient.first_name)} ${Ucfirst(this.state.data.patient.last_name)}`}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Contact</td>\r\n                                                        <td className=\"py-1\">{`${this.state.data.patient.phone_number}`}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Doctor</td>\r\n                                                        <td className=\"py-1\">{`${Ucfirst(this.state.data.doctor.first_name)} ${Ucfirst(this.state.data.doctor.last_name)}`}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Date</td>\r\n                                                        <td className=\"py-1\">{`${moment(get_utc_date(this.state.data.appointment_date), \"YYYY-MM-DDThh:mm:ss\").format('LLLL')}`}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div> : <span>Cannot fetch user data</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={`table-responsive px-1 row col-12 mt-2`}>\r\n                                <h2 className={`font-weight-bold`}>Charges</h2>\r\n                                <table className={`table table-sm table-bordered table-hover mb-0`}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Consultancy</td>\r\n                                            <td>{this.state.consultancy_fee_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Follow up</td>\r\n                                            <td>{this.state.follow_up_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Discount</td>\r\n                                            <td>{this.state.discount_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className={`font-weight-bold`}>Total</td>\r\n                                            <td className={`font-weight-bold`}>{this.state.total}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <h2 className={`font-weight-bold mt-2`}>Payment</h2>\r\n                                <table className={`table table-sm table-bordered table-hover mb-0 mt-2`}>\r\n                                    <tbody>\r\n\r\n                                        <tr>\r\n                                            <td>Paid</td>\r\n                                            <td>{this.state.paid_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Balance</td>\r\n                                            <td>{this.state.balance}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <span className={`text-muted`}>- Invoice date-time {moment(new Date()).format('LLL')}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`modal-footer`}>\r\n                    <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-dark btn-labeled btn-labeled-right pr-5\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_save_button_click}\r\n                        disabled={this.state.loading}\r\n                    >\r\n                        <b><i className=\"icon-floppy-disk\" /></b>\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.props.toggle_modal}\r\n                    >\r\n                        <b><i className=\"icon-cross\" /></b>\r\n                        Cancel\r\n                    </button>\r\n\r\n                    {/* <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_checkout_button_click}\r\n                    >\r\n                        <b><i className=\"icon-checkmark2\" /></b>\r\n                        Checkout\r\n                    </button> */}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { notify, update_appointment, load_todays_appointments, clear_todays_appointments })(ConsultancyModal);","import React, { Component, Fragment } from 'react';\nimport Select, { components } from 'react-select'\nimport { USERS_SEARCH_BY_CREDENTIALS } from '../../../services/rest_end_points';\nimport { connect } from \"react-redux\";\nimport { set_active_page, load_todays_appointments, clear_todays_appointments } from '../../../redux/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport './todays_patient.css';\nimport { BASE_URL } from '../../../router/constants';\nimport moment from 'moment';\nimport ProcedureModal from './procedures/procedure_modal';\nimport InvoiceModal from './invoice/invoice';\nimport TodaysPatientRow from './todays_patient_row';\nimport UserPreviewModal from '../../../shared/modals/userpreviewmodal';\nimport NewAppointmentModal from './appointment/new_appointment_modal';\nimport { Popup } from \"semantic-ui-react\";\nimport { PATIENT_VISIT_STATUSES } from '../../../utils/constant_data';\nimport DateTimePicker from 'react-datetime';\nimport { Ucfirst } from '../../../utils/functions';\nimport ConsultacyModal from './consultancy';\nimport TodaysPatientRowLoading from './todays_patient_row_loading';\nimport { GetRequest, PostRequest, UserSearchById } from '../../../services/queries';\nimport notify from 'notify'\n\nclass Todayspatient extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            filtered_data: null,\n\n            doctors: [],\n            patients: [],\n\n            new_appointment_modal_visibility: false,\n            procedure_modal_visibility: false,\n            consultancy_modal_visibility: false,\n            \n            prev_procedure_list: null,\n            user_preview_modal_visibility: false,\n            new_patient_modal_visibility: false,\n            invoice_modal_visibility: false,\n\n            user_modal_props: null,\n            invoice_data: null,\n            appointment_invoice_id: '',\n            selected_appointment_id: null,\n            search_doctor: { value: '' },\n            search_patient: { value: '' },\n            search_status: { value: '' },\n            search_date: { value: moment(new Date()).format('ll') },\n\n        }\n    }\n\n    load_data = () => {\n        if (localStorage.getItem('Gh65$p3a008#2C')) {\n            this.setState({ search_date: { value: localStorage.getItem('Gh65$p3a008#2C') }}, () => this.props.load_todays_appointments(this.state.search_date.value))\n        } else {\n            const app_date = new Date(this.state.search_date.value);\n            this.props.load_todays_appointments(new Date(app_date.getTime() + (app_date.getTimezoneOffset() * 60000)).toISOString())\n            localStorage.setItem('Gh65$p3a008#2C', this.state.search_date.value)\n        }\n    }\n\n    componentDidMount() {\n        const routes = [\n            <Link to={BASE_URL} className=\"breadcrumb-item\">\n                <i className=\"icon-user mr-2\"></i>\n                Reception\n            </Link>,\n            <span className=\"breadcrumb-item active\">Today's Patient</span>\n        ]\n        this.props.set_active_page(routes)\n        this.load_data();\n        // setInterval(() => {\n        //     this.load_data()   \n        // }, 10000)\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                return await PostRequest(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await GetRequest(_url)\n            }\n        }\n        catch (err) {\n            notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    async render_users(string, role) {\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        try {\n            const res_users = await this.request({}, query, 'get')\n            let temp_users = []\n            if (role === 'Doctor'){\n                for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                    const t_user = res_users.data.payload['users'][i]\n                    temp_users.push({\n                        id: `${role.toLowerCase()}_selection`,\n                        reference: t_user.doctor._id,\n                        label: `${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${t_user.details.specialities.toString()}`\n                    })\n                }\n            }\n            if (role === 'Patient') {\n                this.setState({ patients: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctors: temp_users })\n            }\n        }\n        catch (error) {\n            console.error('error', error);\n        }\n    }\n\n    populate_doctors = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({ doctors: [] })\n        }\n    }\n\n    populate_patient = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({ patients: [] })\n        }\n    }\n\n    componentWillReceiveProps(new_props) {\n        if (new_props.todays_patient) {\n            this.setState({ filtered_data: new_props.todays_patient.data, data: new_props.todays_patient.data })\n        }\n    }\n\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n            switch (e.id) {\n                case 'location_selection':\n                    this.setState({ user_blood_group: { value: e.label } })\n                    break;\n                case 'status_selection':\n                    this.setState({ search_status: { value: e.label } })\n                    break;\n                case 'doctor_selection':\n                    this.setState({ search_doctor: { value: e.reference } })\n                    break;\n                case 'patient_selection':\n                    this.setState({ search_patient: { value: e.reference } })\n                    break\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'location_selection':\n                    this.setState({ user_blood_group: { value: '' } })\n                    break;\n                case 'status_selection':\n                    this.setState({ search_status: { value: '' } })\n                    break;\n                case 'doctor_selection':\n                    this.setState({ search_doctor: { value: '' } })\n                    break;\n                case 'patient_selection':\n                    this.setState({ search_patient: { value: '' } })\n                    break\n                default:\n                    break;\n            }\n        }\n    }\n\n    request_user = (id) => {\n        this.setState({\n            user_preview_modal_visibility: true\n        }, () => {\n            UserSearchById(id)\n                .then(res => {\n                    this.setState({ user_modal_props: res.data.payload.user })\n                }).catch(err => {\n                    console.log('failed to fetch user', err)\n                })\n        })\n    }\n\n    renderDataInRows = (data) => {\n        if (data === null) {\n            return\n        }\n        return (data.map((booking, i) => {\n            // console.log('booking',booking)\n            // var random_color = classNameColors[Math.floor(Math.random() * classNameColors.length)]\n            const hidden_data = {\n                appointment_description: booking.appointment_description,\n                appointment_comments: booking.appointment_comments\n            }\n            return (\n                <TodaysPatientRow\n                    key={i}\n                    row_data={booking}\n                    hidden_data={hidden_data}\n                    toggle_consultancy_modal={this.toggle_consultancy_modal}\n                    toggle_procedure_modal={this.openProcedureModalHandler}\n                    toggle_invoice_modal={this.openInvoiceModalHandler}\n                    toggle_user_view_modal={this.request_user}\n                    columns=\"8\" />\n            )\n        }))\n    }\n\n    openProcedureModalHandler = (id) => {\n        this.setState({ procedure_modal_visibility: true, selected_appointment_id: id });\n    };\n\n    closeProcedureModalHandler = (type) => {\n        this.setState({ procedure_modal_visibility: false, prev_procedure_list: null, data: null })\n    };\n\n    invoiceVisitIdHandler = (value) => {\n        this.setState({ invoiceVisitId: value });\n    };\n\n    UpdateProcedureListHandler = (updateProcedureList) => {\n        this.setState({ prevProcedureList: updateProcedureList });\n    };\n\n    open_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: true })\n    };\n\n    openInvoiceModalHandler = (object) => {\n        this.setState({ invoice_modal_visibility: true, appointment_invoice_id: object })\n    };\n\n    closeInvoiceModalHandler = () => {\n        this.setState({ invoice_modal_visibility: false })\n    };\n\n    close_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: false })\n    };\n\n    call_back_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: false, data: null })\n    };\n\n    set_filters = () => {\n        this.setState({ filtered_data: null }, () => {\n            /**\n             * P D S\n             * ---------\n             * 0 0 0 - 1\n             * 0 0 1 - 2\n             * 0 1 0 - 3\n             * 0 1 1 - 4\n             * 1 0 0 - 5\n             * 1 0 1 - 6\n             * 1 1 0 - 7\n             * 1 1 1 - 8\n             */\n\n            const search_with_patients = this.state.search_patient.value !== '';\n            const search_with_doctors = this.state.search_doctor.value !== '';\n            const search_with_status = this.state.search_status.value !== '';\n\n            // console.log('search state', search_with_patients, search_with_doctors, search_with_status)\n\n            const temp = []\n            for (let i = 0; i < this.state.data.length; ++i) {\n                // console.log(this.state.search_patient.value, this.state.data[i].patient.id)\n                // 0 0 1\n                if (!search_with_patients && !search_with_doctors && search_with_status) {\n                    if (this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 0 1 0\n                else if (!search_with_patients && search_with_doctors && !search_with_status) {\n                    if (this.state.search_doctor.value === this.state.data[i].doctor.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 0 1 1\n                else if (!search_with_patients && search_with_doctors && search_with_status) {\n                    if (this.state.search_doctor.value === this.state.data[i].doctor.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 0 0\n                else if (search_with_patients && !search_with_doctors && !search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 0 1\n                else if (search_with_patients && !search_with_doctors && search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 1 0\n                else if (search_with_patients && search_with_doctors && !search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_doctor.value === this.state.data[i].doctor.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 1 1\n                else if (search_with_patients && search_with_doctors && search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_doctor.value === this.state.data[i].doctor.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n            }\n            let reset_check = true;\n            ['search_patient', 'search_doctor', 'search_status'].map((item, i) => {\n                if (this.state[item].value !== '') {\n                    reset_check = false;\n                    this.setState({ filtered_data: temp })\n                }\n                return '';\n            })\n            if (reset_check)\n                this.setState({ filtered_data: this.state.data })\n        })\n\n    }\n\n    todays_date_change = (e) => {\n        if (e === '') {\n            this.setState({ search_date: { value: '' } })\n        }\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n                this.props.clear_todays_appointments()\n                this.props.load_todays_appointments(configured_date)\n                localStorage.setItem('Gh65$p3a008#2C', configured_date)\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ search_date: { value: configured_date } })\n            }\n        }\n    }\n\n    /*************************************************************************************************************************************************/\n\n    toggle_consultancy_modal = (id) => {\n        this.setState({ consultancy_modal_visibility: !this.state.consultancy_modal_visibility }, () => {\n            if (this.state.consultancy_modal_visibility) {\n                this.setState({ selected_appointment_id: id })\n            }\n        })\n    }\n\n\n    render() {\n        var table = <div className={``}>\n                <div className={`mt-2 card px-2 py-2`}><TodaysPatientRowLoading /></div>\n                <div className={`mt-2 card px-2 py-2`}><TodaysPatientRowLoading /></div>\n            </div>\n        if (this.state.filtered_data != null) {\n            if (this.state.filtered_data.length > 0) {\n                table = <Fragment>\n                    <div className=\"table-responsive mt-2 card mb-0 pb-0\">\n                        <table className=\"table table-hover mb-0\">\n                            <tbody>\n                                {\n                                    this.renderDataInRows(this.state.filtered_data)\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </Fragment>\n\n            }\n            else {\n                table = <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\n                    <strong>Info!</strong> No Appointments found.\n                </div>;\n            }\n        }\n\n\n        const Menu = props => {\n            return (\n                <components.Menu {...props} >\n                    <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\n                        {props.children}\n                    </div>\n                </components.Menu>\n            );\n        };\n\n        const filters = <div className=\"row\">\n            <div className=\"col-md-10\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Doctors</label>\n                            <Select\n                                id=\"doctor_selection\"\n                                isClearable\n                                components={{ Menu }}\n                                menuPlacement=\"auto\"\n                                options={this.state.doctors}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Search Doctor\"\n                                onInputChange={e => this.populate_doctors(e)}\n                                onChange={e => this.on_selected_changed(e, \"doctor_selection\")}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Patients</label>\n                            <Select\n                                id=\"patient_selection\"\n                                isClearable\n                                components={{ Menu }}\n                                menuPlacement=\"auto\"\n                                options={this.state.patients}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Search Patient\"\n                                onInputChange={e => this.populate_patient(e)}\n                                onChange={e => this.on_selected_changed(e, \"patient_selection\")}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={`col-md-4`}>\n\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Status</label>\n                            <Select\n                                isClearable\n                                options={PATIENT_VISIT_STATUSES}\n                                placeholder=\"Status\"\n                                onChange={e => this.on_selected_changed(e, \"status_selection\")}\n                                onClick={() => console.log('visit status')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-2 d-flex justify-content-center align-items-end mb-2 pb-2\">\n\n                <Popup\n                    trigger={\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-dark btn-icon mr-1 \"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.set_filters}\n                        >\n                            <i className=\"icon-filter4\"></i>\n\n                        </button>}\n                    content={\n                        <div className={`card card-body bg-dark text-white shadow mb-1 py-1`}>\n                            Filter records\n                        </div>\n                    }\n                    flowing\n                    // hoverable\n                    position='top center'\n                />\n\n                <Popup\n                    trigger={\n                        <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-icon mr-1 btn-block\"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.open_new_appointment_modal}>\n                            <b><i className=\"icon-plus3\"></i></b>\n                        </button>}\n                    content={\n                        <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\n                            New Appointment\n                        </div>\n                    }\n                    flowing\n                    // hoverable\n                    position='top center'\n                />\n\n            </div>\n        </div>\n\n        const table_header = <div className=\"table-header-background shadow-sw\">\n            <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-12 d-flex align-items-center\">\n                    <span className=\"text-white\">Patients list for date</span>\n                    <span className=\"badge badge-secondary ml-2 d-none d-lg-block\">\n                        {this.state.search_date.value}\n                    </span>\n                </div>\n                <div className=\"col-lg-3 d-none d-lg-block col-0\"></div>\n                <div className=\"col-lg-3 col-md-6 col-12 d-flex\">\n                    <DateTimePicker id=\"dob_text_input\"\n                        onChange={this.todays_date_change}\n                        className=\"clock_datatime_picker \"\n                        inputProps={{\n                            placeholder: 'Select Date',\n                            width: '100%',\n                            className: `form-control bg-teal-400 border-teal-400`\n                        }}\n                        input={true}\n                        dateFormat={'ll'}\n                        timeFormat={false}\n                        closeOnSelect={true}\n                        value={this.state.search_date.value}\n\n                        onClick={() => console.log('date select', this.state.search_date.value)}\n                    />\n                    <button className=\"btn bg-teal-400 border-teal-400 text-teal-400 btn-sm ml-2\" onClick={() => {\n                        this.props.clear_todays_appointments()\n                        this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\n                    }}>\n                        <i className=\"icon-search4\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        return (\n            <Fragment>\n                {/* filters panel */}\n                {filters}\n                {table_header}\n                {/* table of todays appointments */}\n                {this.props.todays_patient.loading === true ? <TodaysPatientRowLoading /> : table}\n\n                {/* Add new appointment modal */}\n                <NewAppointmentModal\n                    visibility={this.state.new_appointment_modal_visibility}\n                    close={this.close_new_appointment_modal}\n                    call_back={this.call_back_new_appointment_modal}\n                    bind_function={this.open_new_appointment_modal}\n                    state={'new'} />\n\n                <ConsultacyModal\n                    visibility={this.state.consultancy_modal_visibility}\n                    toggle_modal={this.toggle_consultancy_modal}\n                    appointment_id={this.state.selected_appointment_id}\n                />\n\n                <ProcedureModal\n                    visibility={this.state.procedure_modal_visibility}\n                    appointment_id={this.state.selected_appointment_id}\n                    prev_procedure_list={this.state.prev_procedure_list}\n                    updateProcedureList={this.UpdateProcedureListHandler}\n                    procedure_backDrop={this.closeProcedureModalHandler}\n                    cancelProcedureModal={this.closeProcedureModalHandler}\n                />\n\n                <InvoiceModal\n                    visibility={this.state.invoice_modal_visibility}\n                    appointment_id={this.state.appointment_invoice_id}\n                    close_modal={this.closeInvoiceModalHandler}\n                /> \n\n                <UserPreviewModal \n                    visibility={this.state.user_preview_modal_visibility}\n                    modal_props={this.state.user_modal_props}\n                    on_click_back_drop={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })}\n                    on_click_cancel={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })} />\n            </Fragment>\n        )\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        notify: state.notify,\n        todays_patient: state.todays_patient\n    }\n}\nexport default connect(map_state_to_props, { notify, set_active_page, load_todays_appointments, clear_todays_appointments })(withRouter(Todayspatient));","import React, { Component, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap'\r\n// import moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass TableRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false,\r\n            toggle_icon: 'icon-eye-plus',\r\n            row_data: this.props.row_data,\r\n            hidden_data: this.props.hidden_data,\r\n            hidden_header_elements: this.props.hidden_header_elements,\r\n            hidden_header_color: this.props.hidden_header_color,\r\n            col_span: ''\r\n        }\r\n    }\r\n    toggle_row = () => {\r\n        if (this.state.toggle)\r\n            this.setState({toggle: false, toggle_icon: 'icon-eye-plus'})\r\n        else\r\n            this.setState({toggle: true, toggle_icon: 'icon-eye-minus'})\r\n    }\r\n    componentDidMount(){\r\n        // this.setState({row_data: this.props.data})\r\n        this.setState({col_span: this.props.columns})\r\n    }\r\n\r\n    render_read_only_cols = () => {\r\n        return Object.keys(this.state.row_data).map((str,i) => {\r\n            return <td key={i} >{this.state.row_data[str]}</td>\r\n        })\r\n    }\r\n    render_hidden_elements = () => {\r\n        return this.state.hidden_data.map((str,i) => {\r\n            return <div key={i} className=\"\">{str}</div>\r\n        })\r\n    }\r\n    render_hidden_header_elements = () => {\r\n        return this.state.hidden_header_elements.map((str,i) => {\r\n            return <Fragment key={i}>{str}</Fragment>\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <tr>\r\n                    <td onClick={this.toggle_row}>\r\n                        <div className=\"slideInLeft animated\">\r\n                            <Link className=\"\" to=\"#\" onClick={this.toggle_row}>\r\n                                <i className={this.state.toggle_icon}></i>\r\n                            </Link>\r\n                        </div>\r\n                    </td>\r\n                    {\r\n                        this.render_read_only_cols()\r\n                    }\r\n                    {/* <td >\r\n                        \r\n                        <div className=\"d-flex flex-row\">\r\n                            <button className=\"btn btn-outline btn-sm bg-secondary border-secondary text-secondary btn-icon \"\r\n                                    onClick={()=>this.props.openModal(this.props.visit_id)}>\r\n                                <i className=\"icon-plus2\" />\r\n                            </button>\r\n                            <button className=\"btn btn-outline btn-sm bg-primary border-primary text-primary-800 btn-icon ml-1\">\r\n                                <i className=\"icon-pencil3\" />\r\n                            </button>\r\n                            <button className=\"btn btn-outline btn-sm bg-danger border-danger text-danger btn-icon ml-1\">\r\n                                <i className=\"icon-cross3\" />\r\n                            </button>\r\n                        </div>\r\n                    </td> */}\r\n                </tr>\r\n                <tr className=\"\">\r\n                    <td colSpan={`${this.state.col_span}`} className={`${this.state.toggle? '':'py-0'}`}>\r\n                        <Collapse isOpen={this.state.toggle} >\r\n                            <div className=\"float-right\">\r\n                                <Link onClick={this.toggle_row} to=\"#\" className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                                    <i className=\"icon-cross3 icon-2x\"></i>\r\n                                </Link>\r\n                            </div>\r\n                            {\r\n                                this.render_hidden_elements()\r\n                            }\r\n                        </Collapse>\r\n                    </td>\r\n                </tr>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default TableRow","import React, { Component, Fragment } from 'react';\nimport { USERS_SEARCH_BY_CREDENTIALS, APPOINTMENTS_SEARCH } from '../../../services/rest_end_points';\nimport { connect } from \"react-redux\";\nimport { set_active_page } from '../../../redux/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport \"./visits.css\"\nimport { components } from 'react-select';\nimport { PATIENT_VISIT_STATUSES } from '../../../utils/constant_data';\nimport TableRow from '../../../shared/customs/tablerows/tablerow';\nimport 'styles/animations/animations.css';\nimport UserPreviewModal from '../../../shared/modals/userpreviewmodal';\nimport { BASE_URL } from '../../../router/constants';\nimport { Popup } from \"semantic-ui-react\";\nimport { Ucfirst } from '../../../utils/functions'\nimport Inputfield from '../../../components/inputfield';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { GetRequest, PostRequest, UserSearchById } from '../../../services/queries';\nimport notify from 'notify';\n\nclass AllAppointments extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            patient_list: [],\n            doctor_list: [],\n\n            today: moment().format('LT'),\n            page_number: 0,\n            total_records_on_this_page: 0,\n            total_pages: 0,\n\n            date_from: { value: moment().subtract(7, 'days').format('ll') },\n            date_to: { value: moment().format('ll') },\n\n            search_patient_id: { value: '' },\n            search_doctor_id: { value: '' },\n            search_status: { value: '' },\n\n            patient_checkbox: false,\n            doctor_checkbox: false,\n\n            loading_status: false,\n            previous_query: { data: null },\n\n            user_preview_modal_visibility: false,\n            user_modal_props: null,\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-user mr-2\"></i>\n                        Reception\n                    </Link>, <span className=\"breadcrumb-item active\">All Apointments</span>]\n        this.props.set_active_page(routes)\n        setInterval(() => {\n            this.setState({ today: moment().format('LT') })\n        }, 60000)\n        this.on_search_click()\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                this.setState({ previous_query: { data: _data } })\n                return await PostRequest(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await GetRequest(_url)\n            }\n        }\n        catch (err) {\n            notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    on_selected_changed = (e, actor) => {\n        console.log('e', e)\n        if (e !== null) {\n            switch (actor) {\n                case 'gender_selection':\n                    this.setState({ user_gender: { value: e.label } })\n                    break;\n                case 'patient_list':\n                    this.setState({ search_patient_id: { value: e.reference } })\n                    break;\n                case 'doctor_list':\n                    this.setState({ search_doctor_id: { value: e.reference } })\n                    break;\n                case 'status_list':\n                    console.log('sttaus select', e.label)\n                    this.setState({ search_status: { value: e.label } });\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'blood_group_selection':\n                    this.setState({ user_gender: { value: '' } })\n                    break;\n                case 'patient_list':\n                    this.setState({ search_patient_id: { value: '' } })\n                    break;\n                case 'doctor_list':\n                    this.setState({ search_doctor_id: { value: '' } })\n                    break;\n                case 'status_list':\n                    this.setState({ search_status: { value: '' } });\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    async render_users(string, role) {\n\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        const res_users = await this.request({}, query, 'get')\n        let temp_users = []\n        if (res_users.status === 200) {\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `${role.toLowerCase()}_list`,\n                    reference: t_user._id,\n                    label: `${Ucfirst(t_user.first_name)} ${Ucfirst(t_user.last_name)} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient') {\n                this.setState({ patient_list: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctor_list: temp_users })\n            }\n        }\n    }\n\n    populate_patients = (string) => {\n        if (string.length >= 3) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({ patient_list: [] })\n        }\n    }\n    populate_doctors = (string) => {\n        if (string.length >= 3) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({ doctor_list: [] })\n        }\n    }\n\n    populate_appointments = async (data) => {\n        this.setState({ loading_status: true })\n        let res_visits = await this.request(data, APPOINTMENTS_SEARCH)\n        if (!res_visits) return\n        if (res_visits.status === 200) {\n            this.setState({\n                data: res_visits.data.payload.appointments,\n                total_records_on_this_page: res_visits.data.payload.appointments.length,\n                total_pages: res_visits.data.payload.total_pages,\n                loading_status: false\n            }, () => {\n                // this['element_7_ref'].scrollIntoView({ behavior: \"smooth\" });\n            })\n        }\n        else {\n            notify('info', '', res_visits.data.message)\n            this.setState({\n                data: null,\n                loading_status: false,\n                total_pages: 0,\n                total_records_on_this_page: 0\n            })\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'patient_checkbox_input':\n                this.setState({ patient_checkbox: e.target.checked })\n                break;\n            case 'doctor_checkbox_input':\n                this.setState({ doctor_checkbox: e.target.checked })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_from_date_change = (e) => {\n        if (e === '')\n            this.setState({ date_from: { value: '' } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_from: { value: configured_date } })\n            }\n        }\n    }\n\n    on_to_date_change = (e) => {\n        if (e === '')\n            this.setState({ date_to: { value: '' } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_to: { value: configured_date } })\n            }\n        }\n    }\n\n    on_search_click = () => {\n        this.setState({\n            data: null,\n\n            today: moment().format('LT'),\n            page_number: 0,\n            total_records_on_this_page: 0,\n            total_pages: 0,\n        }, () => {\n            if (this.state.date_from.value !== '' && this.state.date_to.value !== '') {\n                const payload = {\n                    to_date: this.state.date_to.value,\n                    from_date: this.state.date_from.value,\n                    page: this.state.page_number\n                }\n\n                if (this.state.search_patient_id.value) {\n                    payload.patient_id = this.state.search_patient_id.value;\n                }\n                if (this.state.search_doctor_id.value) {\n                    payload.doctor_id = this.state.search_doctor_id.value;\n                }\n                if (this.state.search_status.value) {\n                    payload.appointment_status = this.state.search_status.value;\n                }\n\n                this.populate_appointments(payload)\n            }\n            else {\n                notify('error', '', 'Please specify a range of dates')\n            }\n        })\n\n    }\n\n    refresh_button_click = () => {\n        if (this.state.previous_query.data !== null) {\n            this.populate_appointments(this.state.previous_query.data)\n        }\n        else {\n            notify('info', '', 'Select dates and click search button to search')\n        }\n    }\n\n    request_user = (id) => {\n        this.setState({\n            user_preview_modal_visibility: true\n        }, () => {\n            UserSearchById(id).then(res => {\n                this.setState({ user_modal_props: res.data.payload.user })\n            }).catch(err => {\n                console.log('failed to fetch user')\n            })\n        })\n    }\n\n    renderDataInRows = () => {\n        return (this.state.data.map((booking, i) => {\n            // var random_color = classNameColors[Math.floor(Math.random() * classNameColors.length)]\n            // console.log('booking', booking)\n            const row_data = {\n                date_of_booking: <div ref={(el) => { this[`element_${i}_ref`] = el; }}>\n                    {booking.appointment_date}\n                    {/* {`${moment(booking.appointment_date, \"YYYY-MM-DDThh:mm:ss\").utc().format('LL')}`} */}\n                </div>,// date of booking\n                time_of_booking: <div>\n                    {moment(booking.appointment_time, \"HH:mm:ss\").format('LT') === 'Invalid date'? \"-\":moment(booking.appointment_time, \"HH:mm:ss\").format('LT')}\n                    {/* {`${moment(booking.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LT')}`} */}\n                </div>,// time of booking\n                patient_name: <button className=\"btn btn-outline bg-teal-400 border-teal-400 text-teal-400 btn-sm btn-block zoomIn animated\"\n                    onClick={() => this.request_user(booking.patient['id'])}>\n                    {Ucfirst(booking.patient['first_name']) + ' ' + Ucfirst(booking.patient['last_name'])}\n                </button>,// patient_name\n                visit_reason: <span className=\"d-inline-block text-truncate \" style={{ maxWidth: \"150px\" }}>\n                    {booking.appointment_description}\n                </span>,\n                doctor_name: <button className=\"btn btn-outline-secondary btn-sm btn-block zoomIn animated\"\n                    onClick={() => this.request_user(booking.doctor['id'])}>\n                    {Ucfirst(booking.doctor['first_name']) + ' ' + Ucfirst(booking.doctor['last_name'])}\n                </button>,// doctor name\n                visit_status: <span className={`badge ${booking.appointment_status.info === 'waiting' ? 'badge-danger' : 'badge-primary'}`}>\n                    {booking.appointment_status.info}\n                </span>,\n                visit_total_charges: <Popup\n                    trigger={<div className=\"\">{booking.total_charges}</div>}\n                    flowing\n                    position='top center'\n                    content={\n                        <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\n                            <div className={``}>Consultancy: {booking.appointment_charges['consultancy']}</div>\n                            <div className={``}>Discount: {booking.appointment_charges['discount']}</div>\n                            <div className={``}>Follow up: {booking.appointment_charges['follow_up']}</div>\n                            <div className={``}>Procedures: {booking.appointment_charges['procedures']}</div>\n                            <div className={``}>Paid Amount: {booking.appointment_charges['paid']}</div>\n                        </div>\n                    }\n                />\n            }\n            const hidden_data = [\n                <h5 className=\"font-weight-semibold\">Reason of visit</h5>,\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\n                    <p className=\"mb-1\">\n                        {booking.appointment_description}\n                    </p>\n                    <footer className=\"blockquote-footer\">Perscription</footer>\n                </blockquote>\n            ]\n            return (\n                <TableRow\n                    key={i}\n                    row_data={row_data}\n                    hidden_data={hidden_data}\n                    // hidden_header_elements={header_elements}\n                    // hidden_header_color={random_color}\n                    columns=\"8\" />\n            )\n        }))\n    }\n\n    on_previous_button_click = () => {\n        const to_request_page_number = this.state.page_number - 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n    on_page_number_click = (e) => {\n        const to_request_page_number = parseInt(e.target.innerHTML) - 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n    on_next_button_click = () => {\n        const to_request_page_number = this.state.page_number + 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n\n\n    render() {\n        const Menu = props => {\n            return (\n                <components.Menu {...props} >\n                    <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\n                        {props.children}\n                    </div>\n                </components.Menu>\n            );\n        };\n        const loading = <div className={`mt-2`}>\n            <SkeletonTheme color=\"#000\" highlightColor=\"#f2f2f2\">\n                <Skeleton className=\"my-1\" count={1} height={40}/>\n            </SkeletonTheme>\n            <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                <Skeleton className=\"my-1\" count={8} height={45}/>\n            </SkeletonTheme>\n        </div>\n        var table = ''\n        if (this.state.data != null) {\n            if (this.state.data.length > 0) {\n                table = <div className=\"table-responsive mt-2 card mb-0 pb-0\"><table className=\"table table-hover\">\n                    <thead className=\"table-header-bg bg-dark\">\n                        <tr>\n                            <th></th>\n                            <th>Date</th>\n                            <th>Time</th>\n                            <th>Patient</th>\n                            <th>Reasons</th>\n                            <th>Doctor</th>\n                            <th>Status</th>\n                            <th>Charges</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderDataInRows()}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colSpan=\"4\">\n                                <div className=\"mt-2\">\n                                    <span className=\"font-weight-semibold h5\">Showing page {this.state.page_number + 1} of {this.state.total_pages} ...</span>\n                                </div>\n                            </td>\n                            <td colSpan=\"4\">\n                                <nav className=\"mt-2\">\n                                    <ul className=\"pagination justify-content-end\">\n                                        <li className={`page-item ${this.state.page_number === 0 ? 'disabled' : ''}`}>\n                                            <Link\n                                                className=\"page-link\"\n                                                to=\"#\"\n                                                onClick={this.on_previous_button_click}>\n                                                Previous\n                                            </Link>\n                                        </li>\n                                        {\n                                            this.state.total_pages > 1 ?\n                                                Array(this.state.total_pages).fill().map((item, i) => {\n                                                    return <li key={i} className=\"page-item\">\n                                                        <Link className=\"page-link\" to=\"#\" onClick={e => this.on_page_number_click(e)}>\n                                                            {i + 1}\n                                                        </Link>\n                                                    </li>\n                                                }) : ''\n                                        }\n                                        <li className={`page-item ${this.state.page_number === this.state.total_pages - 1 ? 'disabled' : ''}`}>\n                                            <Link className=\"page-link\" to=\"#\" onClick={this.on_next_button_click}>Next</Link>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table></div>\n            }\n            else {\n                table = <div className=\"alert alert-info\" style={{ marginBottom: '0px' }}>\n                    <strong>Info!</strong> No visits found.\n                </div>;\n            }\n        }\n        else {\n            table = <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\n                <strong>Info!</strong> No data found.\n            </div>;\n        }\n        return (\n            <Fragment>\n                <div className={`container-fluid`}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-9\">\n                            <div className={`row`}>\n                                <div className={`col-lg-6`}>\n                                    <Inputfield\n                                        field_type=\"select\"\n                                        heading=\"Patient\"\n                                        isClearable\n                                        parent_classes=\"mb-1\"\n                                        classNamePrefix={`form-control`}\n                                        id=\"patient_list\"\n                                        components={{ Menu }}\n                                        options={this.state.patient_list}\n                                        onInputChange={e => this.populate_patients(e)}\n                                        onChange={e => this.on_selected_changed(e, 'patient_list')}\n                                        placeholder=\"Search patients\"\n                                        styles={{\n                                            container: base => ({\n                                                ...base,\n                                                // backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\n                                                padding: 1,\n                                                borderRadius: 5\n                                            }),\n                                        }}\n                                    />\n                                </div>\n                                <div className={`col-lg-6`}>\n                                    <Inputfield\n                                        field_type=\"select\"\n                                        heading=\"Doctor\"\n                                        isClearable\n                                        parent_classes=\"mb-1\"\n                                        options={this.state.doctor_list}\n                                        onInputChange={e => this.populate_doctors(e)}\n                                        onChange={e => this.on_selected_changed(e, 'doctor_list')}\n                                        placeholder=\"Search Doctor\"\n                                        styles={{\n                                            container: base => ({\n                                                ...base,\n                                                // backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\n                                                padding: 1,\n                                                borderRadius: 5\n                                            }),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"col-lg-3\">\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"Status\"\n                                className=\"\"\n                                parent_classes=\"mb-1\"\n                                options={PATIENT_VISIT_STATUSES}\n                                classNamePrefix={``}\n                                placeholder=\"Select Status\"\n                                isClearable\n                                id=\"status_selection\"\n                                onChange={e => this.on_selected_changed(e, 'status_list')}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        \n                        <div className=\"col-lg-9\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-3\">\n                                    <Inputfield\n                                        field_type=\"date-time\"\n                                        heading=\"From\"\n                                        id=\"dob_text_input\"\n                                        onChange={this.on_from_date_change}\n                                        className=\"clock_datatime_picker form-control\"\n                                        inputProps={{ placeholder: 'Where from', className: 'border-0 w-100' }}\n                                        input={true}\n                                        dateFormat={'ll'}\n                                        timeFormat={false}\n                                        closeOnSelect={true}\n                                        value={this.state.date_from.value}\n                                    />\n\n                                </div>\n                                <div className=\"col-lg-3\">\n                                    <Inputfield\n                                        field_type=\"date-time\"\n                                        heading=\"To\"\n                                        id=\"dob_text_input\"\n                                        onChange={this.on_to_date_change}\n                                        className=\"clock_datatime_picker form-control \"\n                                        inputProps={{ placeholder: 'Where to', className: 'border-0 w-100' }}\n                                        input={true}\n                                        dateFormat={'ll'}\n                                        timeFormat={false}\n                                        closeOnSelect={true}\n                                        value={this.state.date_to.value}\n                                    />\n                                </div>\n                                <div className={`col-lg-3 d-flex align-items-end mb-3 pb-1`}>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn bg-dark btn-block btn-sm btn-labeled btn-labeled-right pr-5\"\n                                        style={{ textTransform: \"inherit\" }}\n                                        onClick={() => this.setState({\n                                            date_from: { value: '' }, date_to: { value: '' },\n                                            patient_checkbox: false,\n                                            doctor_checkbox: false,\n                                        })}>\n                                        <b><i className=\"icon-reset\"></i></b>\n                                                Reset filters\n                                            </button>\n                                </div>\n                                <div className={`col-lg-3 d-flex align-items-end mb-3 pb-1`}>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5 btn-block\"\n                                        style={{ textTransform: \"inherit\" }}\n                                        onClick={this.refresh_button_click}>\n                                        <b><i className=\"icon-reset\"></i></b>\n                                                Refresh\n                                            </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={`col-lg-3 d-flex align-items-end mb-3 pb-1`}>\n                            <button\n                                type=\"button\"\n                                className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5 btn-block \"\n                                style={{ textTransform: \"inherit\" }}\n                                onClick={this.on_search_click}>\n                                <b><i className=\"icon-search4\"></i></b>\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                { this.state.loading_status ? loading : table}\n                <UserPreviewModal visibility={this.state.user_preview_modal_visibility}\n                    modal_props={this.state.user_modal_props}\n                    on_click_back_drop={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })}\n                    on_click_cancel={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })} />\n            </Fragment >\n        )\n    }\n}\nexport default connect(null, { set_active_page })(withRouter(AllAppointments));","import React, { useState, useEffect } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport * as RC from 'router/constants';\nimport ProtectedRoute from 'router/protected_routes';\nimport { ToastContainer } from 'react-toastify';\nimport * as LAYOUTS from 'layouts';\nimport Container from 'components/container';\n\nconst LoginRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={props => !localStorage.getItem('user') ?\n                <Component {...props} /> :\n                <Redirect to={{ pathname: RC.BASE_URL, state: { from: props.location } }} />\n            }\n        />\n    );\n}\n\nconst NO_CONTAINER_PATHS = [\n    RC.LOGIN_URL,\n    RC.REGISTER_URL,\n    RC.FORGOT_PASSWORD,\n]\n\nfunction RouterX() {\n    const location = useLocation();\n    const [state_container, set_state_container] = useState(false);\n\n    useEffect(() => {\n        if (NO_CONTAINER_PATHS.includes(location.pathname)) {\n            set_state_container(false);\n        }\n        else {\n            if (localStorage.getItem('user')){\n                set_state_container(true);\n            }\n            else {\n                set_state_container(false);\n            }\n        }\n\n    }, [location])\n    return (\n        <Container container_type={state_container}>\n            <Switch>\n                <LoginRoute exact path={RC.LOGIN_URL} component={LAYOUTS.Login} />\n                <Route exact path={RC.REGISTER_URL} component={LAYOUTS.Register} />\n                <Route exact path={RC.FORGOT_PASSWORD} component={LAYOUTS.ForgotPassword} />\n                <ProtectedRoute exact path={RC.BASE_URL} component={LAYOUTS.Home} />\n                <ProtectedRoute exact path={RC.PROFILE} component={LAYOUTS.Profile} />\n                <ProtectedRoute exact path={RC.RECEPTION_TODAYSPATIIENT} component={LAYOUTS.TodaysPatient} />\n                <ProtectedRoute exact path={RC.RECEPTION_VISITS} component={LAYOUTS.AllAppointments} />\n                <ProtectedRoute exact path={RC.RECEPTION_PROCEDURES} component={LAYOUTS.Procedures} />\n                <ProtectedRoute exact path={RC.SEARCH_DOCTORS} component={LAYOUTS.Doctors} />\n                <ProtectedRoute exact path={RC.PAYMENTS} component={LAYOUTS.Payments} />\n                <ProtectedRoute exact path={RC.SETTINGS} component={LAYOUTS.Settings} />\n            </Switch>\n            <ToastContainer hideProgressBar />\n        </Container>\n    );\n}\nexport default RouterX;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport RouterX from './router';\n\nfunction App() {\n\tconsole.log('app.js working')\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<RouterX />\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from 'redux/store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/LOGO.21ff2f94.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.59e6f5b8.jpg\";"],"sourceRoot":""}