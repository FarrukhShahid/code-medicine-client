{"version":3,"sources":["resources/images/placeholder.jpg","shared/container/header/iffatanwarmedicalcomplex.png","resources/images/LOGO.png","serviceWorker.js","shared/rest_end_points.js","actions/index.js","shared/action_constants.js","shared/customs/loading/loading.js","shared/customs/Skeletons/index.js","shared/protected_routes.js","shared/router_constants.js","shared/container/header/header.js","shared/container/footer/footer.js","shared/container/left_sidebar/left_sidebar.js","shared/container/page_header/page_header.js","shared/container/container.js","components/home/home.js","shared/customs/inputfield/inputfield.js","components/sigin_signup/login/login.js","shared/constant_data.js","components/sigin_signup/register/register.js","components/profile/profile.js","components/reception/todays_patient/procedures/procedure_item.js","components/reception/todays_patient/procedures/procedure_modal.js","components/reception/todays_patient/invoice/invoice.js","components/reception/todays_patient/appointment/update_appointment_modal.js","components/reception/todays_patient/todays_patient_row.js","shared/customs/user/user.js","shared/modals/userpreviewmodal.js","shared/modals/newusermodal.js","components/reception/todays_patient/appointment/new_appointment_modal.js","components/reception/todays_patient/todays_patient.js","shared/customs/tablerows/tablerow.js","components/reception/visits/visits.js","components/sigin_signup/forgot_password/forgot_password.js","components/init.js","reducers/index.js","reducers/reducer_notify.js","reducers/reducer_sidebar_controls.js","reducers/reducer_active_user.js","reducers/reducer_active_page.js","reducers/reducer_todays_patients.js","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ROOT_URL","BASE_URL","USERS_BASE_URL","USERS_LOGIN","USERS_CREATE","USERS_UPDATE","USERS_SEARCH_BY_ID","USERS_SEARCH_BY_TOKEN","USERS_SEARCH_BY_CREDENTIALS","ADMIN_BASE_URL","ADMIN_CREATE_PATIENT","APPOINTMENTS_BASE_URL","APPOINTMENTS_CREATE","APPOINTMENTS_UPDATE","APPOINTMENTS_SEARCH","APPOINTMENTS_SEARCH_TODAY","APPOINTMENTS_CHARGES","APPOINTMENTS_INVOICE","PROCEDURES_BASE_URL","PROCEDURES_CREATE","PROCEDURES_UPDATE","PROCEDURES_DELETE","PROCEDURES_SEARCH_BY_APPOINTMENT_ID","BASE_USERS_URL","REGISTER_USER_REQUEST","LOGOUT_USER_REQUEST","PROFILE_USER_REQUEST","BASE_RECEPTION_URL","SEARCH_APPOINTMENTS_URL","SEARCH_APPOINTMENT_BY_ID","GET_APPOINTMENT_CHARGES","UPDATE_APPOINTMENT_CHARGES","CHECKOUT_APPOINTMENT","BASE_PROCEDURES_URL","BASE_PROFITS_URL","BASE_DOCTORDETAILS__URL","notify","type","title","message","payload","set_active_user","details","set_active_page","load_todays_appointments","date","dispatch","Axios","get","Date","res","loading","err","data","clear_todays_appointments","interceptors","request","use","user","localStorage","getItem","Loading","props","custom","color","height","size","width","timeout","className","Skeletons","highlightColor","circle","count","ProtectedRoutes","authorize_token","token","_","isEmpty","active_user","clear","check_for_token","this","Component","component","__html","render","to","connect","Header","on_sidebar_control_button_click","left_sidebar","left_sidebar_controls","on_logout_button_click","history","push","onClick","data-toggle","data-target","id","src","IAMC_detail","alt","style","maxHeight","status","withRouter","Footer","Left_sidebar","post","toString","on_item_click","e","target","search_toggle","setState","chat_toggle","reception_toggle","current_page","first_name_first_letter","first_name","charAt","toUpperCase","first_name_rest","length","substring","last_name_first_letter","last_name","last_name_rest","data-submenu-title","display","Page_header","headers","active_page","map","item","i","key","alert","NOPICTURE","Container","container_type","user_auth_check_interval","header","footer","page_header","normal_flow_container","innerWidth","children","centered_elements","Home","order_data","patients_per_day_raw_data","patients_per_day","temp","current_patient","moment","_id","month","day","year","format","numenator","patient_attended","denomenator","patient_left","doctors","total_attended","total_patients_attended","total_appointments","total_patients_appointments_registered","checkout_percentage","Math","ceil","current_date_time","loading_status","sort","compare_dates","routes","rc","socket","socketIOClient","on","a","b","disconnect","option_patients_attended_percentage","tooltip","formatter","series","detail","value","option_patients_attended_history","trigger","position","pt","xAxis","boundaryGap","yAxis","dataZoom","start","end","handleIcon","handleSize","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","name","symbol","itemStyle","areaStyle","echarts","LinearGradient","offset","option_procedures","legend","orient","left","radius","avoidLabelOverlap","label","normal","show","emphasis","textStyle","fontSize","fontWeight","labelLine","option","axisPointer","grid","right","bottom","containLabel","Inputfield","options","_label","label_tag","_input_type","input_type","_placeholder","placeholder","_icon","icon_class","_on_change","on_text_change_listener","_value","default_value","_field_type","field_type","_custom_classes","custom_classes","_disabled","disabled","_size","input_label","input_field_type","onChange","text_area_field_type","rows","cols","select_field_type","isClearable","components","ValueContainer","menuPosition","onInputChange","on_selected_change","_date_format","date_format","_time_format","time_format","date_time_field_type","inputProps","input","dateFormat","timeFormat","closeOnSelect","render_field","custom_field","Login","on_text_field_change","email","password","remember_me_option","checked","__check_hard_constraints","on_submit","preventDefault","trim","remember_me","setItem","response","view","username_password","remember_me_reset_password","defaultChecked","method","onSubmit","textTransform","BLOOD_GROUPS_OPTIONS","GENDER_OPTIONS","ROLES_OPTIONS","PATIENT_VISIT_STATUSES","Register","cnic","phone_number","verify_password","address","on_date_of_birth_change","dob","configured_date","on_selected_changed","blood_group","gender","role","check_input","required","only_alpha","only_numbers","alphabets","numbers","check_hard_constraints","include","length_check","val","includes","next_button_click","back_button_click","role_select_modal_visibility","loader","to_render_page","name_and_email_and_phone","password_and_verification","date_of_birth_and_cnic_address","role_gender_and_blood_group","classNamePrefix","makeAnimated","action","Profile","request_update","put","on_click_update","date_of_birth","register_date","on_text_changed","actor","user_blood_group","user_gender","previous_payload","selection_value_container","NO_PICTURE","on_user_date_of_birth_change","ProcedureItem","handle_change","description_text_input","prev_description","parseInt","charges_text_input","prev_fee","discount_text_input","prev_discount","edited","on_save_click","save_click_loading","appointment_id","fee","discount","description","save_opp","index","procedure_id","on_delete_click","delete_opp","delete","procedure_description","procedure_fee","procedure_discount","save_button_classes","update_button_classes","defaultValue","border","ProcedureModal","save_procedure","procedures_list","handle_total_values","delete_procedure","pop","splice","add_procedure_click","filter","add_procedure","that","procedure_total","t_total","consultancy_fee_text_input","t_discount","parseFloat","t_followup","follow_up_text_input","total","minimum_payable","show_procedures","handle_close_modal","paid_text_input","cancelProcedureModal","handle_save_button_click","consultancy","follow_up","paid","handle_checkout_button_click","setTimeout","scrollToBottom","last_element","scrollIntoView","behavior","calculate_balance","new_props","new_procedure_visibility","prev_procedure_list","prev_list","visible","onClickBackdrop","procedure_backDrop","fade","dialogClassName","overflowY","overflowX","float","ref","el","update_appointment","new_item","Invoice","get_total","appointment_charges","procedures","new_state","modal_visibility","table_header","LOGO","patient","doctor","procedures_table","appointment_procedures","appointment_charges_table","close_modal","componentRef","content","UpdateAppointmentModal","populate_patients","string","render_users","patients","reference","patient_ref","populate_doctors","doctor_ref","val_patient","appointment_patient","patient_select_value","val_doctor","appointment_doctor","doctor_select_value","appointment_reason","on_apointment_date_change","appointment_date","on_apointment_time_change","appointment_time","visit_id","doctor_id","appointment_description","close","reason","utc","time","_data","_url","_method","query","res_users","temp_users","t_user","toLowerCase","add_appointment_modal_body","menuPlacement","isDisabled","styles","container","base","backgroundColor","padding","borderRadius","strictParsing","visibility","TodaysPatientRow","toggle_row","toggle","toggle_icon","view_user","open_user_view_modal","render_read_only_cols","charges","Popup","open_procedure_modal","row_data","flowing","invoice","open_invoice_modal","edit","update_appointment_modal_visibility","follow_ups","verticalAlign","appointment_time_difference_from_now","appointment_status","info","is_paid","render_hidden_elements","hidden_data","render_hidden_header_elements","hidden_header_elements","str","close_update_appointment_modal","open_update_appointment_modal","call_back_update_appointment_modal","hidden_header_color","col_span","fromNow","columns","setInterval","colSpan","Collapse","isOpen","call_back","User","calculate_age","dob1","today","birthDate","age_now","getFullYear","m","getMonth","getDate","text_size","icon_size","button_size","heading_size","store","phone","icon","text","UserPreviewModal","handle_on_click_back_drop","on_click_back_drop","modal_props","NewUserModal","user_first_name","user_last_name","user_cnic","user_phone_number","user_email","user_address","user_dob","user_role","admin_id","add_user_modal_body","NewAppointmentModal","open_new_patient_modal","new_patient_modal_visibility","close_new_patient_modal","call_back_new_patient_modal","bind_function","todays_patient","Todayspatient","populate_patient","search_status","search_doctor","search_patient","request_user","user_preview_modal_visibility","user_id","user_modal_props","renderDataInRows","booking","openProcedureModalHandler","openInvoiceModalHandler","procedure_visibility","procedure_appointment_id","invoiceVisitId","closeProcedureModalHandler","invoiceVisitIdHandler","UpdateProcedureListHandler","updateProcedureList","prevProcedureList","open_new_appointment_modal","new_appointment_modal_visibility","object","invoice_modal_visibility","appointment_invoice_id","closeInvoiceModalHandler","close_new_appointment_modal","call_back_new_appointment_modal","set_filters","filtered_data","search_with_patients","search_with_doctors","search_with_status","reset_check","todays_date_change","search_date","invoice_data","app_date","getTime","getTimezoneOffset","toISOString","table","marginBottom","Menu","filters","on_click_cancel","TableRow","Object","keys","Visits","search_patient_id","search_doctor_id","patient_list","doctor_list","populate_appointments","res_visits","appointments","total_records_on_this_page","total_pages","patient_checkbox","doctor_checkbox","on_from_date_change","date_from","on_to_date_change","date_to","on_search_click","page_number","to_date","from_date","patient_id","page","refresh_button_click","previous_query","date_of_booking","time_of_booking","patient_name","visit_reason","maxWidth","doctor_name","visit_status","visit_total_charges","total_charges","on_previous_button_click","to_request_page_number","updated","on_page_number_click","innerHTML","on_next_button_click","subtract","Array","fill","useState","set_email","set_error","on_change","Init","exact","path","ForgotPassword","hideProgressBar","root_reducer","combineReducers","toast","POSITION","TOP_RIGHT","pauseOnFocusLoss","success","warn","undefined","createStore","reducers","composeWithDevTools","applyMiddleware","promise","thunk","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ada040f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.59e6f5b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iffatanwarmedicalcomplex.36cda954.png\";","module.exports = __webpack_public_path__ + \"static/media/LOGO.21ff2f94.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const PROTOCOL = 'http';\n// const ADDRESS = 'ec2-13-211-122-241.ap-southeast-2.compute.amazonaws.com'\nconst ADDRESS = '18.188.119.132'\n// const ADDRESS = 'localhost'\nconst PORT = 6969;\n\n// development port\n// export const ROOT_URL = `${PROTOCOL}://${ADDRESS}:${PORT}`;\n// production url\nexport const ROOT_URL = `${PROTOCOL}://${ADDRESS}`;\n\nexport const BASE_URL = `${ROOT_URL}/api`;\n \nexport const USERS_BASE_URL = `${BASE_URL}/users`;\nexport const USERS_LOGIN = `${USERS_BASE_URL}/login`;\nexport const USERS_CREATE = `${USERS_BASE_URL}/register`;\nexport const USERS_UPDATE = `${USERS_BASE_URL}/update`;\nexport const USERS_DELETE = `${USERS_BASE_URL}/delete`;\nexport const USERS_LOGOUT = `${USERS_BASE_URL}/logout`;\nexport const USERS_SEARCH_BY_ID = `${USERS_BASE_URL}/search/id`;\nexport const USERS_SEARCH_BY_TOKEN = `${USERS_BASE_URL}/search/token`;\nexport const USERS_SEARCH_BY_CREDENTIALS = `${USERS_BASE_URL}/search/credentials`;\n \nexport const ADMIN_BASE_URL = `${USERS_BASE_URL}/admin`;\nexport const ADMIN_CREATE_PATIENT = `${ADMIN_BASE_URL}/patient/create`;\nexport const ADMIN_UPDATE_PATIENT = `${ADMIN_BASE_URL}/patient/update`;\nexport const ADMIN_DELETE_PATIENT = `${ADMIN_BASE_URL}/patient/delete`;\nexport const ADMIN_CREATE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/create`;\nexport const ADMIN_UPDATE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/update`;\nexport const ADMIN_DELETE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/delete`;\n\nexport const APPOINTMENTS_BASE_URL = `${BASE_URL}/appointments`;\nexport const APPOINTMENTS_CREATE = `${APPOINTMENTS_BASE_URL}/create`;\nexport const APPOINTMENTS_UPDATE = `${APPOINTMENTS_BASE_URL}/update`;\nexport const APPOINTMENTS_DELETE = `${APPOINTMENTS_BASE_URL}/delete`;\nexport const APPOINTMENTS_SEARCH = `${APPOINTMENTS_BASE_URL}/search`;\nexport const APPOINTMENTS_SEARCH_BY_ID = `${APPOINTMENTS_BASE_URL}/search/id`;\nexport const APPOINTMENTS_SEARCH_TODAY = `${APPOINTMENTS_BASE_URL}/search/today`;\nexport const APPOINTMENTS_CHARGES = `${APPOINTMENTS_BASE_URL}/charges`\nexport const APPOINTMENTS_CHARGES_UPDATE = `${APPOINTMENTS_CHARGES}/update`\nexport const APPOINTMENTS_INVOICE = `${APPOINTMENTS_BASE_URL}/invoice`\nexport const APPOINTMENTS_CHECKOUT = `${APPOINTMENTS_BASE_URL}/checkout`\n \nexport const PROCEDURES_BASE_URL = `${BASE_URL}/procedures`;\nexport const PROCEDURES_CREATE = `${PROCEDURES_BASE_URL}/create`;\nexport const PROCEDURES_UPDATE = `${PROCEDURES_BASE_URL}/update`;\nexport const PROCEDURES_DELETE = `${PROCEDURES_BASE_URL}/delete`;\nexport const PROCEDURES_SEARCH_BY_ID = `${PROCEDURES_BASE_URL}/search/id`;\nexport const PROCEDURES_SEARCH_BY_APPOINTMENT_ID = `${PROCEDURES_BASE_URL}/appointment/id`;\n\nexport const DOCTORDETAILS_BASE_URL = `${BASE_URL}/doctor/details`;\nexport const DOCTORDETAILS_CREATE = `/create`;\nexport const DOCTORDETAILS_UPDATE = `/update`;\nexport const DOCTORDETAILS_DELETE = `/delete`;\nexport const DOCTORDETAILS_SEARCH_BY_ID = `/search/id`;\n\nexport const BRANCHES_BASE_URL = `${BASE_URL}/branches`;\nexport const BRANCHES_CREATE = `/create`;\nexport const BRANCHES_UPDATE = `/update`;\nexport const BRANCHES_DELETE = `/delete`;\nexport const BRANCHES_SEARCH_BY_ID = `/search/id`;\n\n// --------------------------------------------------------------------------------------------------------------------\n\n\n// All user related end points\nexport const BASE_USERS_URL = `${BASE_URL}/users`;\nexport const REGISTER_USER_REQUEST = `${BASE_USERS_URL}/register`;\nexport const REGISTER_USER_REQUEST_BY_ADMIN = `${REGISTER_USER_REQUEST}/admin`;\nexport const LOGIN_USER_REQUEST = `${BASE_USERS_URL}/login`;\nexport const LOGOUT_USER_REQUEST = `${BASE_USERS_URL}/logout`;\nexport const PROFILE_USER_REQUEST = `${BASE_USERS_URL}/profile`;\nexport const PROFILE_UPDATE_USER_REQUEST = `${PROFILE_USER_REQUEST}/update`;\nexport const SEARCH_USER_REQUEST = `${BASE_USERS_URL}/search`;\nexport const SEARCH_BY_ID_USER_REQUEST = `${BASE_USERS_URL}/search/id`;\n\n// All visits/reception related end points\n// export const BASE_RECEPTION_URL = `${BASE_URL}/visits`;\n// export const NEW_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/new`;\n// export const UPDATE_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/update`\n// export const SEARCH_APPOINTMENTS_URL = `${BASE_RECEPTION_URL}/search`;\n// export const SEARCH_TODAYS_APPOINTMENTS_URL = `${SEARCH_APPOINTMENTS_URL}/today`;\n\nexport const BASE_RECEPTION_URL = `${BASE_URL}/appointments`;\nexport const NEW_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/create`;\nexport const UPDATE_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/update`\nexport const SEARCH_APPOINTMENTS_URL = `${BASE_RECEPTION_URL}/search`;\nexport const SEARCH_APPOINTMENT_BY_ID = `${SEARCH_APPOINTMENTS_URL}/id`;\nexport const SEARCH_TODAYS_APPOINTMENTS_URL = `${SEARCH_APPOINTMENTS_URL}/today`;\nexport const GET_APPOINTMENT_CHARGES = `${BASE_RECEPTION_URL}/charges`;\nexport const UPDATE_APPOINTMENT_CHARGES = `${GET_APPOINTMENT_CHARGES}/update`;\nexport const CHECKOUT_APPOINTMENT = `${BASE_RECEPTION_URL}/checkout`;\nexport const GET_INVOICE_DATA = `${BASE_RECEPTION_URL}/invoice`;\n\n// All procedure related end points\nexport const BASE_PROCEDURES_URL = `${BASE_RECEPTION_URL}/procedures`;\nexport const NEW_PROCEDURES_URL = `${BASE_PROCEDURES_URL}/create`;\nexport const UPDATE_PROCEDURE_URL = `${BASE_PROCEDURES_URL}/update`;\nexport const DELETE_PROCEDURE_URL = `${BASE_PROCEDURES_URL}/delete`;\n\n// All profit related end points\nexport const BASE_PROFITS_URL = `${BASE_URL}/profits`;\nexport const GET_PROFITS_BY_DOCTOR_ID = `${BASE_PROFITS_URL}/search/visit/id`;\nexport const PROFITS_UPDATE = `${BASE_PROFITS_URL}/update`;\n\n// All profit related end points\nexport const BASE_DOCTORDETAILS__URL = `${BASE_URL}/doctordetails`;\nexport const DOCTORDETAILS_SEARCH = `${BASE_DOCTORDETAILS__URL}/search`;\n","import { NOTIFY, LEFT_SIDEBAR, \n    ACTIVE_USER, \n    ACTIVE_PAGE, \n    TODAYS_PATIENT, \n    TODAYS_PATIENT_CLEAR, \n    TODAYS_PATIENT_APPOINTMENT_UPDATE } from \"../shared/action_constants\";\nimport Axios from \"axios\";\nimport { SEARCH_TODAYS_APPOINTMENTS_URL, SEARCH_APPOINTMENT_BY_ID, APPOINTMENTS_SEARCH_TODAY } from \"../shared/rest_end_points\";\n\nAxios.interceptors.request.use(request => {\n    var user = localStorage.getItem('user');\n    if (user) {\n        request['headers']['code-medicine'] = `${user}`;\n    }\n    return request\n})\n\nexport function notify(type,title,message){\n    return {\n        type: NOTIFY,\n        payload: {\n            type: type,\n            title: title,\n            message: message\n        }\n    }\n    \n}\n\nexport function left_sidebar_controls(status){\n    return {\n        type: LEFT_SIDEBAR,\n        payload: status\n    }\n}\n\nexport function set_active_user(details){\n    return {\n        type: ACTIVE_USER,\n        payload: details\n    }\n}\n\nexport function set_active_page(details){\n    return {\n        type: ACTIVE_PAGE,\n        payload: details\n    }\n}\n\nexport function load_todays_appointments(date){\n    return function(dispatch){\n        // let d = new Date();\n        // d = new Date(d.getTime() - d.getTimezoneOffset() * 60000)\n        Axios.get(`${APPOINTMENTS_SEARCH_TODAY}?tag=${new Date(date)}`)\n        .then(res => {\n            dispatch({\n                type: TODAYS_PATIENT,\n                payload: res,\n                loading: false\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: TODAYS_PATIENT,\n                payload: {\n                    data: {\n                        message: err, \n                        loading: false\n                    }\n                }\n            })\n        })\n    }\n}\n\nexport function clear_todays_appointments(){\n    return {\n        type: TODAYS_PATIENT_CLEAR\n    }\n}\n\nexport function update_appointment(appointment_id){\n    const response = Axios.get(`${SEARCH_APPOINTMENT_BY_ID}?tag=${appointment_id}`)\n    return {\n        type: TODAYS_PATIENT_APPOINTMENT_UPDATE,\n        payload: {\n            id: appointment_id,\n            new_item: response.data\n        }\n    }\n}","export const NOTIFY = 'notify';\nexport const LEFT_SIDEBAR = 'left_sidebar';\nexport const ACTIVE_USER = 'active_user';\nexport const ACTIVE_PAGE = 'active_page';\nexport const TODAYS_PATIENT = 'todays_patients';\nexport const TODAYS_PATIENT_CLEAR = 'clear_todays_patients';\nexport const TODAYS_PATIENT_APPOINTMENT_UPDATE = 'update_single_record';","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Loading(props) {\r\n    const custom = props.custom\r\n    return (\r\n        props.custom? <Loader type=\"Rings\" color={custom.color} height={props.size} width={props.size} timeout={custom.timeout} />:\r\n        <div className=\"d-flex justify-content-center\">\r\n            <Loader\r\n                type=\"Rings\"\r\n                color=\"#00BFFF\"\r\n                height={props.size}\r\n                width={props.size}\r\n                timeout={120000} //120 secs\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React from 'react'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nfunction Skeletons(props) {\n    return (\n        <div className={`virtual-body navbar-top`}>\n            <div className=\"navbar navbar-expand-md navbar-dark fixed-top\">\n                <div className=\"navbar-brand\">\n                    <p className={`my-2`}>Cancel</p>\n                </div>\n            </div>\n            <div className=\"page-content\">\n                <SkeletonTheme color=\"#292b2c\" highlightColor=\"#4F5950\">\n                    <div className=\"sidebar sidebar-dark sidebar-main sidebar-fixed sidebar-expand-md px-2\" >\n                        <div className=\"d-flex justify-content-center\">\n                            <Skeleton className=\"my-1\" circle={true} height={120} width={120} />\n                        </div>\n                        <Skeleton className=\"my-2\" count={20} height={40} />\n                    </div>\n\n                </SkeletonTheme>\n\n                <div className=\"content-wrapper\">\n                    <div className=\"page-header page-header-light\">\n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-2\" count={1} height={40} />\n                        </SkeletonTheme>\n                    </div>\n\n                    <div className={`content`}>\n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-2\" height={150} count={1} />\n                            <div className=\"row\">\n                                <div className=\"col-lg-8\">\n                                    <Skeleton className=\"my-2\" height={300} count={3} />\n                                </div>\n                                <div className=\"col-lg-4\">\n                                    <Skeleton className=\"my-2\" height={300} count={4} />\n                                </div>\n                            </div>\n                        </SkeletonTheme>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Skeletons;","import React, { Component } from 'react';\r\nimport { LOGIN_URL } from './router_constants';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { PROFILE_USER_REQUEST, USERS_SEARCH_BY_TOKEN } from './rest_end_points';\r\nimport {set_active_user} from '../actions'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport _ from 'lodash'\r\nimport Loading from './customs/loading/loading';\r\nimport Skeletons from './customs/Skeletons';\r\n\r\nclass ProtectedRoutes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.authorize_token(localStorage.getItem('user'))\r\n    }\r\n\r\n    authorize_token = (token) => {\r\n        if (_.isEmpty(this.props.active_user)){\r\n            if (token !== null){\r\n                Axios.get(`${USERS_SEARCH_BY_TOKEN}?tag=${token}`).then(res => {\r\n                    this.props.set_active_user(res.data['payload'])\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    localStorage.clear()\r\n                    this.props.set_active_user({})\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    check_for_token = () => {\r\n        return localStorage.getItem('user') !== null? true:false\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...props } = this.props\r\n\r\n        let __html = <Skeletons />//<div className=\"d-flex align-items-center justify-content-center\" style={{height: '90vh'}}><Loading size={150}/></div>;\r\n\r\n        /* if user is logged in */\r\n        if (this.check_for_token()) {\r\n            /* first fetch the user details from server */\r\n            if (!_.isEmpty(this.props.active_user)) {\r\n                __html = <Route {...props} render={props => <Component {...props} />} />\r\n            }\r\n        }\r\n        else {\r\n            //console.log('invalid token');\r\n            __html = <Route {...props} render={props => <Redirect to={LOGIN_URL} />} />\r\n        }\r\n\r\n        return __html;\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        active_user: state.active_user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {set_active_user})(ProtectedRoutes)","export const BASE_URL = '/';\nexport const LOGIN_URL = '/login';\nexport const REGISTER_URL = '/register';\nexport const PROFILE = '/profile';\nexport const RECEPTION_TODAYSPATIIENT = '/todayspatient';\nexport const RECEPTION_VISITS = '/visits';\nexport const FORGOT_PASSWORD = '/forgot_password';","import React, { Component } from 'react';\nimport { LOGIN_URL } from '../../router_constants';\n// import Logo_light from './logo_main.png';\n// import IAMC from './IAMC.png';\nimport IAMC_detail from \"./iffatanwarmedicalcomplex.png\";\nimport { connect } from \"react-redux\";\nimport { left_sidebar_controls, set_active_user} from '../../../actions';\nimport { Link, withRouter } from 'react-router-dom';\n// import NOPICTURE from '../../resources/images/placeholder.jpg'\n\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        };\n    }\n\n    on_sidebar_control_button_click = () => {\n        if (this.props.left_sidebar === true) {\n            this.props.left_sidebar_controls(false)\n        }\n        else {\n            this.props.left_sidebar_controls(true)\n        }\n    }\n\n    on_logout_button_click = () => {\n        localStorage.clear()\n        this.props.set_active_user({})\n        this.props.history.push(LOGIN_URL)\n    }\n\n    render() {\n        return (\n\n            <div className=\"navbar navbar-expand-md navbar-dark fixed-top\">\n                <div className=\"navbar-brand\">\n                    <Link onClick={this.on_sidebar_control_button_click} to={\"#\"}\n                        className=\"d-inline py-3 text-white\">\n                        <i className=\"icon-paragraph-justify2\"></i>\n                    </Link>\n                    {/* <img \n                        className=\"d-inline ml-3\"  src={Logo_light} alt=\"\" /> */}\n                    \n                    {/* <img className=\"d-inline float-right m-0\" src={Logo_light} alt=\"\" /> */}\n                </div>\n\n                <div className=\"d-md-none\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-mobile\">\n                        <i className=\"icon-tree5\"></i>\n                    </button>\n                    <button className=\"navbar-toggler sidebar-mobile-main-toggle\" \n                        onClick={this.on_sidebar_control_button_click} \n                        type=\"button\">\n                        <i className=\"icon-paragraph-justify3\"></i>\n                    </button>\n                </div>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbar-mobile\">\n                    <div className={`container-fluid`}>\n                        <div className={`row`}>\n                            <div className={`col text-right`}>\n                                <img className=\"border-left-light\" src={IAMC_detail} alt=\"\" style={{maxHeight: '30px'}}/>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    {/* <ul className=\"navbar-nav\"> */}\n                        \n                        {/* <li className=\"nav-item\">\n                            <Link onClick={this.on_sidebar_control_button_click} to={\"#\"}\n                                className=\"navbar-nav-link sidebar-control sidebar-main-toggle d-none d-md-block\">\n                                <i className=\"icon-transmission\"></i>\n                            </Link>\n                        </li> */}\n\n                        {/* <li className=\"nav-item dropdown\">\n                            <Link to={BASE_URL} className=\"navbar-nav-link dropdown-toggle caret-0\" data-toggle=\"dropdown\">\n                                <i className=\"icon-git-compare\"></i>\n                                <span className=\"d-md-none ml-2\">Git updates</span>\n                                <span className=\"badge badge-pill bg-warning-400 ml-auto ml-md-0\">9</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu dropdown-content wmin-md-350\">\n                                <div className=\"dropdown-content-header\">\n                                    <span className=\"font-weight-semibold\">Git updates</span>\n                                    <Link to={BASE_URL} className=\"text-default\"><i className=\"icon-sync\"></i></Link>\n                                </div>\n\n                                <div className=\"dropdown-content-body dropdown-scrollable\">\n                                    <ul className=\"media-list\">\n                                        <li className=\"media\">\n                                            <div className=\"mr-3\">\n                                                <Link to={BASE_URL} className=\"btn bg-transparent border-primary text-primary rounded-round border-2 btn-icon\"><i className=\"icon-git-pull-request\"></i></Link>\n                                            </div>\n\n                                            <div className=\"media-body\">\n                                                Drop the IE <Link to={BASE_URL}>specific hacks</Link> for temporal inputs\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-muted font-size-sm\">4 minutes ago</div>\n                                            </div>\n                                        </li>\n\n                                        <li className=\"media\">\n                                            <div className=\"mr-3\">\n                                                <Link to={BASE_URL} className=\"btn bg-transparent border-warning text-warning rounded-round border-2 btn-icon\"><i className=\"icon-git-commit\"></i></Link>\n                                            </div>\n\n                                            <div className=\"media-body\">\n                                                Add full font overrides for popovers and tooltips\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-muted font-size-sm\">36 minutes ago</div>\n                                            </div>\n                                        </li>\n\n                                        <li className=\"media\">\n                                            <div className=\"mr-3\">\n                                                <Link to={BASE_URL} className=\"btn bg-transparent border-info text-info rounded-round border-2 btn-icon\"><i className=\"icon-git-branch\"></i></Link>\n                                            </div>\n\n                                            <div className=\"media-body\">\n                                                <Link to={BASE_URL}>Chris Arney</Link> created a new <span className=\"font-weight-semibold\">Design</span> branch\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-muted font-size-sm\">2 hours ago</div>\n                                            </div>\n                                        </li>\n\n                                        <li className=\"media\">\n                                            <div className=\"mr-3\">\n                                                <Link to={BASE_URL} className=\"btn bg-transparent border-success text-success rounded-round border-2 btn-icon\"><i className=\"icon-git-merge\"></i></Link>\n                                            </div>\n\n                                            <div className=\"media-body\">\n                                                <Link to={BASE_URL}>Eugene Kopyov</Link> merged <span className=\"font-weight-semibold\">Master</span> and <span className=\"font-weight-semibold\">Dev</span> branches\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-muted font-size-sm\">Dec 18, 18:36</div>\n                                            </div>\n                                        </li>\n\n                                        <li className=\"media\">\n                                            <div className=\"mr-3\">\n                                                <Link to={BASE_URL} className=\"btn bg-transparent border-primary text-primary rounded-round border-2 btn-icon\"><i className=\"icon-git-pull-request\"></i></Link>\n                                            </div>\n\n                                            <div className=\"media-body\">\n                                                Have Carousel ignore keyboard events\n\t\t\t\t\t\t\t\t\t\t        <div className=\"text-muted font-size-sm\">Dec 12, 05:46</div>\n                                            </div>\n                                        </li>\n                                    </ul>\n                                </div>\n\n                                <div className=\"dropdown-content-footer bg-light\">\n                                    <Link to={BASE_URL} className=\"text-grey mr-auto\">All updates</Link>\n                                    <div>\n                                        <Link to={BASE_URL} className=\"text-grey\" data-popup=\"tooltip\" title=\"Mark all as read\"><i className=\"icon-radio-unchecked\"></i></Link>\n                                        <Link to={BASE_URL} className=\"text-grey ml-2\" data-popup=\"tooltip\" title=\"Bug tracker\"><i className=\"icon-bug2\"></i></Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </li> */}\n                    {/* </ul>s */}\n\n                    <span className=\"navbar-text ml-md-3 mr-md-auto\">\n                        <span className=\"badge bg-transparent\"></span>\n                    </span>\n\n                    {/* <ul className=\"navbar-nav\">\n                        <li className=\"nav-item dropdown dropdown-user\">\n                            <Link to={`#`} className=\"navbar-nav-link dropdown-toggle\" data-toggle=\"dropdown\">\n                                <img src={NOPICTURE} className=\"rounded-circle\" alt=\"\" />\n                                <span>{this.props.active_user['first_name']}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu dropdown-menu-right\">\n                                <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                                <Link to={`#`} className=\"dropdown-item\"><i className=\"icon-comment-discussion\"></i> Messages <span className=\"badge badge-pill bg-blue ml-auto\">58</span></Link>\n                                <div className=\"dropdown-divider\"></div>\n                                <Link onClick={this.on_logout_button_click} to={LOGIN_URL} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                            </div>\n                        </li>\n                    </ul> */}\n                </div>\n            </div>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        left_sidebar: state.left_sidebar,\n        active_user: state.active_user\n    }\n}\nexport default connect(map_state_to_props, { left_sidebar_controls, set_active_user })(withRouter(Header));","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <div className=\"\"></div>\n        );\n    }\n}\nexport default Footer;","import React, { Component } from 'react';\nimport { BASE_URL, LOGIN_URL, RECEPTION_TODAYSPATIIENT, RECEPTION_VISITS } from '../../router_constants';\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { set_active_user,notify } from '../../../actions';\nimport '../../customs/Animations/animations.css';\nimport { LOGOUT_USER_REQUEST } from '../../rest_end_points';\nimport Axios from 'axios';\nimport './left_sidebar.css'\n\nclass Left_sidebar extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_toggle: '',\n            chat_toggle: '',\n            reception_toggle: '',\n            current_page: 'Home'\n        }\n    }\n    componentDidMount(){\n        // console.log('my user',this.props.active_user);\n    }\n\n    on_logout_button_click = () => {\n        const payload = {\n            token: localStorage.getItem('user')\n        }\n        Axios.post(LOGOUT_USER_REQUEST, payload).then(res => {\n            if (res.data.status === true){\n                localStorage.clear()\n                // this.props.set_active_user(null)\n                this.props.history.push(LOGIN_URL)\n                \n                this.props.notify('success', '', res.data.message)\n            }\n            else{\n                this.props.notify('error', '', res.data.message)\n            }\n            \n        })\n        .catch(err => {\n            this.props.notify('error','',err.toString())\n        })\n\n        \n    }\n\n    on_item_click = (e) => {\n        switch(e.target.id){\n            case 'search_link':\n                if (this.state.search_toggle === '')\n                    this.setState({search_toggle: 'nav-item-open'});\n                else\n                    this.setState({search_toggle: ''});\n                break;\n            case 'chat_link':\n                if (this.state.chat_toggle === '')\n                    this.setState({chat_toggle: 'nav-item-open'});\n                else\n                    this.setState({chat_toggle: ''});\n                break;\n            case 'reception_link':\n                if (this.state.reception_toggle === '')\n                    this.setState({reception_toggle: 'nav-item-open'});\n                else\n                    this.setState({reception_toggle: ''});\n                break;\n            default:\n                break;\n        }\n    } \n    render() {\n        const first_name_first_letter = this.props.active_user.first_name.charAt(0).toUpperCase()\n        const first_name_rest = this.props.active_user.first_name.length > 1? this.props.active_user.first_name.substring(1):''\n        const last_name_first_letter = this.props.active_user.last_name.charAt(0).toUpperCase()\n        const last_name_rest = this.props.active_user.last_name.length > 1? this.props.active_user.last_name.substring(1):''\n        return (\n            <div className=\"sidebar sidebar-dark sidebar-main sidebar-fixed sidebar-expand-md\" >\n\n                <div className=\"sidebar-mobile-toggler text-center\">\n                    <Link to={BASE_URL} className=\"sidebar-mobile-main-toggle\">\n                        <i className=\"icon-arrow-left8\"></i>\n                    </Link>\n                    Menu\n                    <Link to={BASE_URL} className=\"sidebar-mobile-expand\">\n                        <i className=\"icon-screen-full\"></i>\n                        <i className=\"icon-screen-normal\"></i>\n                    </Link>\n                </div>\n\n                <div className=\"sidebar-content\">\n                    <div className=\"sidebar-user background_custom_left_side_bar d-flex align-items-center\" style={{height: '25vh'}}>\n                        <div className=\"card-body\">\n                            <div className=\"media d-flex align-items-center\">\n                                <div className=\"mr-3\">\n                                    {/* <Link to={BASE_URL}>\n                                        <i className=\"icon-user\"></i>\n                                    </Link> */}\n                                    <div className={`img-fluid rounded-circle text-teal-400 bg-light h3 d-flex justify-content-center align-items-center p-2`} \n                                        // src={NO_PICTURE} \n                                        style={{height: '50px', width: '50px'}}>\n                                        {`${first_name_first_letter}${last_name_first_letter}`}\n                                    </div>\n                                </div>\n                                \n\n                                <div className=\"media-body \">\n                                    \n                                    <div className=\"media-title font-weight-semibold \">\n                                        <span className=\"text-shadow\">{`${first_name_first_letter}${first_name_rest} ${last_name_first_letter}${last_name_rest}`}</span>                                 \n                                    </div>\n                                    <div className=\"font-size-xs opacity-50 text-shadow\">\n                                        <i className=\"icon-pin font-size-sm\"></i> &nbsp;Pakistan\n                                    </div>\n                                </div>\n                                {/* settings button in left bar */}\n                                {/* <div className=\"ml-3 align-self-center\">\n                                    <Link to={BASE_URL}  className=\"text-white\"><i className=\"icon-cog3\"></i></Link>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n                    <div className=\"card card-sidebar-mobile\">\n                        <ul className=\"nav nav-sidebar\">\n                            <li className=\"nav-item-header\">\n                                <div className=\"text-uppercase font-size-xs line-height-xs\">\n                                    Main\n                                </div>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link to={BASE_URL} className=\"nav-link\">\n                                    <i className=\"icon-home\"></i>\n                                    <span>Dashboard</span>\n                                </Link>\n                            </li>\n                            <li className={`nav-item nav-item-submenu ${this.state.search_toggle}`}>\n                                <Link className=\"nav-link\" \n                                    to={'#'} \n                                    onClick={this.on_item_click}\n                                    id=\"search_link\">\n                                    <i className=\"icon-search4\"></i>\n                                    <span className=\"\">Search</span>\n                                </Link>\n\n                                <ul className=\"nav nav-group-sub\" \n                                    data-submenu-title=\"Home\"\n                                    style={{display: this.state.search_toggle === ''? 'none':'block'}}>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Patients<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Doctors<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                </ul>\n\n                            </li>\n                            <li className={`nav-item nav-item-submenu ${this.state.reception_toggle}`}>\n                                <Link className=\"nav-link\" \n                                    to={'#'} \n                                    onClick={this.on_item_click}\n                                    id=\"reception_link\">\n                                    <i className=\"icon-user\"></i>\n                                    <span>Reception</span>\n                                </Link>\n\n                                <ul className=\"nav nav-group-sub\" data-submenu-title=\"Reception\"\n                                    style={{display: this.state.reception_toggle === ''? 'none':'block'}}>\n                                    <li className=\"nav-item\"><Link to={RECEPTION_TODAYSPATIIENT} className=\"nav-link active\">Today's Patients</Link></li>\n                                    <li className=\"nav-item\"><Link to={RECEPTION_VISITS} className=\"nav-link\">All appointments</Link></li>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Emergency<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Admissions<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Requests<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                </ul>\n\n                            </li>\n                            <li className={`nav-item nav-item-submenu ${this.state.chat_toggle}`}>\n                                <Link className=\"nav-link\" \n                                    to={'#'} \n                                    onClick={this.on_item_click}\n                                    id=\"chat_link\">\n                                    <i className=\"icon-envelop5\"></i>\n                                    <span className=\"\">Chat</span>\n                                </Link>\n\n                                <ul className=\"nav nav-group-sub\" \n                                    data-submenu-title=\"Home\"\n                                    style={{display: this.state.chat_toggle === ''? 'none':'block'}}>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Messages<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                    <li className=\"nav-item\"><Link to={BASE_URL} className=\"nav-link disabled\">Requests<span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span></Link></li>\n                                </ul>\n\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link\" onClick={this.on_logout_button_click} to={\"#\"}>\n                                    <i className=\"icon-exit3\"></i>\n                                    <span>Logout</span>\n                                </Link>\n                            </li>\n                        </ul>\n                    </div>\n\n\n                </div>\n\n\n            </div >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return { \n        active_user: state.active_user,\n        left_sidebar: state.left_sidebar\n    }\n}\nexport default connect(map_state_to_props,{set_active_user,notify})(withRouter(Left_sidebar));","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { BASE_URL, PROFILE, LOGIN_URL } from '../../router_constants'\nimport NOPICTURE from '../../../resources/images/placeholder.jpg'\nimport { set_active_user, notify } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport { LOGOUT_USER_REQUEST } from '../../rest_end_points'\n\n\n\nclass Page_header extends Component {\n\n    on_logout_button_click = () => {\n\n        Axios.post(LOGOUT_USER_REQUEST, {\n            token: localStorage.getItem('user')\n        }, {\n            headers: { 'code-medicine': localStorage.getItem('user') }\n        }).then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                this.props.set_active_user({})\n                this.props.history.push(LOGIN_URL)\n\n                this.props.notify('success', '', res.data.message)\n            }\n            else {\n                this.props.notify('error', '', res.data.message)\n            }\n\n        })\n            .catch(err => {\n                this.props.notify('error', '', err)\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"page-header page-header-light\">\n                {/* <div className=\"page-header-content header-elements-md-inline\">\n                    <div className=\"page-title d-flex\">\n                        <h4>\n                            <i className=\"icon-arrow-left52 mr-2\"></i> \n                            <span className=\"font-weight-semibold\">Home</span> - Dashboard\n                        </h4>\n                        <Link to={BASE_URL} className=\"header-elements-toggle text-default d-md-none\">\n                            <i className=\"icon-more\"></i>\n                        </Link>\n                    </div>\n\n                    <div className=\"header-elements d-none\">\n                        <div className=\"d-flex justify-content-center\">\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-bars-alt text-primary\"></i>\n                                <span>Statistics</span>\n                            </Link>\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-calculator text-primary\"></i> \n                                <span>Invoices</span>\n                            </Link>\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-calendar5 text-primary\"></i> \n                                <span>Schedule</span>\n                            </Link>\n                        </div>\n                    </div>\n                </div> */}\n\n                <div className=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\n                    <div className=\"d-flex\">\n                        <div className=\"breadcrumb py-0\">\n                            {this.props.active_page !== null ? this.props.active_page.map((item, i) => {\n                                return <Fragment key={i}>{item}</Fragment>\n                            }) : ''}\n                            {/* <Link to=\"index.html\" className=\"breadcrumb-item\">\n                                <i className=\"icon-home2 mr-2\"></i> \n                                Home\n                            </Link>\n                            <span className=\"breadcrumb-item active\">Dashboard</span> */}\n                        </div>\n\n                        <Link to={BASE_URL} className=\"header-elements-toggle text-default d-md-none\">\n                            <i className=\"icon-more\"></i>\n                        </Link>\n                    </div>\n\n                    <div className=\"header-elements d-none\">\n                        <div className=\"breadcrumb justify-content-center py-0\">\n                            <Link to={\"#\"} onClick={() => {\n                                alert(\"Please mail us on codemedicine29@gmail.com\");\n                            }} className=\"breadcrumb-elements-item\">\n                                <i className=\"icon-comment-discussion mr-2\"></i>\n                                Support\n                            </Link>\n\n                            <div className=\"breadcrumb-elements-item dropdown p-0\">\n                                <Link to={`#`} className=\"breadcrumb-elements-item dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <img src={NOPICTURE} style={{ height: 30, width: 30 }} className=\"rounded-circle mr-2\" alt=\"\" />\n                                    <span className={``}>{this.props.active_user.first_name}</span>\n                                </Link>\n\n                                <div className=\"dropdown-menu dropdown-menu-right\">\n                                    <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                                    {/* <Link to={`#`} className=\"dropdown-item\"><i className=\"icon-comment-discussion\"></i> Messages <span className=\"badge badge-pill bg-blue ml-auto\">58</span></Link> */}\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link onClick={this.on_logout_button_click} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                                </div>\n                            </div>\n                            {/* <div className=\"breadcrumb-elements-item dropdown p-0\">\n                                <Link to={BASE_URL} className=\"breadcrumb-elements-item dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <i className=\"icon-gear mr-2\"></i>\n                                    Settings\n                                </Link>\n\n                                <div className=\"dropdown-menu dropdown-menu-right\">\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-user-lock\"></i> \n                                        Account security\n                                    </Link>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-statistics\"></i> \n                                        Analytics\n                                    </Link>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-accessibility\"></i> \n                                        Accessibility\n                                    </Link>\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-gear\"></i> \n                                        All settings\n                                    </Link>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        active_page: state.active_page\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, notify })(withRouter(Page_header));","import React, { Component } from 'react';\nimport Header from './header/header';\nimport Footer from './footer/footer';\nimport Leftsidebar from './left_sidebar/left_sidebar';\nimport Pageheader from './page_header/page_header';\nimport { connect } from \"react-redux\";\n// import Axios from 'axios';\n// import { PROFILE_USER_REQUEST } from '../rest_end_points';\n// import { LOGIN_URL } from '../router_constants';\nimport { withRouter } from 'react-router-dom';\nimport { set_active_user,notify } from '../../actions';\nimport './container.css'\nimport '../customs/Animations/animations.css'\n// import BACKGROUND from '../../resources/images/background_image.jpg'\n\n\nclass Container extends Component {\n    constructor(props){\n        super(props);\n            this.state = {\n                type: this.props.container_type,\n                user_auth_check_interval: null\n            };\n    }\n\n    // componentWillUnmount(){\n    //     clearInterval(this.state.user_auth_check_interval)\n    // }\n\n    componentDidMount() {\n        // if (localStorage.getItem('user') || this.props.active_user){\n        //     this.setState({user_auth_check_interval: setInterval(() => {\n        //         console.log('user',this.props.active_user);\n        //         Axios.get(`${PROFILE_USER_REQUEST}?tag=${localStorage.user}`).then(res => {\n        //             if (!res.data['status']){\n        //                 this.props.history.push(LOGIN_URL)\n        //             }\n        //             else{\n        //                 this.props.set_active_user(res.data['payload'])\n        //             }\n        //         })\n        //     },5000)})\n        // }\n    }\n    render() {\n        var header = ''\n        var footer = ''\n        var left_sidebar = ''\n        var page_header = ''\n\n        switch(this.state.type){\n            case 'login':\n                header = false;\n                footer = false;\n                left_sidebar = false;\n                page_header = false;\n                break;\n            case 'register':\n                header = false;\n                footer = false;\n                left_sidebar = false;\n                page_header = false;\n                break;\n            case 'darmian_me':\n                header = false;\n                footer = false;\n                left_sidebar = false;\n                page_header = false;\n                break;\n            default:\n                header = true;\n                footer = true;\n                left_sidebar = true;\n                page_header = true;\n                break;\n        }\n\n        const normal_flow_container =             \n        <div className={`virtual-body ${header? 'navbar-top':''} ${this.props.left_sidebar? (window.innerWidth >= 500? 'sidebar-xs':'sidebar-mobile-main'):''}`}\n            // style={{backgroundImage: `url(${BACKGROUND})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition:'center'}}\n            >\n            {header? <Header /> : ''}\n            <div className=\"page-content\">\n\n                {left_sidebar? <Leftsidebar /> : ''}\n\n                <div className=\"content-wrapper\">\n                    \n                    {page_header? <Pageheader /> : ''}\n\n                    <div className={`content ${this.state.type === 'login'? 'p-0':this.state.type === 'register'? 'p-0':'' }`}>\n                        {\n                            this.props.children\n                        }\n                    </div>\n                    {footer? <Footer /> : ''}\n                </div>\n            </div>\n        </div>\n\n        const centered_elements = \n        <div className={`virtual-body d-flex justify-content-center align-items-center background_custom`}>\n            {\n                this.props.children\n            }\n        </div>\n\n        return (\n            this.state.type === 'darmian_me'? centered_elements: normal_flow_container\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return { \n        left_sidebar: state.left_sidebar,\n        active_user: state.active_user\n     }\n}\nexport default connect(map_state_to_props, {notify, set_active_user})(withRouter( Container));","import React, { Component } from 'react';\nimport Container from '../../shared/container/container';\nimport { connect } from \"react-redux\";\nimport { notify, set_active_user, set_active_page } from '../../actions';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/lib/echarts'\nimport { Link } from 'react-router-dom';\nimport { BASE_URL } from '../../shared/router_constants';\nimport * as rc from '../../shared/rest_end_points';\nimport Axios from 'axios';\nimport socketIOClient from \"socket.io-client\";\nimport Loading from '../../shared/customs/loading/loading';\nimport './home.css'\nimport moment from 'moment'\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            doctors: 0,\n            patient_left: 0,\n            patient_attended: 0,\n            total_attended: 0,\n            total_appointments: 0,\n            checkout_percentage: 100,\n\n            loading_status: true,\n\n            patients_per_day: [],\n\n            current_date_time: moment(new Date()).format(\"LLLL\"),\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                            Home\n                        </Link>, <span className=\"breadcrumb-item active\">Dashboard</span>]\n        this.props.set_active_page(routes)\n        const token = localStorage.getItem('user')\n        Axios.get(`${rc.USERS_SEARCH_BY_TOKEN}?tag=${token}`).then(res => {\n            this.props.set_active_user(res.data['payload'])\n            this.socket = socketIOClient(`${rc.ROOT_URL}`)\n            this.socket.on(\"FromAPI\", data => this.order_data(data));\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    compare_dates(a, b) {\n        const dateA = new Date(a.date), dateB = new Date(b.date);\n        return dateA - dateB;\n    }\n\n    order_data = (data) => {\n        console.log('socket data', data)\n        const patients_per_day_raw_data = data.patients_per_day;\n        const temp = []\n        if (patients_per_day_raw_data.length > 0) {\n            for (let i = 0; i < patients_per_day_raw_data.length; ++i) {\n                const current_patient = patients_per_day_raw_data[i]\n                temp.push({\n                    date: moment(`${current_patient._id.month}/${current_patient._id.day}/${current_patient._id.year}`).format('LL'),\n                    count: current_patient.count\n                })\n                if (i === patients_per_day_raw_data.length - 1) {\n                    const numenator = data.patient_attended\n                    const denomenator = data.patient_left + data.patient_attended\n\n                    this.setState({\n                        doctors: data.doctors,\n                        patient_left: data.patient_left,\n                        patient_attended: data.patient_attended,\n                        total_attended: data.total_patients_attended,\n                        total_appointments: data.total_patients_appointments_registered,\n                        checkout_percentage: Math.ceil((numenator / (denomenator === 0 ? 1 : denomenator)) * 100),\n                        current_date_time: moment(new Date()).format(\"LLLL\"),\n                        loading_status: false,\n                        patients_per_day: temp.sort(this.compare_dates),\n\n                    })\n                }\n            }\n        }\n        else {\n            const numenator = data.patient_attended\n            const denomenator = data.patient_left + data.patient_attended\n\n            this.setState({\n                doctors: data.doctors,\n                patient_left: data.patient_left,\n                patient_attended: data.patient_attended,\n                total_attended: data.total_patients_attended,\n                total_appointments: data.total_patients_appointments_registered,\n                checkout_percentage: Math.ceil((numenator / (denomenator === 0 ? 1 : denomenator)) * 100),\n                current_date_time: moment(new Date()).format(\"LLLL\"),\n                loading_status: false,\n                patients_per_day: [],\n\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.socket.disconnect()\n    }\n    render() {\n        // console.log('response', this.state)\n        const option_patients_per_doctor = {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                }\n            },\n            legend: {\n                data: ['Total', 'Attended']\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            xAxis: {\n                type: 'value',\n                boundaryGap: [0, 0.01]\n            },\n            yAxis: {\n                type: 'category',\n                data: ['Dr. Yasir', 'Dr. Hamad', 'Dr. Shiza', 'Dr. Farukh', 'Dr. Baig']\n            },\n            series: [\n                {\n                    name: 'Total',\n                    type: 'bar',\n                    data: [14, 5, 8, 2, 1]\n                },\n                {\n                    name: 'Attended',\n                    type: 'bar',\n                    data: [6, 3, 4, 2, 0]\n                }\n            ]\n        };\n\n        const option_patients_attended_percentage = {\n            tooltip: {\n                formatter: '{a} <br/>{b} : {c}%'\n            },\n            series: [\n                {\n                    type: 'gauge',\n                    detail: { formatter: '{value}%' },\n                    data: [{ value: this.state.checkout_percentage }]\n                }\n            ]\n        };\n\n        const option_patients_attended_history = {\n            tooltip: {\n                trigger: 'axis',\n                position: function (pt) {\n                    return [pt[0], '10%'];\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: this.state.patients_per_day.map(function (a) { return a.date })\n            },\n            yAxis: {\n                type: 'value',\n                boundaryGap: [0, '100%']\n            },\n            dataZoom: [{\n                type: 'inside',\n                start: 0,\n                end: 100\n            }, {\n                start: 0,\n                end: 10,\n                handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                handleSize: '80%',\n                handleStyle: {\n                    color: '#fff',\n                    shadowBlur: 3,\n                    shadowColor: 'rgba(0, 0, 0, 0.6)',\n                    shadowOffsetX: 2,\n                    shadowOffsetY: 2\n                }\n            }],\n            series: [\n                {\n                    name: 'Patients',\n                    type: 'line',\n                    symbol: 'none',\n                    itemStyle: {\n                        color: '#00338D'\n                    },\n                    areaStyle: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: '#015BF9'\n                        }, {\n                            offset: 1,\n                            color: '#6198F7'\n                        }])\n                    },\n                    data: this.state.patients_per_day.map(function (a) { return a.count })\n                }\n            ]\n        };\n\n        const option_procedures = {\n            tooltip: {\n                trigger: 'item',\n                formatter: '{a} <br/>{b}: {c} ({d}%)'\n            },\n            legend: {\n                orient: 'horizontal',\n                left: 10,\n                data: ['Attended', 'Waiting']\n            },\n            series: [\n                {\n                    name: 'Patients Attended history',\n                    type: 'pie',\n                    radius: ['50%', '70%'],\n                    avoidLabelOverlap: false,\n                    label: {\n                        normal: {\n                            show: false,\n                            position: 'center'\n                        },\n                        emphasis: {\n                            show: true,\n                            textStyle: {\n                                fontSize: '30',\n                                fontWeight: 'bold'\n                            }\n                        }\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data: [\n                        { value: this.state.total_attended, name: 'Attended' },\n                        { value: this.state.total_appointments - this.state.total_attended, name: 'Waiting' },\n                    ]\n                }\n            ]\n        };\n        return (\n            <Container container_type={'home'}>\n                <div className=\"row\">\n                    <div className=\"col-lg-4 d-flex align-items-stretch \" >\n                        <div className=\"card w-100  border-left-3 border-top-0 border-bottom-0 border-right-0 border-info \">\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-info\">\n                                                {this.state.doctors}\n                                            </h1>\n                                    }\n                                    <h5>Doctors</h5>\n                                </div>\n                                <i className=\"fa fa-stethoscope fa-5x text-info\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8\" >\n\n                        <div className=\"card border-left-3 border-top-0 border-bottom-0 border-right-0 border-info \">\n                            <div className={`card-header pb-0`}>\n                                <div className=\"h6 mb-0 d-flex w-100  justify-content-center\">\n                                    <div className={`heading`}>\n                                        <span className={`filter font-weight-bold `}>\n                                            Patients Today\n                                        </span>\n                                    </div>\n                                    {/* <div className={`badge badge-dark d-block`}>\n                                        {this.state.current_date_time}\n                                    </div> */}\n                                </div>\n                            </div>\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#d9534f' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-danger\">\n                                                {this.state.patient_left}\n                                            </h1>\n                                    }\n                                    <h5>Waiting</h5>\n                                </div>\n                                <i className=\"fa fa-heartbeat fa-5x text-danger\" />\n                                <div className=\"border-left mx-3\"></div>\n                                <div >\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#5cb85c' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-success\">\n                                                {this.state.patient_attended}\n                                            </h1>\n                                    }\n                                    <h5>Checked out</h5>\n                                </div>\n                                <i className=\"fa fa-heartbeat fa-5x text-success\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-lg-8\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients per doctor</h5>\n\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_patients_per_doctor}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-4\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attended</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_patients_attended_percentage}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={`row`}>\n                    <div className=\"col-lg-4\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attended history</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_procedures}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attendence History</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts\n                                        option={option_patients_attended_history}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </Container >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        notify: state.notify,\n        active_user: state.active_user,\n        active_page: state.active_page,\n    }\n}\nexport default connect(map_state_to_props, { notify, set_active_user, set_active_page })(Home);\n\n\n\n\n\n\n\n\n// var base = +new Date(2020, 1, 1);\n// var oneDay = 24 * 3600 * 1000;\n// var date = [];\n\n// var data = [10];\n\n// for (var i = 1; i < 60; i++) {\n//     var now = new Date(base += oneDay);\n//     date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));\n//     data.push(Math.round(Math.random() * 20) + 10);\n// }\n\n// var option_patients_attended_history = {\n//     tooltip: {\n//         trigger: 'axis',\n//         position: function (pt) {\n//             return [pt[0], '10%'];\n//         }\n//     },\n//     xAxis: {\n//         type: 'category',\n//         boundaryGap: false,\n//         data: date\n//     },\n//     yAxis: {\n//         type: 'value',\n//         boundaryGap: [0, '100%']\n//     },\n//     dataZoom: [{\n//         type: 'inside',\n//         start: 0,\n//         end: 10\n//     }, {\n//         start: 0,\n//         end: 10,\n//         handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n//         handleSize: '80%',\n//         handleStyle: {\n//             color: '#fff',\n//             shadowBlur: 3,\n//             shadowColor: 'rgba(0, 0, 0, 0.6)',\n//             shadowOffsetX: 2,\n//             shadowOffsetY: 2\n//         }\n//     }],\n//     series: [\n//         {\n//             name: 'Patients',\n//             type: 'line',\n//             symbol: 'none',\n//             itemStyle: {\n//                 color: '#00338D'\n//             },\n//             areaStyle: {\n//                 color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n//                     offset: 0,\n//                     color: '#015BF9'\n//                 }, {\n//                     offset: 1,\n//                     color: '#6198F7'\n//                 }])\n//             },\n//             data: data\n//         }\n//     ]\n//};\n\n\n","import React, {Component} from 'react';\nimport Select, { components } from 'react-select'\nimport DateTimePicker from 'react-datetime';\n\n\nclass Inputfield extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            options: this.props.options,\n            error: this.props.error,\n        }\n    }\n\n    render(){\n        const _id = this.props.id\n        const _label = this.props.label_tag\n        const _input_type = this.props.input_type\n        const _placeholder = this.props.placeholder\n        const _icon = this.props.icon_class \n        const _on_change = this.props.on_text_change_listener\n        const _value = this.props.default_value\n        const _field_type = this.props.field_type\n        const _custom_classes = this.props.custom_classes\n        const _disabled = this.props.disabled\n        const _size = this.props.size? this.props.size:'form-control-lg'\n\n        const input_label = <label className=\"col-form-label-lg mb-0 pb-1\">{_label}</label>\n        \n        const input_field_type = <input \n                                    type={_input_type} \n                                    className={`form-control ${_size} ${this.props.error? 'border-danger':''}`} \n                                    id={_id}\n                                    placeholder={_placeholder}\n                                    onChange={_on_change}\n                                    value={_value}\n                                    disabled={_disabled}></input>\n        \n        const text_area_field_type = <textarea\n                                        rows={\"3\"}\n                                        cols={\"3\"}\n                                        className={`form-control form-control-lg ${this.props.error? 'border-danger':''}`}\n                                        id={_id}\n                                        placeholder={_placeholder}\n                                        onChange={_on_change}\n                                        value={_value} />\n\n        const selection_value_container = ({ children, ...props }) => (\n                                            <components.ValueContainer {...props}>\n                                                <div className={`input-group `}>\n                                                    <span className=\"input-group-prepend\">\n                                                        <span className=\"input-group-text border-top-0 border-bottom-0 border-left-0\">\n                                                            <i className={_icon}/>\n                                                        </span>\n                                                    </span>\n                                                    <div className=\"ml-2 my-1\">\n                                                        {\n                                                            children\n                                                        }\n                                                    </div>\n                                                </div>\n                                            </components.ValueContainer>\n                                        );\n        const select_field_type = <Select\n                                        isClearable\n                                        components={{ ValueContainer : selection_value_container }}\n                                        name=\"color\"\n                                        options={this.state.options}\n                                        placeholder={_placeholder}\n                                        menuPosition=\"auto\"\n                                        id={_id}\n                                        onInputChange={_on_change}\n                                        onChange={this.props.on_selected_change}\n                                        className={_custom_classes}\n                                    />\n        const _date_format = this.props.date_format;\n        const _time_format = this.props.time_format; \n        const date_time_field_type = <DateTimePicker id={_id}\n                                        onChange={_on_change}\n                                        className={`clock_datatime_picker form-control form-control-lg ${this.props.error? 'border-danger':''}`}\n                                        inputProps={{ placeholder: _placeholder, className: 'border-0 w-100' }}\n                                        input={!_disabled}\n                                        dateFormat={_date_format}\n                                        timeFormat={_time_format}\n                                        closeOnSelect={true}\n                                        value={_value}\n                                    />\n        let render_field = ''\n\n        if (_field_type === 'text-area'){\n            render_field = text_area_field_type\n        }\n        else if (_field_type === 'date-time'){\n            render_field = date_time_field_type\n        }\n        else if (_field_type === 'select'){\n            render_field = select_field_type\n        }\n        else if (_field_type === 'custom'){\n            render_field = this.props.custom_field\n        }\n        else{\n            render_field = input_field_type\n        }\n\n        \n\n        return(\n            <div className={`form-group row ${_custom_classes}`}>\n                {input_label}\n                <div className={`input-group`}>\n                    <span className=\"input-group-prepend\">\n                        <span className={`input-group-text ${this.props.error? 'alpha-danger text-danger border-danger':''}`}><i className={_icon}/></span>\n                    </span>\n                    {render_field}\n                </div>\n            </div>\n        );\n    }\n}\nexport default Inputfield;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { connect } from \"react-redux\";\nimport Loader from 'react-loader-spinner';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport Container from '../../../shared/container/container';\nimport { notify, set_active_user } from '../../../actions';\nimport Inputfield from '../../../shared/customs/inputfield/inputfield';\n\nimport { BASE_URL, REGISTER_URL, LOGIN_URL, FORGOT_PASSWORD } from '../../../shared/router_constants';\nimport { USERS_LOGIN } from '../../../shared/rest_end_points';\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: { value: '', error: false },\n            password: { value: '', error: false },\n            remember_me_option: true,\n            loading_status: false,\n        }\n    }\n\n    // UNSAFE_componentWillMount() {\n    //     if (localStorage.user) {\n    //         Axios.get(`${PROFILE_USER_REQUEST}?tag=${localStorage.user}`).then(res => {\n    //             if (res.data['status']) {\n    //                 this.props.history.push(BASE_URL)\n    //             }\n    //         })\n    //     }\n    // }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } })\n                break;\n            case 'password_text_input':\n                this.setState({ password: { value: e.target.value, error: false } })\n                break;\n            case 'remember_me_text_input':\n                this.setState({ remember_me_option: e.target.checked })\n                break;\n            default:\n                break;\n        }\n    }\n\n    __check_hard_constraints = (data) => {\n        if (data.email === '') {\n            this.props.notify('error', '', 'Please specify a username or phone number');\n            return false;\n        }\n        if (data.password === '') {\n            this.props.notify('error', '', 'Please give your password');\n            return false;\n        }\n        return true\n    }\n\n    on_submit = (e) => {\n        e.preventDefault()\n        this.setState({ loading_status: true })\n        const data = {\n            email: this.state.email.value.trim(),\n            password: this.state.password.value.trim(),\n            remember_me: this.state.remember_me_option\n        }\n        Axios.post(USERS_LOGIN, data).then(res => {\n            this.setState({ loading_status: false })\n            console.log('user login', res.data)\n            localStorage.setItem(\"user\", res.data['token'])\n            this.props.notify('success', '', res.data['message'])\n            this.props.history.push(BASE_URL)\n        }).catch(err => {\n            if (err.response) {\n                console.log('login',err.response)\n                if (err.response.status >= 500) {\n                    this.props.notify('error', '', 'Server not responding! please try again later')\n                }\n                else if (err.response.status >= 400 && err.response.status < 500) {\n                    this.props.notify('error', '', err.response.data.message)\n                }\n                this.setState({\n                    loading_status: false,\n                    email: { value: this.state.email.value, error: true },\n                    password: { value: this.state.password.value, error: true }\n                })\n            }\n            console.log('login error', err) \n        });\n    }\n\n\n    render() {\n\n        var view = ''\n        if (this.state.loading_status) {\n            view = <div className=\"mt-3\">\n                <div className=\"d-flex justify-content-center \">\n                    <Loader\n                        type=\"Rings\"\n                        color=\"#00BFFF\"\n                        height={150}\n                        width={150}\n                        timeout={60000} //60 secs\n                    />\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <p>Loading...</p>\n                </div>\n            </div>\n        }\n        else {\n            const username_password = <div className={``}>\n                <Inputfield\n                    id={'email_text_input'}\n                    label_tag={'Email'}\n                    placeholder={\"someone@hello.com\"}\n                    icon_class={'icon-user'}\n                    input_type={'email'}\n                    on_text_change_listener={this.on_text_field_change}\n                    default_value={this.state.email.value}\n                    error={this.state.email.error}\n                />\n                <Inputfield\n                    id={'password_text_input'}\n                    label_tag={'Password'}\n                    placeholder={\"Enter your password\"}\n                    icon_class={'icon-lock2'}\n                    input_type={'password'}\n                    on_text_change_listener={this.on_text_field_change}\n                    default_value={this.state.password.value}\n                    error={this.state.password.error}\n                />\n\n            </div>\n            const remember_me_reset_password = <div className=\"form-group d-flex align-items-center\">\n                <div className=\"form-check mb-0\">\n                    <label className=\"form-check-label\">\n                        <div className=\"uniform-checker\">\n                            <span className={this.state.remember_me_option ? 'checked' : ''}>\n                                <input type=\"checkbox\"\n                                    name=\"remember\"\n                                    id=\"remember_me_text_input\"\n                                    defaultChecked={this.state.remember_me_option}\n                                    value={this.state.remember_me_option}\n                                    onChange={this.on_text_field_change}\n                                    className=\"form-input-styled\" />\n                            </span>\n                        </div>\n                        Remember\n                    </label>\n                </div>\n\n                <Link to={FORGOT_PASSWORD} className=\"ml-auto\">Forgot password?</Link>\n            </div>\n\n            view = <div className={``}>\n                {username_password}\n                <hr />\n                {remember_me_reset_password}\n            </div>\n        }\n\n        return (\n            <Container container_type={'login'}>\n                <div className={`container-fluid`}>\n                    <div className={`row`}>\n                        <div className={`col-lg-4 col-md-6 p-0`}>\n                            <form method=\"post\" onSubmit={this.on_submit}>\n                                <div className={`card m-0`} style={{ height: '100vh' }}>\n                                    <div className={`card-header text-center h4 font-weight-light`}>\n                                        <span>Sign in</span>\n                                        <hr />\n                                    </div>\n                                    <div className={`card-body px-5`} >\n                                        {view}\n                                        <hr />\n                                        <div className=\"form-group \">\n                                            <button\n                                                type=\"submit\"\n                                                className=\"btn btn-block bg-teal-400 btn-labeled btn-labeled-right ml-auto\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={this.on_submit}>\n                                                <b><i className=\"icon-circle-right2\"></i></b>\n                                                Sign in\n                                            </button>\n                                        </div>\n\n                                        <div className=\"form-group text-center text-muted content-divider\">\n                                            <span className=\"px-2\">Don't have an account?</span>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-dark btn-labeled btn-labeled-right ml-auto\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={() => this.props.history.push(REGISTER_URL)}>\n                                                <b><i className=\"icon-plus2\"></i></b>\n                                                Sign up\n                                            </button>\n                                        </div>\n                                        <span className=\"form-text text-center text-muted\">By continuing, you're confirming that you've read our <Link to={LOGIN_URL}>Terms &amp; Conditions</Link> and <Link to={LOGIN_URL}>Cookie Policy</Link></span>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div className={`col-lg-8 col-md-6 d-none d-lg-block d-xl-block d-md-block background_custom`}>\n\n                        </div>\n                    </div>\n                </div>\n\n            </Container >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        notify: state.notify,\n        active_user: state.active_user,\n    }\n}\nexport default connect(map_state_to_props, { notify, set_active_user })(withRouter(Login));","export const BLOOD_GROUPS_OPTIONS = [\r\n    { id: 'blood_group_selection', label: 'A+' },\r\n    { id: 'blood_group_selection', label: 'A-' },\r\n    { id: 'blood_group_selection', label: 'B+' },\r\n    { id: 'blood_group_selection', label: 'B-' },\r\n    { id: 'blood_group_selection', label: 'AB+' },\r\n    { id: 'blood_group_selection', label: 'AB-' },\r\n    { id: 'blood_group_selection', label: 'O+' },\r\n    { id: 'blood_group_selection', label: 'O-' },\r\n    { id: 'blood_group_selection', label: 'Unknown' },\r\n];\r\nexport const GENDER_OPTIONS = [\r\n    { id: 'gender_selection', label: 'Male' },\r\n    { id: 'gender_selection', label: 'Female' },\r\n    { id: 'gender_selection', label: 'other' },\r\n];\r\nexport const ROLES_OPTIONS = [\r\n    { id: 'role_selection', label: 'Patient' },\r\n    { id: 'role_selection', label: 'Doctor' },\r\n    { id: 'role_selection', label: 'Admin' },\r\n];\r\n\r\nexport const PATIENT_VISIT_STATUSES = [\r\n    { id: 'status_selection', label: 'Waiting'},\r\n    { id: 'status_selection', label: 'Checked in'},\r\n    { id: 'status_selection', label: 'Checked out'},\r\n    { id: 'status_selection', label: 'Emergency'},\r\n]\r\n\r\nexport const classNameColors = [\r\n    'dark',\r\n    'primary',\r\n    'warning',\r\n    'success',\r\n    'danger',\r\n]","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Axios from 'axios';\nimport { USERS_CREATE } from '../../../shared/rest_end_points';\nimport { connect } from \"react-redux\";\nimport { notify } from '../../../actions'\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LOGIN_URL } from '../../../shared/router_constants';\nimport Container from '../../../shared/container/container';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './register.css';\nimport { withRouter } from 'react-router-dom';\nimport Inputfield from '../../../shared/customs/inputfield/inputfield';\nimport { BLOOD_GROUPS_OPTIONS, GENDER_OPTIONS, ROLES_OPTIONS } from '../../../shared/constant_data';\n\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first_name: { value: '', error: false },\n            last_name: { value: '', error: false },\n            email: { value: '', error: false },\n            password: { value: '', error: false },\n            verify_password: { value: '', error: false },\n            gender: { value: '', error: false },\n            dob: { value: '', error: false },\n            blood_group: { value: '', error: false },\n            role: { value: '', error: false },\n            phone_number: { value: '', error: false },\n            cnic: { value: '', error: false },\n            address: { value: '', error: false },\n            loading_status: false,\n            role_select_modal_visibility: false,\n\n            current_page: 0,\n        }\n    }\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'first_name_text_input':\n                this.setState({ first_name: { value: e.target.value, error: false } })\n                break;\n            case 'last_name_text_input':\n                this.setState({ last_name: { value: e.target.value, error: false } })\n                break;\n            case 'cnic_text_input':\n                if (e.target.value.length <= 13)\n                    this.setState({ cnic: { value: e.target.value, error: false } })\n                break;\n            case 'phone_number_text_input':\n                if (e.target.value.length <= 11)\n                    this.setState({ phone_number: { value: e.target.value, error: false } })\n                break;\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } })\n                break;\n            case 'password_text_input':\n                this.setState({ password: { value: e.target.value, error: false } })\n                break;\n            case 'verify_password_text_input':\n                this.setState({ verify_password: { value: e.target.value, error: false } })\n                break;\n            case 'address_text_input':\n                this.setState({ address: { value: e.target.value, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_date_of_birth_change = (e) => {\n\n        if (e === '')\n            this.setState({ dob: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ dob: { value: configured_date } })\n            }\n        }\n    }\n    on_selected_changed = (e) => {\n        switch (e.id) {\n            case 'blood_group_selection':\n                this.setState({ blood_group: { value: e.label, error: false } })\n                break;\n            case 'gender_selection':\n                this.setState({ gender: { value: e.label, error: false } })\n                break;\n            case 'role_selection':\n                this.setState({ role: { value: e.label, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    check_input = (input,required = true,only_alpha=false,only_numbers=false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required  && input === ''){\n            return true;\n        }\n        if (only_alpha && !input.match(alphabets)){\n            return true;\n        }\n        if (only_numbers && !input.match(numbers)){\n            return true;\n        }\n        return false;\n    }\n\n    check_hard_constraints = (input,include=\"\",length_check=\"default\",val=-1) => {\n        if (!input.includes(include)) {\n            return true;\n        }\n        switch(length_check){\n            case 'eq':\n                if (input.length !== val){\n                    return true\n                }\n                break;\n            case 'min':\n                if (input.length < val){\n                    return true\n                }\n                break;\n            case 'max':\n                if (input.length > val){\n                    return true\n                }\n                break;\n            default:\n                break\n        }\n        return false;\n    }\n\n    on_submit = async (e) => {\n        this.setState({ loading_status: true })\n            \n        let error = false\n        if(this.check_input(this.state.first_name.value,true,true,false)){\n            this.setState({ current_page: 0, first_name: { value: this.state.first_name.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.last_name.value,true,true,false)){\n            this.setState({ current_page: 0, last_name: { value: this.state.last_name.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.email.value,true,false,false) || this.check_hard_constraints(this.state.email.value,\"@\")){\n            this.setState({ current_page: 0, email: { value: this.state.email.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.phone_number.value,true,false,true) || this.check_hard_constraints(this.state.phone_number.value,\"\",\"eq\",11)){\n            this.setState({ current_page: 0, phone_number: { value: this.state.phone_number.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.password.value,true,false,false) || this.check_hard_constraints(this.state.password.value,\"\",\"min\",8)){\n            this.setState({ current_page: 1, password: { value: this.state.password.value, error: true}})\n            error = true;\n        }\n        if (this.state.password.value !== this.state.verify_password.value){\n            this.setState({ \n                password: { value: this.state.password.value, error: true },\n                verify_password: { value: this.state.verify_password.value, error: true },\n                current_page: 1, \n            })\n            error = true;\n        }\n        if(this.check_input(this.state.cnic.value,true,false,true) || this.check_hard_constraints(this.state.cnic.value,\"\",\"eq\",13)){\n            this.setState({ current_page: 2, cnic: { value: this.state.cnic.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.dob.value,true,false,false)){\n            this.setState({ current_page: 2, dob: { value: this.state.dob.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.address.value,true,false,false)){\n            this.setState({ current_page: 2, address: { value: this.state.address.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.role.value,true,true,false)){\n            this.setState({ current_page: 3, role: { value: this.state.role.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.gender.value,true,true,false)){\n            this.setState({ current_page: 3, gender: { value: this.state.gender.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.blood_group.value,true,false,false)){\n            this.setState({ current_page: 3, blood_group: { value: this.state.blood_group.value, error: true}})\n            error = true;\n        }\n        if (error === true){\n            this.props.notify('error','','Invalid info')\n            this.setState({ loading_status: false })\n            return\n        }\n        const data = {\n            first_name: this.state.first_name.value.trim(),\n            last_name: this.state.last_name.value.trim(),\n            email: this.state.email.value.trim(),\n            password: this.state.password.value.trim(),\n            verify_password: this.state.verify_password.value.trim(),\n            phone_number: this.state.phone_number.value.trim(),\n            cnic: this.state.cnic.value.trim(),\n            role: this.state.role.value.trim(),\n            dob: this.state.dob.value,\n            gender: this.state.gender.value.trim(),\n            blood_group: this.state.blood_group.value.trim(),\n            address: this.state.address.value.trim()\n        }\n        const response = await Axios.post(USERS_CREATE, data);\n        try {\n            if (response.data['status']) {\n                this.props.notify('success', '', response.data['message']);\n                this.props.history.push(LOGIN_URL);\n            }\n            else {\n                this.props.notify('error', '', response.data['message'])\n                this.setState({ loading_status: false })\n            }\n        }\n        catch (err) {\n            this.props.notify('error', '', 'We are sorry for invonvenience. Server is not responding! please try again later')\n            this.setState({ loading_status: false })\n        }\n    }\n\n    \n    next_button_click = (e) => {\n        e.preventDefault()\n        if (this.state.current_page < 3){\n            this.setState({current_page: this.state.current_page + 1})\n        }\n        else if (this.state.current_page === 3){\n            this.on_submit()\n        } \n    }\n    back_button_click = (e) => {\n        if (this.state.current_page >= 0)\n            this.setState({current_page: this.state.current_page - 1})\n    }\n\n    render() {\n        const loader = <div className=\"mt-3\">\n                            <div className=\"d-flex justify-content-center \">\n                                <Loader\n                                    type=\"Rings\"\n                                    color=\"#00BFFF\"\n                                    height={150}\n                                    width={150}\n                                    timeout={60000} //60 secs\n                                />\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                                <p>Loading...</p>\n                            </div>\n                        </div>\n        let to_render_page = loader\n        if (this.state.loading_status) {\n            to_render_page = loader\n        }\n        else {\n\n            const name_and_email_and_phone = <div className={``}>\n                    <Inputfield\n                            id={'email_text_input'}\n                            label_tag={'Email'}\n                            placeholder={\"someone@hello.com\"}\n                            icon_class={'icon-envelop'}\n                            input_type={'email'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.email.value}\n                            error={this.state.email.error}\n                        />\n                    <Inputfield\n                            id={`first_name_text_input`}\n                            label_tag={'First name'}\n                            placeholder=\"Enter your first name\"\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.first_name.value}\n                            error={this.state.first_name.error}\n                        />\n                    <Inputfield\n                            id={`last_name_text_input`}\n                            label_tag={'Last name'}\n                            placeholder=\"Enter your last name\"\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.last_name.value}\n                            error={this.state.last_name.error}\n                        />\n                    <Inputfield\n                            id={`phone_number_text_input`}\n                            label_tag={'Phone Number'}\n                            placeholder=\"Enter your phone number\"\n                            icon_class={'icon-phone2'}\n                            input_type={'number'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.phone_number.value}\n                            error={this.state.phone_number.error}\n                        />\n                </div>      \n            const password_and_verification = <div className={``}>\n                        <Inputfield\n                                id={`password_text_input`}\n                                label_tag={'Password'}\n                                placeholder=\"Enter password\"\n                                icon_class={'icon-user-lock'}\n                                input_type={'password'}\n                                on_text_change_listener={this.on_text_field_change}\n                                default_value={this.state.password.value}\n                                error={this.state.password.error}\n                            />\n                        <Inputfield\n                                id={`verify_password_text_input`}\n                                label_tag={'Verify Password'}\n                                placeholder=\"Re-enter password\"\n                                icon_class={'icon-user-lock'}\n                                input_type={'password'}\n                                on_text_change_listener={this.on_text_field_change}\n                                default_value={this.state.verify_password.value}\n                                error={this.state.verify_password.error}\n                            />\n                </div>\n            const date_of_birth_and_cnic_address = <div className={``}>\n                    <Inputfield \n                        id={`cnic_text_input`}\n                        label_tag={'CNIC'}\n                        placeholder=\"Enter your cnic\"\n                        icon_class={'icon-vcard'}\n                        input_type={'text'}\n                        on_text_change_listener={this.on_text_field_change}\n                        default_value={this.state.cnic.value}\n                        error={this.state.cnic.error}\n                        />\n                    {/* <div className=\"form-group row\">\n                        <label className=\"col-form-label-lg\">Date of birth</label>\n                        <div className={`input-group`}>\n                            <span className=\"input-group-prepend\">\n                                <span className=\"input-group-text\"><i className={'icon-calendar3'}/></span>\n                            </span>\n                            <DateTimePicker id=\"dob_text_input\"\n                                onChange={this.on_date_of_birth_change}\n                                className=\"clock_datatime_picker form-control form-control-lg \"\n                                inputProps={{ placeholder: 'Select your date of birth', width: '100%', className: 'border-0' }}\n                                input={true}\n                                dateFormat={'ll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.dob.value}\n                            />\n                        </div>\n                    </div> */}\n                    <Inputfield \n                        id={`dob_text_input`}\n                        label_tag={'Date of birth'}\n                        icon_class={'icon-calendar3'}\n                        placeholder=\"Date of birth\"\n                        input_type={'text'}\n                        field_type=\"date-time\"\n                        date_format={'ll'}\n                        time_format={false}\n                        on_text_change_listener={this.on_date_of_birth_change}\n                        default_value={this.state.dob.value}\n                        error={this.state.dob.error}\n                        />\n                    <Inputfield\n                        id={`address_text_input`}\n                        label_tag={'What is your current address'}\n                        placeholder=\"Enter your address\"\n                        icon_class={'icon-home'}\n                        input_type={'text'}\n                        on_text_change_listener={this.on_text_field_change}\n                        default_value={this.state.address.value}\n                        error={this.state.address.error}\n                        field_type={'text-area'}\n                    />\n                    \n                </div>\n            const role_gender_and_blood_group = <div className={``}>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">What is your blood group</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-droplet'}/></span>\n                        </span>\n                        <Select\n                            className=\"w-75\"\n                            options={BLOOD_GROUPS_OPTIONS}\n                            classNamePrefix={``}\n                            components={makeAnimated()}\n                            placeholder=\"Select blood group\"\n                            id=\"blood_group_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">Specify your gender</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-man-woman'}/></span>\n                        </span>\n\n                        <Select\n                            className=\"w-75\"\n                            options={GENDER_OPTIONS}\n                            components={makeAnimated()}\n                            classNamePrefix={``}\n                            placeholder=\"Select gender\"\n                            id=\"gender_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">How you want to go into this</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-user-tie'}/></span>\n                        </span>\n                            \n                        <Select\n                            className=\"w-75\"\n                            options={ROLES_OPTIONS}\n                            classNamePrefix={``}\n                            placeholder=\"Select role\"\n                            id=\"role_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n            </div>\n            \n            if (this.state.current_page === 0){\n                to_render_page = name_and_email_and_phone\n            }\n            else if (this.state.current_page === 1){\n                to_render_page = password_and_verification\n            }\n            else if (this.state.current_page === 2){\n                to_render_page = date_of_birth_and_cnic_address\n            }\n            else{\n                to_render_page = role_gender_and_blood_group\n            }\n\n        }\n        return (\n            <Container container_type={'register'}>\n                <div className={`container-fluid`}>\n                    <div className={`row`}>\n                        <div className={`col-lg-4 col-md-6 p-0`} >\n                            <form method=\"post\" action={this.next_button_click}>\n                                <div className={`card m-0 `} style={{height: '100vh'}}>\n                                    <div className={`card-header text-center h4 font-weight-light`}>\n                                        <span>Sign up</span>\n                                        <hr/>\n                                    </div>\n\n                                    <div className={`card-body px-5`}>                   \n                                        {to_render_page}\n                                    </div>\n\n                                    <div className={`row card-footer`}>\n                                        \n                                        \n                                        <div className=\"col-4\">\n                                            <button  \n                                                id=\"back_button\"\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-teal-400 btn-labeled btn-labeled-left pl-5 mr-2\"                                        \n                                                style={{ textTransform: \"inherit\", display: this.state.current_page === 0? 'none': 'inline'}}\n                                                onClick={this.back_button_click}>\n                                                <b><i className=\"icon-arrow-left13\"/></b>\n                                                Back\n                                            </button>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-danger btn-labeled btn-labeled-right pr-5 mr-2\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={() => this.props.history.push(LOGIN_URL)}>\n                                                <b><i className=\"icon-cross\"></i></b>\n                                                Cancel\n                                            </button>\n                                        </div>\n                                        <div className={`col-4`}>\n                                            <button\n                                                type=\"submit\"\n                                                className={`btn btn-block bg-teal-400 btn-labeled btn-labeled-right pr-5`}\n                                                id=\"next_button\"\n                                                onClick={this.next_button_click}>\n                                                {\n                                                    this.state.current_page === 3? <b><i className=\"icon-plus3\"></i></b>:\n                                                            <b><i className=\"icon-arrow-right14\"></i></b>\n                                                }\n                                                {\n                                                    this.state.current_page === 3? \"Register\":'Next'\n                                                }\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div className={`col-lg-8 col-md-6 d-none d-lg-block d-xl-block d-md-block background_custom`} style={{height:'100vh'}}>\n                                            \n                        </div>\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\nfunction map_state_to_props(notify) {\n    return { notify }\n}\nexport default connect(map_state_to_props, { notify })(withRouter(Register));","import React, { Component } from 'react';\nimport Container from '../../shared/container/container';\nimport { Link, withRouter } from 'react-router-dom';\nimport NO_PICTURE from '../../resources/images/placeholder.jpg'\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport { USERS_SEARCH_BY_TOKEN, USERS_UPDATE } from '../../shared/rest_end_points';\nimport { LOGIN_URL, BASE_URL } from '../../shared/router_constants';\nimport { set_active_user, notify, set_active_page } from '../../actions'\nimport Inputfield from '../../shared/customs/inputfield/inputfield';\nimport '../../shared/customs/Animations/animations.css';\nimport DateTimePicker from 'react-datetime'\nimport moment from 'moment';\nimport Select, { components } from 'react-select';\nimport { BLOOD_GROUPS_OPTIONS, GENDER_OPTIONS, ROLES_OPTIONS } from '../../shared/constant_data';\nimport Loading from '../../shared/customs/loading/loading';\n\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            first_name: { value: '', error: false },\n            last_name: { value: '', error: false },\n            email: { value: '', error: false },\n            gender: { value: '', error: false },\n            date_of_birth: { value: '', error: false },\n            register_date: { value: '', error: false },\n            blood_group: { value: '', error: false },\n            role: { value: '', error: false },\n            phone_number: { value: '', error: false },\n            cnic: { value: '', error: false },\n            address: { value: '', error: false },\n\n            loading_status: false,\n            previous_payload: null,\n        };\n    }\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                        Home\n                    </Link>, <span className=\"breadcrumb-item active\">Profile</span>]\n        this.props.set_active_page(routes)\n        console.log('profile component did mount user',localStorage.user)\n        if (localStorage.user) {\n            this.setState({ loading_status: true }, () => {\n                Axios.get(`${USERS_SEARCH_BY_TOKEN}?tag=${localStorage.user}`).then(res => {\n                    console.log('res',res)\n                    this.props.set_active_user(res.data['payload'])\n\n                    this.setState({\n                        first_name: { value: res.data.payload.first_name, error: false },\n                        last_name: { value: res.data.payload.last_name, error: false },\n                        email: { value: res.data.payload.email, error: false },\n                        cnic: { value: res.data.payload.cnic, error: false },\n                        phone_number: { value: res.data.payload.phone_number, error: false },\n                        address: { value: res.data.payload.address, error: false },\n                        date_of_birth: { value: moment(res.data.payload.date_of_birth).format('ll'), error: false },\n                        register_date: { value: moment(res.data.payload.register_date).format('lll'), error: false },\n                        blood_group: { value: res.data.payload.blood_group, error: false },\n                        gender: { value: res.data.payload.gender, error: false },\n                        role: { value: res.data.payload.role, error: false },\n\n                        loading_status: false\n\n                    })\n                }).catch(err => {\n                    if (err) {\n                        console.log(err.response)\n                        if (err.response.status >= 500) {\n                            this.props.notify('error', '', `No response`)\n                            this.setState({ loading_status: false })\n                        }\n                        else if (err.response.status >= 400 && err.response.status < 500) {\n                            this.props.notify('info', '', `${err.response.status}. Please refresh the page.`)\n                            this.setState({ loading_status: false })\n                        }\n                    }\n                })\n            })\n\n        }\n        else {\n            console.log('profile component did mount','No token found')\n            this.props.history.push(LOGIN_URL)\n        }\n    }\n\n    request_update = (data) => {\n        this.setState({ loading_status: true }, () => {\n            Axios.put(USERS_UPDATE, data, { headers: { 'code-medicine': localStorage.getItem('user') } }).then(res => {\n                if (res.data.status === true) {\n                    this.setState({ loading_status: false })\n                    this.props.notify('success', '', res.data.message)\n                } else {\n                    this.setState({ loading_status: false })\n\n                    this.props.notify('error', '', res.data.message)\n                }\n            }).catch(err => {\n                console.log('request error', err)\n                this.setState({ loading_status: false })\n                this.props.notify('error', '', err.toString())\n            })\n        })\n\n    }\n\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required && input === '') {\n            return true;\n        }\n        if (only_alpha && !input.match(alphabets)) {\n            return true;\n        }\n        if (only_numbers && !input.match(numbers)) {\n            return true;\n        }\n    }\n\n    on_click_update = () => {\n        let status = false;\n        if (this.check_input(this.state.first_name.value, true, true, false)) {\n            this.setState({ first_name: { value: this.state.first_name.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.last_name.value, true, true, false)) {\n            this.setState({ last_name: { value: this.state.last_name.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.email.value, true, false, false)) {\n            this.setState({ email: { value: this.state.email.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.phone_number.value, true, false, true)) {\n            this.setState({ phone_number: { value: this.state.phone_number.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.cnic.value, true, false, true)) {\n            this.setState({ cnic: { value: this.state.cnic.value, error: true } })\n            status = true\n        }\n\n        if (status === true) {\n            this.props.notify('error', '', 'Invalid input')\n            return\n        }\n        const payload = {\n            first_name: this.state.first_name.value,\n            last_name: this.state.last_name.value,\n            email: this.state.email.value,\n            gender: this.state.gender.value,\n            date_of_birth: this.state.date_of_birth.value,\n            register_date: this.state.register_date.value,\n            blood_group: this.state.blood_group.value,\n            role: this.state.role.value,\n            phone_number: this.state.phone_number.value,\n            cnic: this.state.cnic.value,\n            address: this.state.address.value,\n        }\n        this.request_update(payload)\n    }\n\n    on_text_changed = (e) => {\n        switch (e.target.id) {\n            case 'first_name_text_input':\n                this.setState({ first_name: { value: e.target.value, error: false } });\n                break;\n            case 'last_name_text_input':\n                this.setState({ last_name: { value: e.target.value, error: false } });\n                break;\n            case 'cnic_text_input':\n                this.setState({ cnic: { value: e.target.value, error: false } });\n                break;\n            case 'phone_number_text_input':\n                this.setState({ phone_number: { value: e.target.value, error: false } });\n                break;\n            case 'address_text_input':\n                this.setState({ address: { value: e.target.value, error: false } });\n                break;\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } });\n                break;\n            default:\n                break;\n        }\n    }\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n            switch (e.id) {\n                case 'blood_group_selection':\n                    this.setState({ blood_group: { value: e.label } })\n                    break;\n                case 'gender_selection':\n                    this.setState({ gender: { value: e.label } })\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'blood_group_selection':\n                    this.setState({ user_blood_group: { value: '' } })\n                    break;\n                case 'gender_selection':\n                    this.setState({ user_gender: { value: '' } })\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n    render() {\n        const selection_value_container = ({ children, ...props }) => (\n            <components.ValueContainer {...props}>\n                <div className={`input-group `}>\n                    <div className=\"ml-2 my-0\">\n                        {\n                            children\n                        }\n                    </div>\n                </div>\n            </components.ValueContainer>)\n        const view = <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className={`col-lg-2 col-sm-12 d-flex justify-content-center`}>\n                    <div className=\"card-img-actions d-inline-block mb-3\">\n                        <img className=\"img-fluid rounded-circle\" src={NO_PICTURE} style={{ width: 100, height: 100 }} alt=\"\" />\n                        <div className=\"card-img-actions-overlay card-img rounded-circle\">\n                            <Link to={\"#\"} className=\"btn btn-outline bg-white text-white border-white border-2 btn-icon rounded-round\">\n                                <i className=\"icon-plus3\"></i>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-lg-3 col-sm-12 px-3\">\n                    <Inputfield\n                        id=\"first_name_text_input\"\n                        label_tag=\"First Name\"\n                        placeholder=\"First name\"\n                        icon_class=\"icon-user\"\n                        default_value={this.state.first_name.value}\n                        on_text_change_listener={this.on_text_changed}\n                        error={this.state.first_name.error}\n                    />\n                </div>\n                <div className=\"col-lg-3 col-sm-12 px-3\">\n                    <Inputfield\n                        id=\"last_name_text_input\"\n                        label_tag=\"Last Name\"\n                        placeholder=\"Last name\"\n                        icon_class=\"icon-user\"\n                        type=\"email\"\n                        default_value={this.state.last_name.value}\n                        on_text_change_listener={this.on_text_changed}\n                        error={this.state.last_name.error}\n                    />\n                </div>\n                <div className={`col-lg-4 col-sm-12 px-3`}>\n                    <Inputfield\n                        id=\"email_text_input\"\n                        label_tag=\"Email\"\n                        placeholder=\"Email\"\n                        icon_class=\"icon-envelop4\"\n                        default_value={this.state.email.value}\n                        on_text_change_listener={this.on_text_changed}\n                        disabled={true}\n                    />\n                </div>\n\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-3 col-sm-12 px-3\">\n\n                    <Inputfield\n                        id=\"phone_number_text_input\"\n                        label_tag=\"Phone number\"\n                        placeholder=\"Phone number\"\n                        icon_class=\"icon-phone2\"\n                        default_value={this.state.phone_number.value}\n                        on_text_change_listener={this.on_text_changed}\n                        error={this.state.phone_number.error}\n                    />\n                </div>\n                <div className=\"col-lg-3 col-sm-12 px-3\">\n                    <Inputfield\n                        id=\"cnic_text_input\"\n                        label_tag=\"CNIC\"\n                        placeholder=\"CNIC\"\n                        icon_class=\"icon-vcard\"\n                        default_value={this.state.cnic.value}\n                        on_text_change_listener={this.on_text_changed}\n                        error={this.state.cnic.error}\n                    />\n                </div>\n                <div className=\"col-lg-6 col-sm-12\">\n                    <div className={`row `}>\n                        <div className={`col-lg-4`}>\n                            <div className={``}>\n                                <label className=\"col-form-label-lg\">Blood Group</label>\n                                <Select\n                                    isClearable\n                                    components={{ ValueContainer: selection_value_container }}\n                                    name=\"color\"\n                                    options={BLOOD_GROUPS_OPTIONS}\n                                    placeholder={'Blood Group'}\n                                    menuPosition=\"auto\"\n                                    id=\"blood_group_selection\"\n                                    onChange={this.on_selected_changed}\n                                    value={[{ id: 'blood_group_selection', label: this.state.blood_group.value }]}\n                                />\n\n                            </div>\n                        </div>\n                        <div className={`col-lg-4`}>\n                            <div className={``}>\n                                <label className=\"col-form-label-lg\">Gender</label>\n                                <Select\n                                    isClearable\n                                    components={{ ValueContainer: selection_value_container }}\n                                    name=\"color\"\n                                    options={GENDER_OPTIONS}\n                                    placeholder={'Gender'}\n                                    menuPosition=\"auto\"\n                                    id=\"gender_selection\"\n                                    onChange={this.on_selected_changed}\n                                    value={[{ id: 'gender_selection', label: this.state.gender.value }]}\n                                />\n\n                            </div>\n                        </div>\n                        <div className={`col-lg-4`}>\n                            <div className={``}>\n                                <label className=\"col-form-label-lg\">Role</label>\n                                <Select\n                                    isClearable\n                                    components={{ ValueContainer: selection_value_container }}\n                                    name=\"color\"\n                                    options={ROLES_OPTIONS}\n                                    placeholder={'Role'}\n                                    menuPosition=\"auto\"\n                                    id=\"role_selection\"\n                                    onChange={this.on_selected_changed}\n                                    value={[{ id: 'role_selection', label: this.state.role.value }]}\n                                />\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-lg-6 col-sm-12 px-3\">\n                    <Inputfield\n                        id=\"address_text_input\"\n                        label_tag=\"Address\"\n                        placeholder=\"Address\"\n                        icon_class=\"icon-home\"\n                        field_type=\"text-area\"\n                        default_value={this.state.address.value}\n                        on_text_change_listener={this.on_text_changed}\n                        error={this.state.address.error}\n                    />\n                </div>\n\n                <div className=\"col-lg-3 col-sm-12 px-3\">\n                    <div className={`form-group row`}>\n                        <label className={`col-form-label-lg `}>Date of birth</label>\n                        <div className=\"input-group\">\n                            <span className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"icon-calendar3 text-muted\"></i>\n                                </span>\n                            </span>\n                            <DateTimePicker id=\"user_dob_text_input\"\n                                onChange={this.on_user_date_of_birth_change}\n                                className=\"clock_datatime_picker form-control form-control-lg\"\n                                inputProps={{ placeholder: 'Date of birth', className: 'border-0 w-100' }}\n                                input={true}\n                                dateFormat={'ll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.date_of_birth.value}\n                                disabled\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-lg-3 col-sm-12 px-3\">\n                    <div className={`form-group row`}>\n                        <label className={`col-form-label-lg `}>Register Date</label>\n                        <div className=\"input-group\">\n                            <span className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <i className=\"icon-calendar3 text-muted\"></i>\n                                </span>\n                            </span>\n                            <DateTimePicker id=\"user_dob_text_input\"\n                                className=\"clock_datatime_picker form-control form-control-lg\"\n                                inputProps={{ placeholder: 'Register Date', className: 'border-0 w-100', disabled: true }}\n                                input={true}\n                                dateFormat={'lll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.register_date.value}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={`row`}>\n                <div className={`col-12`}>\n                    <button className={`btn bg-teal-400 btn-labeled btn-labeled-right pr-5 float-right`}\n                        onClick={this.on_click_update}>\n                        <b><i className={`icon-floppy-disk`}></i></b>\n                        Save\n                </button>\n                    <button\n                        className={`btn bg-dark btn-labeled btn-labeled-right pr-5 float-right mr-2`}\n                        onClick={() => this.props.history.push(BASE_URL)}>\n                        <b><i className={`icon-cross`}></i></b>\n                    Leave\n                </button>\n                </div>\n            </div>\n        </div>\n        return (\n            <Container container_type=\"home\">\n                <div className=\"card border-top-info\">\n                    <div className=\"card-body\">\n                        {this.state.loading_status ? <Loading size={150} /> : view}\n                    </div>\n                </div>\n            </Container>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        notify: state.notify,\n\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, notify, set_active_page })(withRouter(Profile));","import React, { Component } from 'react';\r\nimport Inputfield from '../../../../shared/customs/inputfield/inputfield';\r\nimport Axios from 'axios';\r\nimport { NEW_PROCEDURES_URL, UPDATE_PROCEDURE_URL, DELETE_PROCEDURE_URL, PROCEDURES_CREATE, PROCEDURES_DELETE, PROCEDURES_UPDATE } from '../../../../shared/rest_end_points';\r\nimport Loading from '../../../../shared/customs/loading/loading';\r\nimport { connect } from 'react-redux';\r\nimport { notify } from '../../../../actions';\r\n\r\nclass ProcedureItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            description_text_input: { value: this.props.data.procedure_description, error: false },\r\n            charges_text_input: { value: this.props.data.procedure_fee, error: false },\r\n            discount_text_input: { value: this.props.data.procedure_discount, error: false },\r\n\r\n            prev_description: this.props.data.procedure_description,\r\n            prev_fee: this.props.data.procedure_fee,\r\n            prev_discount: this.props.data.procedure_discount,\r\n\r\n            edited: false,\r\n            save_click_loading: false,\r\n        }\r\n    }\r\n\r\n    handle_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => {\r\n            if (this.state.description_text_input.value !== this.state.prev_description ||\r\n                parseInt(this.state.charges_text_input.value) !== this.state.prev_fee ||\r\n                parseInt(this.state.discount_text_input.value) !== this.state.prev_discount) {\r\n                /**\r\n                 * If data loaded is edited\r\n                 */\r\n                this.setState({ edited: true })\r\n            }\r\n            else {\r\n                this.setState({ edited: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    on_save_click = () => {\r\n        /**\r\n         * create request for procedures\r\n         * fee\r\n         * discount\r\n         * description\r\n         */\r\n        this.setState({ save_click_loading: true })\r\n        if (this.props.data.type === 'new') {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id,\r\n                fee: parseInt(this.state.charges_text_input.value),\r\n                discount: parseInt(this.state.discount_text_input.value),\r\n                description: this.state.description_text_input.value\r\n            }\r\n\r\n            Axios.post(PROCEDURES_CREATE, payload).then(res => {\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                this.props.notify('success', '', res.data.message)\r\n                this.props.save_opp(this.props.index, {\r\n                    id: res.data.payload._id,//this.props.data.id,\r\n                    fee: res.data.payload.fee, //parseInt(this.state.charges_text_input.value), \r\n                    discount: res.data.payload.discount, //parseInt(this.state.discount_text_input.value), \r\n                    description: res.data.payload.description,// this.state.description_text_input.value \r\n                })\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // this.props.notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                this.props.notify('error', '', 'Network error')\r\n            })\r\n        }\r\n        else if (this.props.data.type === 'previous') {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id,\r\n                procedure_id: this.props.data.id,\r\n                fee: parseInt(this.state.charges_text_input.value),\r\n                discount: parseInt(this.state.discount_text_input.value),\r\n                description: this.state.description_text_input.value\r\n            }\r\n            Axios.put(PROCEDURES_UPDATE, payload).then(res => {\r\n                console.log('success');\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                this.props.notify('success', '', res.data.message)\r\n                this.props.save_opp(this.props.index, {\r\n                    id: this.props.data.id,\r\n                    fee: parseInt(this.state.charges_text_input.value),\r\n                    discount: parseInt(this.state.discount_text_input.value),\r\n                    description: this.state.description_text_input.value\r\n                })\r\n\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // this.props.notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                this.props.notify('error', '', 'Network error')\r\n            })\r\n        }\r\n    }\r\n\r\n    on_delete_click = () => {\r\n        /**\r\n         * delete request for procedures\r\n         * appointment id\r\n         * procedure id\r\n         */\r\n        if (this.props.data.type !== 'new') {\r\n            const payload = { procedure_id: this.props.data.id }\r\n            this.props.delete_opp(this.props.index)\r\n            Axios.delete(PROCEDURES_DELETE, { data: payload }).then(res => {\r\n                console.log('success');\r\n                this.setState({ save_click_loading: false, edited: false });\r\n                this.props.notify('success', '', res.data.message);\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // this.props.notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                this.props.notify('error', '', 'Network error' + err.toString())\r\n            })\r\n        }\r\n        else {\r\n            this.props.delete_opp(-1)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const save_button_classes = `btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon ml-1 mb-1 ${this.state.save_click_loading ? 'p-0' : ''}`\r\n        const update_button_classes = `btn btn-outline-dark btn-sm secondary btn-icon ml-1 mb-1 ${this.state.save_click_loading ? 'p-0' : ''}`\r\n        return (\r\n            <tr>\r\n                <td className=\"p-1\">\r\n                    <input\r\n                        id={`description_text_input`}\r\n                        placeholder=\"Enter Reason\"\r\n                        disabled={this.state.save_click_loading}\r\n                        input_type={'text'}\r\n                        className=\"form-control form-control-sm\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.description_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.description_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"p-1\">\r\n                    <input\r\n                        id={`charges_text_input`}\r\n                        placeholder=\"Charges\"\r\n                        input_type={'text'}\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-sm\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.charges_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.charges_text_input.error}`\r\n                    />\r\n                </td>\r\n                <td className=\"p-1\">\r\n                    <input\r\n                        id={`discount_text_input`}\r\n                        placeholder=\"Discount\"\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-sm\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.discount_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.discount_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"p-1\">\r\n                    <div className=\"d-flex align-items-end justify-content-center\">\r\n                        <button className=\"btn btn-outline btn-sm bg-danger border-danger text-danger secondary btn-icon mb-1\"\r\n                            onClick={this.on_delete_click}>\r\n                            <i className=\"icon-cross\" />\r\n                        </button>\r\n                        {this.state.edited ?\r\n                            <button className={this.props.data.type === 'new' ? save_button_classes : update_button_classes}\r\n                                onClick={this.on_save_click}>\r\n                                {this.state.save_click_loading ? <Loading size=\"30\" /> : <i className=\"icon-floppy-disk\" />}\r\n                            </button> : ''}\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n            // <div className=\"row\">\r\n            //     <div className={`col-lg-7 col-md-4 col-12 px-3`}>\r\n            //         <Inputfield\r\n            //             id={`description_text_input`}\r\n            //             label_tag={'Procedure Reason'}\r\n            //             icon_class={'icon-file-plus'}\r\n            //             placeholder=\"Enter Reason\"\r\n            //             disabled={this.state.save_click_loading}\r\n            //             input_type={'text'}\r\n            //             custom_classes=\"mb-1\"\r\n            //             field_type=\"\"\r\n            //             size=\"form-control-sm\"\r\n            //             on_text_change_listener={this.handle_change}\r\n            //             default_value={this.state.description_text_input.value}\r\n            //             error={this.state.description_text_input.error}\r\n            //         />\r\n            //     </div>\r\n\r\n            //     <div className={`col-lg-2 col-md-3 col-6 px-3`}>\r\n            //         <Inputfield\r\n            //             id={`charges_text_input`}\r\n            //             label_tag={'Charges'}\r\n            //             icon_class={'icon-cash3'}\r\n            //             placeholder=\"Charges\"\r\n            //             input_type={'text'}\r\n            //             disabled={this.state.save_click_loading}\r\n            //             custom_classes=\"mb-1\"\r\n            //             field_type=\"\"\r\n            //             size=\"form-control-sm\"\r\n            //             on_text_change_listener={this.handle_change}\r\n            //             default_value={this.state.charges_text_input.value}\r\n            //             error={this.state.charges_text_input.error}\r\n            //         />\r\n            //     </div>\r\n\r\n            //     <div className={`col-lg-2 col-md-3 col-6 px-3`}>\r\n            //         <Inputfield\r\n            //             id={`discount_text_input`}\r\n            //             label_tag={'Discount'}\r\n            //             icon_class={'icon-arrow-down132'}\r\n            //             placeholder=\"Discount\"\r\n            //             input_type={'text'}\r\n            //             disabled={this.state.save_click_loading}\r\n            //             custom_classes=\"mb-1\"\r\n            //             field_type=\"\"\r\n            //             size=\"form-control-sm\"\r\n            //             on_text_change_listener={this.handle_change}\r\n            //             default_value={this.state.discount_text_input.value}\r\n            //             error={this.state.discount_text_input.error}\r\n            //         />\r\n            //     </div>\r\n\r\n            //     <div className=\"col-lg-1 col-md-2 col-12 pl-0 d-flex align-items-end justify-content-center\">\r\n            //         <button className=\"btn btn-outline btn-sm bg-danger border-danger text-danger secondary btn-icon mb-1\"\r\n            //             onClick={this.on_delete_click}>\r\n            //             <i className=\"icon-cross\" />\r\n            //         </button>\r\n            //         {this.state.edited? \r\n            //             <button className={this.props.data.type === 'new'? save_button_classes: update_button_classes}\r\n            //                 onClick={this.on_save_click}>\r\n            //             {this.state.save_click_loading? <Loading size=\"30\" />:<i className=\"icon-floppy-disk\" />}\r\n            //         </button>:''}\r\n            //     </div>\r\n\r\n            // </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { notify })(ProcedureItem)","import React, { Component } from 'react';\r\nimport ProcedureItem from './procedure_item';\r\nimport Modal from \"react-bootstrap4-modal\";\r\nimport Inputfield from '../../../../shared/customs/inputfield/inputfield';\r\nimport { connect } from 'react-redux';\r\nimport { notify, update_appointment, load_todays_appointments, clear_todays_appointments } from '../../../../actions';\r\nimport Axios from 'axios';\r\nimport { UPDATE_APPOINTMENT_CHARGES, GET_APPOINTMENT_CHARGES, CHECKOUT_APPOINTMENT } from '../../../../shared/rest_end_points';\r\nimport Loading from '../../../../shared/customs/loading/loading';\r\n\r\n\r\nclass ProcedureModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            consultancy_fee_text_input: { value: \"1500\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n            total: 0,\r\n            discount: 0,\r\n            minimum_payable: 0,\r\n            procedures_list: [],\r\n            loading_status: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.add_procedure({\r\n        //     procedure_fee: 0,\r\n        //     procedure_discount: 0,\r\n        //     procedure_description: '',\r\n        //     type: 'new'\r\n        // })\r\n        this.handle_total_values();\r\n    }\r\n\r\n    add_procedure(item) {\r\n        const temp = this.state.procedures_list;\r\n        temp.push(item)\r\n        this.setState({ procedures_list: temp }, () => {\r\n            this.scrollToBottom()\r\n        });\r\n    };\r\n\r\n    save_procedure = (key, data) => {\r\n        const temp = this.state.procedures_list;\r\n        temp[key].type = 'previous';\r\n        temp[key].procedure_fee = data.fee;\r\n        temp[key].procedure_discount = data.discount;\r\n        temp[key].procedure_description = data.description;\r\n        temp[key].id = data.id\r\n        this.setState({ procedures_list: temp }, () => {\r\n            this.handle_total_values()\r\n        })\r\n    }\r\n\r\n    delete_procedure = (key) => {\r\n        const temp = this.state.procedures_list;\r\n        if (key === -1)\r\n            temp.pop();\r\n        else {\r\n            temp.splice(key, 1);\r\n        }\r\n        this.setState({ procedures_list: [] }, () => {\r\n            this.setState({ procedures_list: temp }, () => this.handle_total_values())\r\n        })\r\n    }\r\n\r\n    add_procedure_click = () => {\r\n        if ((this.state.procedures_list.filter((data) => { return data.type === 'new' })).length === 0) {\r\n            this.add_procedure({\r\n                id: null,//Math.max.apply(Math, this.state.procedures_list.map(function(obj) { return obj.id })),\r\n                procedure_fee: 0,\r\n                procedure_discount: 0,\r\n                procedure_description: '',\r\n                type: 'new',\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.notify('info', '', 'There is an unsaved procedure. Please save it first')\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        console.log('willReceiveProps', new_props)\r\n        if (new_props.new_procedure_visibility) {\r\n            if (new_props.prev_procedure_list && new_props.prev_procedure_list.length > 0) {\r\n                const prev_list = new_props.prev_procedure_list\r\n                const temp = [];\r\n                for (let i = 0; i < prev_list.length; ++i) {\r\n                    temp.push({\r\n                        id: new_props.prev_procedure_list[i]._id,\r\n                        procedure_fee: new_props.prev_procedure_list[i].fee,\r\n                        procedure_discount: new_props.prev_procedure_list[i].discount,\r\n                        procedure_description: new_props.prev_procedure_list[i].description,\r\n                        type: 'previous'\r\n                    })\r\n                    if (i === prev_list.length - 1) {\r\n                        this.setState({ procedures_list: temp, loading_status: false }, () => this.handle_total_values())\r\n                    }\r\n                }\r\n            }\r\n            else if (new_props.prev_procedure_list && new_props.prev_procedure_list.length === 0) {\r\n                this.setState({ procedures_list: [], loading_status: false });\r\n            }\r\n            if (new_props.appointment_id) {\r\n                Axios.get(`${GET_APPOINTMENT_CHARGES}?tag=${new_props.appointment_id}`).then(res => {\r\n                    this.setState({\r\n                        consultancy_fee_text_input: { value: res.data.payload.consultancy === 0 ? \"\" : res.data.payload.consultancy.toString(), error: false },\r\n                        discount_text_input: { value: res.data.payload.discount === 0 ? \"\" : res.data.payload.discount.toString(), error: false },\r\n                        follow_up_text_input: { value: res.data.payload.follow_up === 0 ? \"\" : res.data.payload.follow_up.toString(), error: false },\r\n                        paid_text_input: { value: res.data.payload.paid === 0 ? \"\" : res.data.payload.paid.toString(), error: false }\r\n                    }, () => {\r\n                        this.handle_total_values()\r\n                    })\r\n                }).catch(err => {\r\n                    this.props.notify('error', '', err.toString())\r\n                })\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    handle_change = (e) => {\r\n        const that = this;\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => {\r\n            that.handle_total_values()\r\n        })\r\n    }\r\n\r\n    handle_total_values = () => {\r\n        let procedure_total = 0;\r\n        let procedure_discount = 0;\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            procedure_total += this.state.procedures_list[i].procedure_fee;\r\n            procedure_discount += this.state.procedures_list[i].procedure_discount;\r\n        }\r\n\r\n\r\n        const t_total = this.state.consultancy_fee_text_input.value.length > 0 ?\r\n            parseInt(this.state.consultancy_fee_text_input.value) : 0;\r\n        const t_discount = this.state.discount_text_input.value.length > 0 ?\r\n            parseFloat(this.state.discount_text_input.value) : 0;\r\n        const t_followup = this.state.follow_up_text_input.value.length > 0 ?\r\n            parseFloat(this.state.follow_up_text_input.value) : 0;\r\n\r\n        this.setState({\r\n            total: ((t_total + t_followup) - t_discount) + (procedure_total - procedure_discount),\r\n            minimum_payable: (t_total - t_discount) + (procedure_total - procedure_discount),\r\n            discount: t_discount + procedure_discount\r\n        })\r\n    }\r\n\r\n    show_procedures = () => {\r\n        return this.state.procedures_list.map((item, index) => {\r\n            return <ProcedureItem\r\n                key={index}\r\n                appointment_id={this.props.appointment_id}\r\n                data={item}\r\n                index={index}\r\n                save_opp={this.save_procedure}\r\n                delete_opp={this.delete_procedure} />\r\n        })\r\n    }\r\n\r\n    handle_close_modal = (type) => {\r\n        this.setState({\r\n            procedures_list: [],\r\n            consultancy_fee_text_input: { value: \"1500\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n            total: 0,\r\n            discount: 0\r\n        })\r\n        this.props.cancelProcedureModal()\r\n    }\r\n\r\n    handle_save_button_click = () => {\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if (this.state.procedures_list[i].type === 'new') {\r\n                this.props.notify('info', '', 'There is an unsaved procedure.')\r\n                return;\r\n            }\r\n        }\r\n\r\n        const payload = {\r\n            appointment_id: this.props.appointment_id,\r\n            consultancy: parseInt(this.state.consultancy_fee_text_input.value),\r\n            discount: parseInt(this.state.discount_text_input.value),\r\n            follow_up: parseInt(this.state.follow_up_text_input.value),\r\n            paid: parseInt(this.state.paid_text_input.value),\r\n        }\r\n        Axios.put(UPDATE_APPOINTMENT_CHARGES, payload).then(res => {\r\n            this.props.notify('success', '', res.data.message);\r\n            // this.handle_close_modal()\r\n        }).catch(err => {\r\n            this.props.notify('error', '', 'Changes could not be saved!' + err.toString());\r\n        })\r\n        // this.handle_close_modal()\r\n    }\r\n\r\n    handle_checkout_button_click = () => {\r\n        const paid = parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value)\r\n        if (paid < this.state.minimum_payable) {\r\n            this.props.notify('error', '', 'Payment is less that minimum payable amount.')\r\n            return;\r\n        }\r\n        else {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id\r\n            }\r\n            const that = this;\r\n            Axios.post(CHECKOUT_APPOINTMENT, payload).then(res => {\r\n                this.props.notify('info', '', res.data.message)\r\n                // this.props.update_appointment(this.props.appointment_id)\r\n\r\n                this.props.clear_todays_appointments();\r\n                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                setTimeout(() => {\r\n                    this.handle_close_modal();\r\n                }, 1000)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    that.props.notify('error', '', err.toString());\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.last_element.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    calculate_balance = () => {\r\n        if (this.state.paid_text_input.value.length > 0) {\r\n            return -1 * (this.state.total - parseInt(this.state.paid_text_input.value))\r\n        }\r\n        else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // this.handle_total_values();\r\n        return (\r\n            <Modal\r\n                visible={this.props.new_procedure_visibility}\r\n                onClickBackdrop={this.props.procedure_backDrop}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog modal-lg `}\r\n            >\r\n                <div className=\"modal-header d-flex flex-lg-row flex-column bg-teal-400\">\r\n                    <h5 className=\"modal-title\">Appointment details</h5>\r\n                    <div className=\"\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-secondary btn-sm btn-labeled btn-labeled-right pr-5 mr-1\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            // onClick={this.add_procedure_click}\r\n                            disabled\r\n                        >\r\n                            <b>\r\n                                <i className=\"icon-plus3\" />\r\n                            </b>\r\n                            Add FollowUp with appointments\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-dark btn-sm btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.add_procedure_click}\r\n                        >\r\n                            <b>\r\n                                <i className=\"icon-plus3\" />\r\n                            </b>\r\n                            Add Procedures\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-body pt-1\" style={{ height: '65vh', overflowY: 'auto', overflowX: 'hidden' }}>\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-lg-3 col-6 px-3\">\r\n                            <Inputfield\r\n                                id=\"consultancy_fee_text_input\"\r\n                                label_tag=\"Consultancy Fee\"\r\n                                icon_class=\"icon-cash3\"\r\n                                placeholder=\"Fee\"\r\n                                disabled={false}\r\n                                default_value={this.state.consultancy_fee_text_input.value}\r\n                                error={this.state.consultancy_fee_text_input.error}\r\n                                on_text_change_listener={this.handle_change}\r\n                                size=\"form-control-sm\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-6 px-3\">\r\n                            <Inputfield\r\n                                id=\"discount_text_input\"\r\n                                label_tag=\"Discount over total\"\r\n                                icon_class=\"icon-arrow-down132\"\r\n                                placeholder=\"Discount\"\r\n                                default_value={this.state.discount_text_input.value}\r\n                                error={this.state.discount_text_input.error}\r\n                                on_text_change_listener={this.handle_change}\r\n                                size=\"form-control-sm\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-6 px-3 border-right\">\r\n                            <Inputfield\r\n                                id=\"follow_up_text_input\"\r\n                                label_tag=\"Follow ups Fee\"\r\n                                icon_class=\"icon-loop\"\r\n                                placeholder=\"Follow ups Fee\"\r\n                                custom_classes=\"\"\r\n                                disabled={false}\r\n                                default_value={this.state.follow_up_text_input.value}\r\n                                error={this.state.follow_up_text_input.error}\r\n                                on_text_change_listener={this.handle_change}\r\n                                size=\"form-control-sm\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-lg-3 col-6 px-3 \">\r\n                            <Inputfield\r\n                                id=\"paid_text_input\"\r\n                                label_tag=\"Paid\"\r\n                                icon_class=\"icon-cash3\"\r\n                                placeholder=\"Fee paid\"\r\n                                custom_classes=\"\"\r\n                                disabled={false}\r\n                                default_value={this.state.paid_text_input.value}\r\n                                error={this.state.paid_text_input.error}\r\n                                on_text_change_listener={this.handle_change}\r\n                                size=\"form-control-sm\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <hr className=\"mt-1 mb-1\" />\r\n\r\n                    {\r\n                        this.state.loading_status ? <div className={`d-flex justify-content-center`}><Loading size={150} /></div> :\r\n                            <div className=\"table-responsive px-1\">\r\n                                <table className=\"table table-bordered table-hover\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className={`border-0`}>Procedure reason</th>\r\n                                            <th className={`border-0`}>Charges</th>\r\n                                            <th className={`border-0`}>Discount</th>\r\n                                            <th className={`border-0`}>Actions</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            this.show_procedures()\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                    }\r\n\r\n\r\n                    <div style={{ float: \"left\", clear: \"both\" }}\r\n                        ref={(el) => { this.last_element = el; }}>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer d-flex flex-lg-row flex-column border border-top pt-3\">\r\n                    <div className=\"mr-auto\">\r\n                        <span className=\"badge badge-light badge-striped badge-striped-left border-left-teal-400\" >\r\n                            <span className=\"h6 font-weight-bold mr-1\">Total: {this.state.total}</span>\r\n                        </span>\r\n                        <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                            <span className=\"h6 font-weight-bold mr-1\">Discount: {this.state.discount}</span>\r\n                        </span>\r\n                        <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                            <span className=\"h6 font-weight-bold mr-1\">Paid: {this.state.paid_text_input.value.length > 0 ? this.state.paid_text_input.value : 0}</span>\r\n                        </span>\r\n                        <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                            <span className=\"h6 font-weight-bold mr-1\">Bal: {this.calculate_balance()}</span>\r\n                        </span>\r\n                        {/* <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                            <span className=\"h6 font-weight-bold mr-1\">Due: {this.state.minimum_payable}</span>\r\n                        </span> */}\r\n                    </div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn bg-danger btn-labeled btn-labeled-right pr-5 mt-1\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_close_modal}\r\n                    >\r\n                        <b><i className=\"icon-cross\" /></b>\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-dark btn-labeled btn-labeled-right pr-5 mt-1\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_save_button_click}\r\n                    >\r\n                        <b><i className=\"icon-floppy-disk\" /></b>\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 mt-1\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_checkout_button_click}\r\n                    >\r\n                        <b><i className=\"icon-checkmark2\" /></b>\r\n                        Checkout\r\n                    </button>\r\n                </div>\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { notify, update_appointment, load_todays_appointments, clear_todays_appointments })(ProcedureModal);","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap4-modal\";\nimport LOGO from '../../../../resources/images/LOGO.png';\nimport Axios from 'axios';\nimport { APPOINTMENTS_INVOICE } from '../../../../shared/rest_end_points';\nimport Loading from '../../../../shared/customs/loading/loading';\nimport ReactToPrint from 'react-to-print';\n\n\nclass Invoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            loading: true,\n        }\n    }\n\n    componentWillReceiveProps(new_props, new_state) {\n        if (new_props.modal_visibility === true) {\n            console.log('fetching data')\n            Axios.get(`${APPOINTMENTS_INVOICE}?tag=${new_props.appointment_id}`).then(res => {\n                console.log('fetched', res.data)\n                this.setState({ data: res.data.payload, loading: false })\n            })\n        }\n    }\n\n    get_total = () => {\n        if (this.state.data !== null) {\n            const procedures = parseInt(this.state.data.appointment_charges.procedures);\n            const consultancy = parseInt(this.state.data.appointment_charges.consultancy);\n            const follow_up = parseInt(this.state.data.appointment_charges.follow_up);\n            const discount = parseInt(this.state.data.appointment_charges.discount);\n\n            return procedures + consultancy + follow_up - discount;\n        }\n        return 0;\n    }\n\n    render() {\n        const table_header = <div className=\"row\">\n            <div className=\"col-6\">\n                <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\n            </div>\n            {this.state.data ?\n                <div className=\"col-6\">\n\n                    <div className=\"table-responsive card\">\n                        <table className=\"table table-hover mb-0\">\n                            <tbody>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">MRN# </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{this.props.appointment_id}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Patient </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${this.state.data.patient.first_name} ${this.state.data.patient.last_name}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Contact</span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${this.state.data.patient.phone_number}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Doctor </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${this.state.data.doctor.first_name} ${this.state.data.doctor.last_name}`}</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div> : <Loading size={150} />\n            }\n        </div>\n        const procedures_table = this.state.data !== null && this.state.data.appointment_procedures.length > 0 ? <div className=\"table-responsive card\">\n            <table className=\"table table-hover mb-0\">\n                <thead>\n                    <tr>\n                        <th className=\"py-1\">\n                            <b>Description</b>\n                        </th>\n                        <th className=\"py-1\">\n                            <b>Charges</b>\n                        </th>\n                        <th className=\"py-1\">\n                            <b>Discount</b>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.data ?\n                            this.state.data.appointment_procedures.map((item, i) => {\n                                return (<tr key={i} >\n                                    <td className=\"py-1\">\n                                        {item.description}\n                                    </td>\n                                    <td className=\"py-1\">\n                                        {item.fee}\n                                    </td>\n                                    <td className=\"py-1\">\n                                        {item.discount}\n                                    </td>\n                                </tr>)\n\n                            }) : 'No procedure found'\n                    }\n                </tbody>\n            </table>\n        </div> : ''\n        const appointment_charges_table = <div className=\"table-responsive card\">\n            <table className=\"table table-hover mb-0\">\n                <tbody>\n                    <tr>\n                        <td className=\"py-1\">Procedures total fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.procedures : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Consultancy fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.consultancy : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Follow up fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.follow_up : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Discount on Appointment charges</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.discount : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1 h5\">Total</td>\n                        <td className=\"py-1 h5\">\n                            {this.get_total()}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        return (\n            <Modal visible={this.props.modal_visibility}\n                onClickBackdrop={this.props.close_modal}\n                fade={true}\n                dialogClassName={`modal-dialog modal-lg `}>\n                <div className=\"modal-body pb-0\" ref={el => (this.componentRef = el)}>\n                    <div className=\"container-fluid\" >\n                        {table_header}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                {this.state.data !== null && this.state.data.appointment_procedures.length > 0 ? <h4 className=\"font-weight-bold\">Procedures</h4> : ''}\n                                {procedures_table}\n                                <h4 className=\"font-weight-bold\">Appointment Charges</h4>\n                                {appointment_charges_table}\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-danger btn-labeled btn-labeled-right btn-sm pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={this.props.close_modal}\n                    >\n                        <b><i className=\"icon-cross\" /></b>Close</button>\n                    <ReactToPrint\n                        trigger={() => <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5\"\n                            style={{ textTransform: \"inherit\" }}\n                        >\n                            <b><i className=\"icon-printer2\" /></b>Print</button>}\n                        content={() => this.componentRef}\n                    />\n\n                </div>\n            </Modal>\n        )\n    }\n}\nexport default Invoice","import React, {Component} from 'react';\nimport moment from 'moment'\nimport { SEARCH_USER_REQUEST, UPDATE_APPOINTMENT_URL, APPOINTMENTS_UPDATE, USERS_SEARCH_BY_CREDENTIALS } from '../../../../shared/rest_end_points';\nimport Axios from 'axios';\nimport Loading from '../../../../shared/customs/loading/loading';\nimport Select from 'react-select'\nimport Modal from 'react-bootstrap4-modal';\nimport DateTimePicker from 'react-datetime';\nimport { notify, load_todays_appointments, clear_todays_appointments } from '../../../../actions';\nimport { connect } from \"react-redux\";\nimport Inputfield from '../../../../shared/customs/inputfield/inputfield';\n\nclass UpdateAppointmentModal extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            patients: [{\n                            id: 'appointment_patient_selection',\n                            reference: this.props.payload.patient_ref.id,\n                            label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n                        }],\n            doctors: [{\n                            id: 'appointment_doctor_selection',\n                            reference: this.props.payload.doctor_ref.id,\n                            label: `${this.props.payload.doctor_ref.first_name} ${this.props.payload.doctor_ref.last_name} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n                        }],\n            appointment_patient: { value: this.props.payload.patient_ref.id, error: false },\n            appointment_doctor: { value: this.props.payload.doctor_ref.id, error: false },\n            appointment_reason: { value: this.props.payload.reason, error: false },\n            appointment_date: { value: moment.utc(this.props.payload.date).format('ll'), error: false },\n            appointment_time: { value: this.props.payload.time, error: false },\n            \n            patient_select_value: {\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            },\n            doctor_select_value: {\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `${this.props.payload.doctor_ref.first_name} ${this.props.payload.doctor_ref.last_name} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            },\n        };\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post'){\n                return await Axios.post(_url, _data, { headers: { 'code-medicine': localStorage.getItem('user') } })\n            }\n            else if (_method === 'get') {\n                return await Axios.get(_url, { headers: { 'code-medicine': localStorage.getItem('user') } })\n            }\n        }\n        catch (err) {\n            this.props.notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    async render_users(string,role) {\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        const res_users = await this.request({}, query, 'get')\n        let temp_users = []\n        if (role === 'patient'){\n            temp_users.push({\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            })\n        }\n        else{\n            temp_users.push( {\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `${this.props.payload.doctor_ref.first_name} ${this.props.payload.doctor_ref.last_name} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            })\n        }\n        if (res_users.status === 200) {\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `appointment_${role.toLowerCase()}_selection`,\n                    reference: t_user._id,\n                    label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient'){\n                this.setState({ patients: temp_users })\n            }\n            else if (role === 'Doctor'){\n                this.setState({ doctors: temp_users })\n            }\n        }\n    }\n\n    populate_patients = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string,'Patient')\n        }\n        else{\n            this.setState({ patients: [{\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number}`\n            }] })\n            \n        }\n    }\n\n    populate_doctors = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string,'Doctor')\n        }\n        else{\n            this.setState({ doctors: [{\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `${this.props.payload.doctor_ref.first_name} ${this.props.payload.doctor_ref.last_name} | ${this.props.payload.doctor_ref.phone_number}`\n            }] })\n            \n        }\n    }\n\n\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n\n            switch (e.id) {\n                case 'appointment_patient_selection':\n                    const val_patient = {\n                        id: 'appointment_patient_selection',\n                        reference: e.reference,\n                        label: e.label\n                    }\n                    this.setState({ appointment_patient: { value: e.reference, error: false }, patient_select_value: val_patient })\n                    break;\n                case 'appointment_doctor_selection':\n                    const val_doctor = {\n                        id: 'appointment_doctor_selection',\n                        reference: e.reference,\n                        label: e.label\n                    }\n                    this.setState({ appointment_doctor: { value: e.reference, error: false }, doctor_select_value: val_doctor })\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'appointment_patient_selection':\n                    this.setState({ appointment_patient: { value: '', error: false }, patient_select_value: '' })\n                    break;\n                case 'appointment_doctor_selection':\n                    this.setState({ appointment_doctor: { value: '', error: false }, doctor_select_value: '' })\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'appointment_reason_text_input':\n                this.setState({ appointment_reason: { value: e.target.value, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_apointment_date_change = (e) => {\n        if (e === '')\n            this.setState({ appointment_date: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ appointment_date: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    on_apointment_time_change = (e) => {\n\n        if (e === '')\n            this.setState({ appointment_time: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('LT');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ appointment_time: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    check_input = (input,required = true,only_alpha=false,only_numbers=false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required  && input === ''){\n            return true;\n        }\n        if (only_alpha && input !== '' && !input.match(alphabets)){\n            return true;\n        }\n        if (only_numbers && input !== '' && !input.match(numbers)){\n            return true;\n        }\n        return false;\n    }\n\n    on_submit = () => {\n        this.setState({ loading_status: true })\n        let error = false\n        if (this.check_input(this.state.appointment_patient.value,true)){\n            this.setState({appointment_patient: { value: this.state.appointment_patient.value, error: true}})\n            error = true\n        }\n        if (this.check_input(this.state.appointment_doctor.value,true)){\n            this.setState({appointment_doctor: { value: this.state.appointment_doctor.value, error: true}})\n            error = true\n        }\n        if (this.check_input(this.state.appointment_reason.value)){\n            this.setState({appointment_reason: { value: this.state.appointment_reason.value, error: true}})\n            error = true\n        }\n        if (this.check_input(this.state.appointment_date.value,true)){\n            this.setState({appointment_date: { value: this.state.appointment_date.value, error: true}})\n            error = true\n        }\n        if (this.check_input(this.state.appointment_time.value,true)){\n            this.setState({appointment_time: { value: this.state.appointment_time.value, error: true}})\n            error = true\n        }\n\n        if (error === true){\n            this.props.notify('error','','Invalid inputs')\n            this.setState({ loading_status: false })\n            return\n        }\n        localStorage.setItem('h7vjys8yyd12',this.props.id)\n        const data = {\n            appointment_id: this.props.payload.visit_id,\n            doctor_id: this.state.appointment_doctor.value,\n            appointment_date: `${moment(this.state.appointment_date.value).format('YYYY-MM-DD')}T${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\n            appointment_time: this.state.appointment_time.value,\n            appointment_description: this.state.appointment_reason.value,\n        }\n        console.log('data update', data)\n        Axios.put(APPOINTMENTS_UPDATE, data).then(res => {\n            console.log('res',res)\n            this.props.notify('success', '', res.data.message)\n            this.setState({ loading_status: false })\n            this.props.clear_todays_appointments()\n            this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\n            setTimeout(() => this.props.close(),2000);\n        }).catch(err => {\n            console.log('res err',err)\n            this.props.notify('error','', `Network error ${err.toString()}`)\n            this.setState({ loading_status: false })\n        })\n    }\n\n    render(){ \n        const add_appointment_modal_body = \n            <div className=\"modal-body\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        Select or add user\n                        <div className=\"form-group form-group-feedback form-group-feedback-right\">\n                            <Select\n                                id=\"appointment_patient_selection\"\n                                isClearable\n                                menuPlacement=\"auto\"\n                                isDisabled\n                                options={this.state.patients}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Select Patient\"\n                                onInputChange={e => this.populate_patients(e)}\n                                onChange={e => this.on_selected_changed(e, \"appointment_patient_selection\")}\n                                value={this.state.patient_select_value}\n                                styles={{\n                                    container: base => ({\n                                    ...base,\n                                    backgroundColor: this.state.appointment_patient.error? '#FF0000':'',\n                                    padding: 1,\n                                    borderRadius: 5\n                                    }),\n                                }}\n                            />\n                            <div className=\"form-control-feedback\">\n                                <i className=\"icon-user-check text-muted\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        Which doctor will be suitable\n                        <div className=\"form-group form-group-feedback form-group-feedback-right\">\n                            \n                            <Select\n                                id=\"appointment_doctor_selection\"\n                                isClearable\n                                options={this.state.doctors}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Select a Doctor\"\n                                menuPlacement=\"auto\"\n                                onInputChange={e => this.populate_doctors(e)}\n                                onChange={e => this.on_selected_changed(e, 'appointment_doctor_selection')}\n                                value={this.state.doctor_select_value}\n                                styles={{\n                                    container: base => ({\n                                    ...base,\n                                    backgroundColor: this.state.appointment_doctor.error? '#FF0000':'',\n                                    padding: 1,\n                                    borderRadius: 5\n                                    }),\n                                }}\n                            />\n                            <div className=\"form-control-feedback\">\n                                <i className=\"icon-user-tie text-muted\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <Inputfield \n                            id=\"appointment_reason_text_input\"\n                            label_tag={'What is the reason for the visit'}\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            placeholder=\"Enter visit reason\"\n                            field_type=\"text-area\"\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.appointment_reason.value}\n                            error={this.state.appointment_reason.error}\n                        />\n                        {/* <div className=\"form-group form-group-float\">\n                            <div className=\"form-group-float-label is-visible mb-1\">\n                                What is the reason for the visit\n                            </div>\n                            <textarea rows={5} cols={5}\n                                id=\"appointment_reason_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Reason for visit\"\n                                onChange={this.on_text_field_change}\n                                value={this.state.appointment_reason.value} />\n                        </div> */}\n                    </div>\n                </div>\n                <div className=\"row mb-1\">\n                    <div className=\"col-6\">\n                        \n                    </div>\n                    <div className=\"col-6\">\n                        What is the date and time of appointment\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        \n                    </div>\n                    <div className=\"col-md-3\">\n                        <DateTimePicker id=\"dob_text_input\"\n                            onChange={this.on_apointment_date_change}\n                            className=\"clock_datatime_picker\"\n                            inputProps={{ placeholder: 'Select Date', width: '100%', className: 'form-control' }}\n                            input={true}\n                            dateFormat={'ll'}\n                            timeFormat={false}\n                            closeOnSelect={true}\n                            value={this.state.appointment_date.value}\n                        />\n                    </div>\n                    <div className=\"col-md-3\">\n                        <DateTimePicker id=\"dob_text_input\"\n                            onChange={this.on_apointment_time_change}\n                            className=\"clock_datatime_picker\"\n                            inputProps={{ placeholder: 'Select Time', width: '100%', className: 'form-control' }}\n                            input={true}\n                            dateFormat={false}\n                            timeFormat={true}\n                            closeOnSelect={true}\n                            strictParsing={true}\n                            value={this.state.appointment_time.value}\n                        />\n                    </div>\n                </div>\n            </div>\n        return(    \n                <Modal\n                    visible={this.props.visibility}\n                    onClickBackdrop={() => this.props.close()}\n                    fade={true}\n                    dialogClassName={`modal-dialog-centered modal-lg`}>\n\n                    <div className=\"modal-header bg-teal-400\">\n                        <h5 className=\"modal-title\">New Appointment</h5>\n                    </div>\n                    {this.state.loading_status ? <Loading size={150}/> : add_appointment_modal_body}\n                    <div className=\"modal-footer\">\n                        <button\n                            type=\"button\"\n                            className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={() => this.props.close()}>\n                            <b><i className=\"icon-cross\"></i></b>\n                            Cancel\n                        </button>\n                        <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.on_submit}>\n                            <b><i className=\"icon-plus3\"></i></b>\n                            Update\n                        </button>\n                    </div>\n                </Modal>            \n        )\n    }\n}\nexport default connect(null, { notify, load_todays_appointments, clear_todays_appointments })(UpdateAppointmentModal);","import React, { Component, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport UpdateAppointmentModal from './appointment/update_appointment_modal';\r\n\r\n// import '../../../../node_modules/semantic-ui-css/semantic.min.css';\r\n\r\nclass TodaysPatientRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toggle: false,\r\n            toggle_icon: 'icon-eye-plus',\r\n            row_data: this.props.row_data,\r\n            hidden_data: this.props.hidden_data,\r\n            hidden_header_elements: this.props.hidden_header_elements,\r\n            hidden_header_color: this.props.hidden_header_color,\r\n            col_span: '',\r\n            appointment_time_difference_from_now: moment(this.props.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").fromNow(),\r\n\r\n            update_appointment_modal_visibility: false,\r\n        }\r\n    }\r\n    toggle_row = () => {\r\n        if (this.state.toggle)\r\n            this.setState({ toggle: false, toggle_icon: 'icon-eye-plus' })\r\n        else\r\n            this.setState({ toggle: true, toggle_icon: 'icon-eye-minus' })\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props.row_data);\r\n        // this.setState({row_data: this.props.data})\r\n        this.setState({ col_span: this.props.columns })\r\n        setInterval(() => {\r\n            this.setState({ appointment_time_difference_from_now: moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").fromNow() })\r\n        }, 60000)\r\n    }\r\n\r\n    view_user = (id) => {\r\n        this.props.open_user_view_modal(id)\r\n    }\r\n\r\n    render_read_only_cols = () => {\r\n        const options = {\r\n            charges: <Popup\r\n                        trigger={\r\n                            <button className=\"btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon \"\r\n                                onClick={() => this.props.open_procedure_modal(this.props.row_data._id)}>\r\n                                <i className=\"icon-plus2\"></i>\r\n                            </button>}\r\n                        content={\r\n                            <div className=\"card card-body bg-teal-400 text-white shadow mr-1 mt-3 py-1\">\r\n                                View or Add procedures\r\n                            </div>\r\n                        }\r\n                        flowing\r\n                        position='left center'\r\n                    />,\r\n            invoice: <Popup\r\n                        trigger={\r\n                            <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon ml-2`}\r\n                                onClick={() => this.props.open_invoice_modal(this.props.row_data._id)}>\r\n                                <i className={`icon-file-text2`}></i>\r\n                            </button>}\r\n                        content={\r\n                            <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                Generate Invoice\r\n                            </div>\r\n                        }\r\n                        flowing\r\n                        // hoverable\r\n                        position='top left'\r\n                    />,\r\n            edit: <Popup\r\n                        trigger={\r\n                            <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon ml-2`}\r\n                                onClick={() => this.setState({ update_appointment_modal_visibility: true })}    >\r\n                                <i className={`icon-pencil3`}></i>\r\n                            </button>}\r\n                        flowing\r\n                        // hoverable\r\n                        content={\r\n                            <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                Edit appointment\r\n                            </div>\r\n                        }\r\n                        position='top center'\r\n                    />,\r\n            follow_ups: <Popup\r\n                            trigger={\r\n                                <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon ml-2`}\r\n                                    onClick={() => alert('There are no follow ups')}    >\r\n                                    <i className={`icon-loop`}></i>\r\n                                </button>}\r\n                            flowing\r\n                            // hoverable\r\n                            content={\r\n                                <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                    Follow ups\r\n                                </div>\r\n                            }\r\n                            position='top right'\r\n                        />,\r\n            details: <Popup\r\n                        trigger={\r\n                            <button className={`btn btn-outline btn-sm bg-dark border-dark text-dark btn-icon ml-2`}\r\n                                onClick={this.toggle_row}>\r\n                                <i className={this.state.toggle_icon}></i>\r\n                            </button>}\r\n                        flowing\r\n                        // hoverable\r\n                        content={\r\n                            <div className={`card card-body bg-dark text-white shadow ml-1 mt-3 py-1`}>\r\n                                Show more details\r\n                            </div>\r\n                        }\r\n                        position='right center'\r\n                    />\r\n        }\r\n\r\n        return (\r\n            // <div>{this.state.row_data}</div>\r\n            <div className={`container-fluid`} >\r\n                {/* {this.props.reference} */}\r\n                <div className={`row`}>\r\n                    {/* Patient name and phone number */}\r\n                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-left-teal-400 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                        <div className={`btn btn-outline bg-teal-400 text-teal-400 btn-block jackInTheBox animated`}\r\n                            style={{ verticalAlign: 'center' }}\r\n                            onClick={() => this.view_user(this.state.row_data.patient['id'])}\r\n                            >\r\n                            <span className={`img-fluid rounded-circle text-white bg-teal-400 h3 p-2`} >\r\n                                {this.state.row_data.patient['first_name'].charAt(0).toUpperCase() + this.state.row_data.patient['last_name'].charAt(0).toUpperCase()}\r\n                            </span>\r\n                            <h4 className=\"mt-2\">{this.state.row_data.patient['first_name'] + ' ' + this.state.row_data.patient['last_name']}</h4>\r\n                            <span><i className=\"icon-phone-wave mr-1\"></i> {this.state.row_data.patient['phone_number']}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Appointment Time column */}\r\n                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-bottom-sm-2 border-left-teal-400 border-right-teal-400 border-right-2 btn-block d-flex align-items-center justify-content-center text-center`} >\r\n                        <div className={` jackInTheBox animated`} >\r\n                            <h1 className=\"mb-0\">{moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('hh:mm a')}</h1>\r\n                            <p>{this.state.appointment_time_difference_from_now}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* appointment details */}\r\n                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                        {/* Appointment date and time */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 font-weight-bold h6\">\r\n                                Appointment with <Link className=\"text-teal-400 font-weight-bold ml-1\" to={\"#\"}\r\n                                    onClick={() => this.view_user(this.state.row_data.doctor['id'])}>\r\n                                    {this.state.row_data.doctor['first_name'] + ' ' + this.state.row_data.doctor['last_name']}\r\n                                    <i className=\"icon-user-tie ml-1\"></i>\r\n                                </Link>\r\n                                <span className=\"text-muted float-lg-right float-md-right float-left\">\r\n                                    {`${moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LL')}`}\r\n                                </span> \r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Reason */}\r\n                        <div className={`row`}>\r\n                            <div className={`col-12 h6`}>\r\n                                <span className=\"font-weight-bold\">Reason</span>\r\n                                <span className=\" h6 text-muted\">\r\n                                    {` ${this.state.row_data.appointment_description.length > 25 ? this.state.row_data.appointment_description.substring(0, 25) + '...' : this.state.row_data.appointment_description}`}\r\n                                </span>\r\n                                <span className={`badge badge-${this.state.row_data.appointment_status.info === 'checked out'? 'primary':'danger'} float-right`}>\r\n                                    {this.state.row_data.appointment_status.info}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Actions */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {!this.state.row_data.appointment_status.is_paid?\r\n                                <Fragment>\r\n                                    {options['charges']}\r\n                                    {options['invoice']}\r\n                                    {options['edit']}\r\n                                    {options['follow_ups']}\r\n                                    {options['details']}\r\n                                </Fragment>:\r\n                                <Fragment>\r\n                                    {options['invoice']}\r\n                                    {options['follow_ups']}\r\n                                    {options['details']}\r\n                                </Fragment>}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render_hidden_elements = () => {\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <h5 className=\"font-weight-semibold\">Reason of visit</h5>\r\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\r\n                    <p className=\"mb-1\">\r\n                        {this.state.hidden_data.appointment_description}\r\n                    </p>\r\n                    <footer className=\"blockquote-footer\">Perscription</footer>\r\n                </blockquote>\r\n            </div>\r\n        )\r\n    }\r\n    render_hidden_header_elements = () => {\r\n        return this.state.hidden_header_elements.map((str, i) => {\r\n            return <Fragment key={i}>{str}</Fragment>\r\n        })\r\n    }\r\n\r\n    close_update_appointment_modal = () => {\r\n        this.setState({ update_appointment_modal_visibility: false })\r\n    }\r\n\r\n    open_update_appointment_modal = () => {\r\n        this.setState({ update_appointment_modal_visibility: true })\r\n    }\r\n\r\n    call_back_update_appointment_modal = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <tr >\r\n                    <td colSpan={this.state.col_span}>\r\n                        {\r\n                            this.render_read_only_cols()\r\n                        }\r\n                    </td>\r\n                    \r\n                </tr>\r\n                <tr className=\"\">\r\n                    <td colSpan={`${this.state.col_span + 1}`} className={`${this.state.toggle ? '' : 'py-0'}`}>\r\n                        <Collapse isOpen={this.state.toggle} >\r\n                            <div className=\"float-right\">\r\n                                <Link onClick={this.toggle_row} to=\"#\" className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                                    <i className=\"icon-cross3 icon-2x\"></i>\r\n                                </Link>\r\n                            </div>\r\n                            {\r\n                                this.render_hidden_elements()\r\n                            }\r\n                        </Collapse>\r\n                        <UpdateAppointmentModal\r\n                            id={this.props.id}\r\n                            visibility={this.state.update_appointment_modal_visibility}\r\n                            close={this.close_update_appointment_modal}\r\n                            call_back={this.call_back_update_appointment_modal}\r\n                            state={'update'}\r\n                            payload={{\r\n                                visit_id: this.state.row_data._id,\r\n                                patient_ref: this.state.row_data.patient,\r\n                                doctor_ref: this.state.row_data.doctor,\r\n                                reason: this.state.row_data['appointment_description'],\r\n                                date: this.state.row_data.appointment_date,\r\n                                time: this.state.row_data.appointment_time\r\n                            }} />\r\n                    </td>\r\n\r\n                </tr>\r\n                {/* update appointment modal */}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default TodaysPatientRow","import React, { Component } from 'react';\r\n// import NO_PICTURE from '../../resources/images/placeholder.jpg'\r\nimport moment from 'moment';\r\n// import { classNameColors } from '../constant_data';\r\n\r\nclass User extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: this.props.data,\r\n            size: this.props.size,\r\n\r\n            text_size: '',\r\n            icon_size: '',\r\n            button_size: '',\r\n            heading_size: '',\r\n\r\n        }\r\n    }\r\n\r\n    calculate_age = (dob1) => {\r\n        var today = new Date();\r\n        var birthDate = new Date(dob1);  // create a date object directly from `dob1` argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        return age_now;\r\n    }\r\n\r\n    componentDidMount(){\r\n        switch(this.state.size){\r\n            case 'large':\r\n                this.setState({\r\n                    text_size: 'h3',\r\n                    icon_size: 'icon-2x',\r\n                    button_size: 'btn-lg',\r\n                    heading_size: 'h1 font-weight-bold'\r\n                })\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    render(){\r\n\r\n        const store = this.state.data\r\n        const name = store['first_name'] + ' ' + store['last_name']\r\n        const gender = store['gender']\r\n        const date_of_birth = store['date_of_birth']\r\n        const email = store['email']\r\n        const phone = store['phone_number']\r\n\r\n        const icon = this.state.icon_size\r\n        const text = this.state.text_size\r\n        return(\r\n            <div className=\"media\">\r\n                <div className=\"mr-3\">\r\n                    <div className={`img-fluid rounded-circle text-white bg-teal-400 h3 d-flex justify-content-center align-items-center p-2`} \r\n                        style={{height: '50px', width: '50px'}}// src={NO_PICTURE} \r\n                        >\r\n                        {store['first_name'].charAt(0) + store['last_name'].charAt(0)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                    <h5 className={`mb-0 ${this.state.heading_size}`}>{name} {gender === 'Male'? \r\n                                            <span className=\"badge badge-primary\">\r\n                                                <small>Male</small>\r\n                                            </span>:\r\n                                            <span className=\"badge bg-pink-400\">\r\n                                               <small>Female</small>\r\n                                            </span>}</h5>\r\n                    <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <span className={`${text}`}><i className={`icon-person ${icon}`}></i> {this.calculate_age(date_of_birth)} years old</span>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                        <span className={`mt-1 ${text}`}><i className={`icon-calendar3 mr-2 ${icon}`}></i> {moment(new Date(date_of_birth).toString()).format('MMM Do YY')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6 col-sm-12\">  \r\n                            <span className={`mt-1 ${text}`}><i className={`icon-phone-wave mr-2 ${icon}`}></i>{phone}</span>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <span className={`mt-1 ${text}`}><i className={`icon-envelop5 mr-2 ${icon}`}></i>{email}</span>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default User","import React from 'react'\r\nimport Modal from \"react-bootstrap4-modal\";\r\nimport Loading from \"../customs/loading/loading\";\r\nimport User from '../customs/user/user';\r\nimport { Link } from 'react-router-dom';\r\nimport '../customs/Animations/animations.css'\r\n\r\nfunction UserPreviewModal(props) {\r\n\r\n\r\n    function handle_on_click_back_drop() {\r\n        props.on_click_back_drop()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal visible={props.visibility} \r\n                onClickBackdrop={() => handle_on_click_back_drop()}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog-centered modal-lg `}\r\n                >\r\n                \r\n                <div className=\"modal-body\">\r\n                    <div className=\"float-right\">\r\n                        <Link onClick={() => handle_on_click_back_drop()} \r\n                            to=\"#\" \r\n                            className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                            <i className=\"icon-cross3 icon-2x\"></i>\r\n                        </Link>\r\n                    </div>\r\n                    {\r\n                        props.modal_props === null? <Loading size={150} />: <User data={props.modal_props} size=\"large\"/> \r\n                    }\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                \r\n                </div>\r\n                \r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPreviewModal;\r\n","import React, { Component } from 'react';\r\nimport { BLOOD_GROUPS_OPTIONS, ROLES_OPTIONS, GENDER_OPTIONS } from '../constant_data';\r\nimport { REGISTER_USER_REQUEST_BY_ADMIN, ADMIN_CREATE_PATIENT } from '../rest_end_points';\r\nimport Axios from 'axios';\r\nimport Loading from '../customs/loading/loading';\r\n// import DateTimePicker from 'react-datetime';\r\nimport Select from 'react-select'\r\nimport { connect } from \"react-redux\";\r\nimport { notify } from '../../actions';\r\nimport Inputfield from '../customs/inputfield/inputfield';\r\n// import NO_PICTURE from '../../resources/images/placeholder.jpg';\r\nimport Modal from 'react-bootstrap4-modal';\r\n// import { Link } from 'react-router-dom';\r\n\r\nclass NewUserModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading_status: false,\r\n\r\n            user_first_name: { value: '', error: false },\r\n            user_last_name: { value: '', error: false },\r\n            user_email: { value: '', error: false },\r\n            user_gender: { value: 'Male', error: false },\r\n            user_dob: { value: '', error: false },\r\n            user_blood_group: { value: 'Unknown', error: false },\r\n            user_role: { value: 'Patient', error: false },\r\n            user_phone_number: { value: '', error: false },\r\n            user_cnic: { value: '', error: false },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    on_text_field_change = (e) => {\r\n        switch (e.target.id) {\r\n            case 'user_first_name_text_input':\r\n                this.setState({ user_first_name: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'user_last_name_text_input':\r\n                this.setState({ user_last_name: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'user_cnic_text_input':\r\n                if (e.target.value.length <= 13)\r\n                    this.setState({ user_cnic: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'user_phone_number_text_input':\r\n                if (e.target.value.length <= 11)\r\n                    this.setState({ user_phone_number: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'user_email_text_input':\r\n                this.setState({ user_email: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'user_address_text_input':\r\n                this.setState({ user_address: { value: e.target.value, error: false } })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    on_selected_changed = (e, actor) => {\r\n        if (e !== null) {\r\n            switch (e.id) {\r\n                case 'blood_group_selection':\r\n                    this.setState({ user_blood_group: { value: e.label, error: false } })\r\n                    break;\r\n                case 'gender_selection':\r\n                    this.setState({ user_gender: { value: e.label, error: false } })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (actor) {\r\n                case 'blood_group_selection':\r\n                    this.setState({ user_blood_group: { value: '', error: false } })\r\n                    break;\r\n                case 'gender_selection':\r\n                    this.setState({ user_gender: { value: '', error: false } })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    on_user_date_of_birth_change = (e) => {\r\n        if (e === '')\r\n            this.setState({ user_dob: { value: '', error: false } })\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ user_dob: { value: configured_date, error: false } })\r\n            }\r\n        }\r\n    }\r\n\r\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\r\n        const alphabets = /^[A-Za-z]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (required && input === '') {\r\n            return true;\r\n        }\r\n        if (only_alpha && input !== '' && !input.match(alphabets)) {\r\n            return true;\r\n        }\r\n        if (only_numbers && input !== '' && !input.match(numbers)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    check_hard_constraints = (input, include = \"\", length_check = \"default\", val = -1) => {\r\n        if (!input.includes(include)) { return true; }\r\n        switch (length_check) {\r\n            case 'eq':\r\n                if (input.length !== val) { return true }\r\n                break;\r\n            case 'min':\r\n                if (input.length < val) { return true }\r\n                break;\r\n            case 'max':\r\n                if (input.length > val) { return true }\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_submit = async () => {\r\n        this.setState({ loading_status: true })\r\n        let error = false\r\n        if (this.check_input(this.state.user_first_name.value, true, true, false)) {\r\n            this.setState({ user_first_name: { value: this.state.user_first_name.value, error: true } })\r\n            error = true\r\n            // this.props.notify('error','','First name is required')\r\n        }\r\n        if (this.check_input(this.state.user_last_name.value, true, true)) {\r\n            this.setState({ user_last_name: { value: this.state.user_last_name.value, error: true } })\r\n            error = true\r\n            // this.props.notify('error','','Last name is required')\r\n        }\r\n        if (this.check_input(this.state.user_email.value, false, false, false) &&\r\n            this.check_hard_constraints(this.state.user_email.value, \"@\")) {\r\n            this.setState({ user_email: { value: this.state.user_email.value, error: true } })\r\n            error = true\r\n            // this.props.notify('error','','Email is required')\r\n        }\r\n        if (this.check_input(this.state.user_phone_number.value, true, false, true) &&\r\n            this.check_hard_constraints(this.state.user_phone_number.value, \"\", \"eq\", 11)) {\r\n            this.setState({ user_phone_number: { value: this.state.user_phone_number.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.user_cnic.value, false, false, true) &&\r\n            this.check_hard_constraints(this.state.user_cnic.value, \"\", \"eq\", 13)) {\r\n            this.setState({ user_cnic: { value: this.state.user_cnic.value, error: true } })\r\n            error = true\r\n        }\r\n        // if (this.check_input(this.state.user_dob.value)) {\r\n        //     this.setState({ user_dob: { value: this.state.user_dob.value, error: true } })\r\n        //     error = true\r\n        // }\r\n        if (this.check_input(this.state.user_gender.value, true)) {\r\n            this.setState({ user_gender: { value: this.state.user_gender.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.user_blood_group.value, true)) {\r\n            this.setState({ user_blood_group: { value: this.state.user_blood_group.value, error: true } })\r\n            error = true\r\n        }\r\n\r\n        if (error === true) {\r\n            this.props.notify('error', '', 'Invalid inputs')\r\n            this.setState({ loading_status: false })\r\n            return\r\n        }\r\n        const data = {\r\n            first_name: this.state.user_first_name.value.trim(),\r\n            last_name: this.state.user_last_name.value.trim(),\r\n            phone_number: this.state.user_phone_number.value.trim(),\r\n            cnic: this.state.user_cnic.value.trim(),\r\n            role: this.state.user_role.value.trim(),\r\n            dob: this.state.user_dob.value,\r\n            gender: this.state.user_gender.value.trim(),\r\n            blood_group: this.state.user_blood_group.value.trim(),\r\n        }\r\n        Axios.post(ADMIN_CREATE_PATIENT, { admin_id: this.props.active_user._id, patient: data }).then(response => {\r\n            this.props.notify('success', '', response.data['message']);\r\n            this.setState({ loading_status: false }, () => {\r\n                this.close_modal()\r\n            })\r\n        }).catch(err => {\r\n            this.props.notify('error', '', 'No connection!' + err.toString())\r\n            this.setState({ loading_status: false })\r\n        })\r\n    }\r\n\r\n    close_modal = () => {\r\n        this.props.close()\r\n        this.props.call_back()\r\n\r\n    }\r\n\r\n    render() {\r\n        const add_user_modal_body = <div className=\"modal-body\">\r\n            <div className={`row`}>\r\n                <div className={`col-md-8`}>\r\n                    <div className={`row`}>\r\n                        <div className={`col-md-6 px-3`}>\r\n                            <Inputfield\r\n                                id={`user_first_name_text_input`}\r\n\r\n                                label_tag={'First name'}\r\n                                icon_class={'icon-user-check'}\r\n                                input_type={'text'}\r\n                                placeholder=\"Enter first name\"\r\n                                on_text_change_listener={this.on_text_field_change}\r\n                                default_value={this.state.user_first_name.value}\r\n                                error={this.state.user_first_name.error} />\r\n                        </div>\r\n                        <div className={`col-md-6 px-3`}>\r\n                            <Inputfield\r\n                                id={`user_last_name_text_input`}\r\n\r\n                                label_tag={'Last name'}\r\n                                icon_class={'icon-user-check'}\r\n                                input_type={'text'}\r\n                                placeholder=\"Enter last name\"\r\n                                on_text_change_listener={this.on_text_field_change}\r\n                                default_value={this.state.user_last_name.value}\r\n                                error={this.state.user_last_name.error} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={`row`}>\r\n                        <div className={`col-md-6 px-3`}>\r\n                            <Inputfield\r\n                                id={`user_phone_number_text_input`}\r\n\r\n                                label_tag={'Phone number'}\r\n                                icon_class={'icon-phone2'}\r\n                                input_type={'number'}\r\n                                placeholder=\"Enter phone number\"\r\n                                on_text_change_listener={this.on_text_field_change}\r\n                                default_value={this.state.user_phone_number.value}\r\n                                error={this.state.user_phone_number.error} />\r\n                        </div>\r\n                        <div className={`col-md-6  px-3`}>\r\n                            <Inputfield\r\n                                id={`user_dob_text_input`}\r\n                                label_tag={'Date of birth'}\r\n                                icon_class={'icon-calendar3'}\r\n                                placeholder=\"Date of birth\"\r\n                                input_type={'text'}\r\n                                field_type=\"date-time\"\r\n                                date_format={'ll'}\r\n                                time_format={false}\r\n                                on_text_change_listener={this.on_user_date_of_birth_change}\r\n                                default_value={this.state.user_dob.value}\r\n                                error={this.state.user_dob.error}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className={`row`}>\r\n                        <div className={`col-md-6 px-3`}>\r\n                            <Inputfield\r\n                                id={`user_cnic_text_input`}\r\n\r\n                                label_tag={'CNIC'}\r\n                                icon_class={'icon-vcard'}\r\n                                input_type={'number'}\r\n                                placeholder=\"Enter CNIC\"\r\n                                on_text_change_listener={this.on_text_field_change}\r\n                                default_value={this.state.user_cnic.value}\r\n                                error={this.state.user_cnic.error} />\r\n                        </div>\r\n                        <div className={`col-md-6 px-3`}>\r\n                            <Inputfield\r\n                                id={`user_email_text_input`}\r\n\r\n                                label_tag={'Enter email'}\r\n                                icon_class={'icon-envelop'}\r\n                                input_type={'email'}\r\n                                placeholder=\"Enter email\"\r\n                                on_text_change_listener={this.on_text_field_change}\r\n                                default_value={this.state.user_email.value}\r\n                                error={this.state.user_email.error} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 border border-secondary border-top-0 border-bottom-0 border-right-0 d-flex align-items-center\">\r\n                    <div className={`row`}>\r\n                        <div className={`col-12`}>\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-right\">\r\n                                <Select\r\n                                    isClearable\r\n                                    menuPlacement=\"auto\"\r\n                                    options={GENDER_OPTIONS}\r\n                                    classNamePrefix={`form-control`}\r\n                                    placeholder=\"Select Gender\"\r\n                                    id=\"gender_selection\"\r\n                                    onChange={e => this.on_selected_changed(e, 'gender_selection')}\r\n                                    // value={this.state.user_gender.value}\r\n                                    defaultValue={{ id: 'gender_selection', label: 'Male' }}\r\n                                    styles={{\r\n                                        container: base => ({\r\n                                            ...base,\r\n                                            backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\r\n                                            padding: 1,\r\n                                            borderRadius: 5\r\n                                        }),\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className={`col-12`}>\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-right\">\r\n                                <Select\r\n                                    isClearable\r\n                                    menuPlacement=\"auto\"\r\n                                    options={BLOOD_GROUPS_OPTIONS}\r\n                                    className={`Select-option`}\r\n                                    classNamePrefix={`form-control`}\r\n                                    placeholder=\"Select blood group\"\r\n                                    id=\"blood_group_selection\"\r\n                                    onChange={e => this.on_selected_changed(e, 'blood_group_selection')}\r\n                                    defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\r\n                                    styles={{\r\n                                        container: base => ({\r\n                                            ...base,\r\n                                            backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\r\n                                            padding: 1,\r\n                                            borderRadius: 5\r\n                                        }),\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                        <div className={`col-12`} style={{ display: 'none' }}>\r\n                            <div className=\"form-group form-group-feedback form-group-feedback-right\">\r\n                                <Select\r\n                                    isClearable\r\n                                    menuPlacement=\"auto\"\r\n                                    options={ROLES_OPTIONS}\r\n                                    className={`Select-option`}\r\n                                    classNamePrefix={`form-control`}\r\n                                    placeholder=\"Select roles\"\r\n                                    id=\"role_selection\"\r\n                                    value={[{ id: 'role_selection', label: 'Patient' }]}\r\n                                    isDisabled\r\n\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn bg-teal-400 btn-labeled btn-block btn-labeled-right pr-5\"\r\n                                style={{ textTransform: \"inherit\" }}\r\n                                onClick={this.on_submit}>\r\n                                <b><i className=\"icon-plus3\"></i></b>\r\n                                Add\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-12 mt-3\">\r\n\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn bg-danger btn-labeled btn-block btn-labeled-right pr-5\"\r\n                                style={{ textTransform: \"inherit\" }}\r\n                                onClick={this.close_modal}>\r\n                                <b><i className=\"icon-cross\"></i></b>\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <div className={`col-md-3`}>\r\n                    <div className={`d-flex justify-content-center`}>\r\n                        <div className=\"card-img-actions d-inline-block mb-3\">\r\n                            <img className=\"img-fluid rounded-circle\" src={NO_PICTURE} style={{ width: 130, height: 130 }} alt=\"\" />\r\n                            <div className=\"card-img-actions-overlay card-img rounded-circle\">\r\n                                <Link to={\"#\"} className=\"btn btn-outline bg-white text-white border-white border-2 btn-icon rounded-round\">\r\n                                    <i className=\"icon-plus3\"></i>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n\r\n        </div>\r\n        return (\r\n            <Modal\r\n                visible={this.props.visibility}\r\n                onClickBackdrop={this.close_modal}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog-centered modal-lg`}>\r\n\r\n                <div className=\"modal-header bg-teal-400\">\r\n                    <h5 className=\"modal-title\">New Patient</h5>\r\n                </div>\r\n\r\n                {this.state.loading_status ? <Loading /> : add_user_modal_body}\r\n\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        active_user: state.active_user\r\n    }\r\n}\r\nexport default connect(map_state_to_props, { notify })(NewUserModal)","import React, { Component, Fragment } from 'react';\r\nimport Loading from '../../../../shared/customs/loading/loading';\r\nimport Select from 'react-select'\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport Axios from 'axios';\r\nimport { USERS_SEARCH_BY_CREDENTIALS, APPOINTMENTS_CREATE } from '../../../../shared/rest_end_points';\r\nimport { notify, load_todays_appointments, clear_todays_appointments } from '../../../../actions';\r\nimport { connect } from \"react-redux\";\r\nimport NewUserModal from '../../../../shared/modals/newusermodal';\r\n\r\n\r\nclass NewAppointmentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading_status: false,\r\n\r\n            patients: [],\r\n            doctors: [],\r\n\r\n            appointment_patient: { value: '', error: false },\r\n            appointment_doctor: { value: '', error: false },\r\n            appointment_reason: { value: '', error: false },\r\n            appointment_date: { value: moment().format('ll'), error: false },\r\n            appointment_time: { value: moment().format('LT'), error: false },\r\n\r\n            new_patient_modal_visibility: false,\r\n\r\n            patient_select_value: '',\r\n            doctor_select_value: '',\r\n\r\n        }\r\n    }\r\n\r\n    async request(_data, _url, _method = \"post\") {\r\n        try {\r\n            if (_method === 'post') {\r\n                return await Axios.post(_url, _data)\r\n            }\r\n            else if (_method === 'get') {\r\n                return await Axios.get(_url)\r\n            }\r\n        }\r\n        catch (err) {\r\n            this.props.notify('error', '', 'Server is not responding! Please try again later')\r\n            return null\r\n        }\r\n    }\r\n\r\n    async render_users(string, role) {\r\n        try {\r\n            const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\r\n            const res_users = await this.request({}, query, 'get')\r\n            let temp_users = []\r\n            console.log('users...',res_users)\r\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\r\n                const t_user = res_users.data.payload['users'][i]\r\n                temp_users.push({\r\n                    id: `appointment_${role.toLowerCase()}_selection`,\r\n                    reference: t_user._id,\r\n                    label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\r\n                })\r\n            }\r\n            if (role === 'Patient') {\r\n                this.setState({ patients: temp_users })\r\n            }\r\n            else if (role === 'Doctor') {\r\n                this.setState({ doctors: temp_users })\r\n            }\r\n        }\r\n        catch(error) {\r\n            console.log('error',error);\r\n        }\r\n    }\r\n\r\n    populate_patients = (string) => {\r\n        if (string.length >= 1) {\r\n            this.render_users(string, 'Patient')\r\n        }\r\n        else {\r\n            this.setState({ patients: [] })\r\n        }\r\n    }\r\n\r\n    populate_doctors = (string) => {\r\n        if (string.length >= 1) {\r\n            this.render_users(string, 'Doctor')\r\n        }\r\n        else {\r\n            this.setState({ doctors: [] })\r\n        }\r\n    }\r\n\r\n\r\n    on_selected_changed = (e, actor) => {\r\n        if (e !== null) {\r\n\r\n            switch (e.id) {\r\n                case 'appointment_patient_selection':\r\n                    const val_patient = {\r\n                        id: 'appointment_patient_selection',\r\n                        reference: e.reference,\r\n                        label: e.label\r\n                    }\r\n                    this.setState({ appointment_patient: { value: e.reference, error: false }, patient_select_value: val_patient })\r\n                    break;\r\n                case 'appointment_doctor_selection':\r\n                    const val_doctor = {\r\n                        id: 'appointment_doctor_selection',\r\n                        reference: e.reference,\r\n                        label: e.label\r\n                    }\r\n                    this.setState({ appointment_doctor: { value: e.reference, error: false }, doctor_select_value: val_doctor })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (actor) {\r\n                case 'appointment_patient_selection':\r\n                    this.setState({ appointment_patient: { value: '', error: false }, patient_select_value: '' })\r\n                    break;\r\n                case 'appointment_doctor_selection':\r\n                    this.setState({ appointment_doctor: { value: '', error: false }, doctor_select_value: '' })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    on_text_field_change = (e) => {\r\n        switch (e.target.id) {\r\n            case 'appointment_reason_text_input':\r\n                this.setState({ appointment_reason: { value: e.target.value, error: false } })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    on_apointment_date_change = (e) => {\r\n        if (e === '')\r\n            this.setState({ appointment_date: { value: '', error: false } })\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ appointment_date: { value: configured_date, error: false } })\r\n            }\r\n        }\r\n    }\r\n\r\n    on_apointment_time_change = (e) => {\r\n\r\n        if (e === '')\r\n            this.setState({ appointment_time: { value: '' } })\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('LT');\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ appointment_time: { value: configured_date } })\r\n            }\r\n        }\r\n    }\r\n\r\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\r\n        const alphabets = /^[A-Za-z]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (required && input === '') {\r\n            return true;\r\n        }\r\n        if (only_alpha && !input.match(alphabets)) {\r\n            return true;\r\n        }\r\n        if (only_numbers && !input.match(numbers)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_submit = () => {\r\n        this.setState({ loading_status: true })\r\n        let error = false\r\n        if (this.check_input(this.state.appointment_patient.value, true)) {\r\n            this.setState({ appointment_patient: { value: this.state.appointment_patient.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.appointment_doctor.value, true)) {\r\n            this.setState({ appointment_doctor: { value: this.state.appointment_doctor.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.appointment_reason.value, true)) {\r\n            this.setState({ appointment_reason: { value: this.state.appointment_reason.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.appointment_date.value, true)) {\r\n            this.setState({ appointment_date: { value: this.state.appointment_date.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.appointment_time.value, true)) {\r\n            this.setState({ appointment_time: { value: this.state.appointment_time.value, error: true } })\r\n            error = true\r\n        }\r\n\r\n        if (error === true) {\r\n            this.props.notify('error', '', 'Invalid inputs')\r\n            this.setState({ loading_status: false })\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            patient: this.state.appointment_patient.value,\r\n            doctor: this.state.appointment_doctor.value,\r\n            date: `${moment(this.state.appointment_date.value).format('YYYY-MM-DD')}T${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\r\n            time: this.state.appointment_time.value,\r\n            description: this.state.appointment_reason.value,\r\n        }\r\n        Axios.post(APPOINTMENTS_CREATE, data).then(res => {\r\n            this.props.notify('success', '', res.data.message)\r\n            this.setState({\r\n                appointment_patient: { value: '' },\r\n                appointment_doctor: { value: '' },\r\n                appointment_date: { value: '' },\r\n                appointment_time: { value: '' },\r\n                appointment_reason: { value: '' },\r\n                patient_select_value: '',\r\n                doctor_select_value: '',\r\n                loading_status: false,\r\n            })\r\n            this.props.clear_todays_appointments()\r\n            this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\r\n            this.props.close()\r\n\r\n        }).catch(err => {\r\n            if (err) {\r\n                if (err.response) {\r\n                    this.props.notify('error', '', err.response.message)\r\n                    // this.props.notify('error', '', res.data.message)\r\n                    // this.setState({ loading_status: false })\r\n                }\r\n                else {\r\n                    this.props.notify('error', '', 'Server not responding ' + err.toString())\r\n                }\r\n                this.setState({ loading_status: false })\r\n            } else {\r\n                this.props.notify('error', '', 'Network error' + err.toString())\r\n                this.setState({ loading_status: false })\r\n            }\r\n        })\r\n    }\r\n    open_new_patient_modal = () => {\r\n        this.props.close()\r\n        this.setState({ new_patient_modal_visibility: true })\r\n    }\r\n\r\n    close_new_patient_modal = () => {\r\n        this.setState({ new_patient_modal_visibility: false })\r\n    }\r\n\r\n    call_back_new_patient_modal = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        // const controlStyles = {\r\n        //     borderRadius: '1px solid black',\r\n        //     padding: '5px',\r\n        //     background: '#c4f',\r\n        //     color: 'white',\r\n        // };\r\n        // const ControlComponent = props => (\r\n        //     <div style={controlStyles}>\r\n        //         <components.Control {...props} />\r\n        //     </div>\r\n        // );\r\n        const add_appointment_modal_body =\r\n            <div className=\"modal-body\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"font-weight-semibold\">Select or add user</label>\r\n                            <Select\r\n                                id=\"appointment_patient_selection\"\r\n                                isClearable\r\n                                menuPlacement=\"auto\"\r\n                                options={this.state.patients}\r\n                                // components={{ Control: ControlComponent }}\r\n                                classNamePrefix={`form-control`}\r\n                                placeholder=\"Select Patient\"\r\n                                onInputChange={e => this.populate_patients(e)}\r\n                                onChange={e => this.on_selected_changed(e, \"appointment_patient_selection\")}\r\n                                value={this.state.patient_select_value}\r\n                                styles={{\r\n                                    container: base => ({\r\n                                        ...base,\r\n                                        backgroundColor: this.state.appointment_patient.error ? '#FF0000' : '',\r\n                                        padding: 1,\r\n                                        borderRadius: 5\r\n                                    }),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {/* <div className=\"col-md-2 d-flex align-items-end\" style={{ paddingBottom: '3px'}}>\r\n                        \r\n                    </div> */}\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"font-weight-semibold\">Select Date</label>\r\n                            <DateTimePicker id=\"dob_text_input\"\r\n                                onChange={this.on_apointment_date_change}\r\n                                className=\"clock_datatime_picker\"\r\n                                inputProps={{ placeholder: 'Select Date', width: '100%', className: `form-control ${this.state.appointment_date.error ? 'border-danger' : ''}` }}\r\n                                input={true}\r\n                                dateFormat={'ll'}\r\n                                timeFormat={false}\r\n                                closeOnSelect={true}\r\n                                value={this.state.appointment_date.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"font-weight-semibold\">Which doctor to assign?</label>\r\n                            <Select\r\n                                id=\"appointment_doctor_selection\"\r\n                                isClearable\r\n                                options={this.state.doctors}\r\n                                classNamePrefix={`form-control`}\r\n                                placeholder=\"Select a Doctor\"\r\n                                menuPlacement=\"auto\"\r\n                                onInputChange={e => this.populate_doctors(e)}\r\n                                onChange={e => this.on_selected_changed(e, 'appointment_doctor_selection')}\r\n                                value={this.state.doctor_select_value}\r\n                                styles={{\r\n                                    container: base => ({\r\n                                        ...base,\r\n                                        backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\r\n                                        padding: 1,\r\n                                        borderRadius: 5\r\n                                    }),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"font-weight-semibold\">Time</label>\r\n                            <DateTimePicker id=\"dob_text_input\"\r\n                                onChange={this.on_apointment_time_change}\r\n                                className=\"clock_datatime_picker\"\r\n                                inputProps={{ placeholder: 'Select Time', width: '100%', className: `form-control ${this.state.appointment_time.error ? 'border-danger' : ''}` }}\r\n                                input={true}\r\n                                dateFormat={false}\r\n                                timeFormat={true}\r\n                                closeOnSelect={true}\r\n                                strictParsing={true}\r\n                                value={this.state.appointment_time.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className=\"form-group form-group-float\">\r\n                            <div className=\"form-group-float-label is-visible mb-1\">\r\n                                What is the reason for the visit\r\n                            </div>\r\n                            <textarea rows={3} cols={3}\r\n                                id=\"appointment_reason_text_input\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Reason for visit\"\r\n                                onChange={this.on_text_field_change}\r\n                                value={this.state.appointment_reason.value} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        return (\r\n            <Fragment>\r\n\r\n                {/* Register new patient modal */}\r\n                <NewUserModal\r\n                    visibility={this.state.new_patient_modal_visibility}\r\n                    close={this.close_new_patient_modal}\r\n                    call_back={this.props.bind_function} />\r\n\r\n                <Modal\r\n                    visible={this.props.visibility}\r\n                    onClickBackdrop={this.props.close}\r\n                    fade={true}\r\n                    dialogClassName={`modal-dialog-centered modal-lg`}>\r\n\r\n                    <div className=\"modal-header bg-teal-400\">\r\n                        <h5 className=\"modal-title\">New Appointment</h5>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-secondary btn-labeled btn-labeled-right pr-5 \"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.open_new_patient_modal}>\r\n                            <b><i className=\"icon-plus3\"></i></b>\r\n                            New Patient\r\n                        </button>\r\n                    </div>\r\n                    {this.state.loading_status ? <Loading size={150} /> : add_appointment_modal_body}\r\n                    {this.state.loading_status ? '' : <div className=\"modal-footer\">\r\n                        <Select\r\n                            isClearable\r\n                            menuPlacement=\"auto\"\r\n                            options={[]}\r\n                            classNamePrefix={`form-control`}\r\n                            placeholder=\"Select Branch\"\r\n                            id=\"branch_selection\"\r\n                            isDisabled\r\n                            // onChange={e => this.on_selected_changed(e, 'gender_selection')}\r\n                            value={{\r\n                                id: 'branch_selection',\r\n                                label: 'Ghazi chowk'\r\n                            }}\r\n                            styles={{\r\n                                container: base => ({\r\n                                    ...base,\r\n                                    backgroundColor: '',\r\n                                    padding: 0,\r\n                                    borderRadius: 5,\r\n                                    width: '200px'\r\n                                }),\r\n                            }}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.props.close}>\r\n                            <b><i className=\"icon-cross\"></i></b>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.on_submit}>\r\n                            <b><i className=\"icon-plus3\"></i></b>\r\n                            Add\r\n                        </button>\r\n                    </div>}\r\n                </Modal>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        notify: state.notify,\r\n        todays_patient: state.todays_patient\r\n    }\r\n}\r\nexport default connect(map_state_to_props, { notify, load_todays_appointments, clear_todays_appointments })(NewAppointmentModal);","import React, { Component, Fragment } from 'react';\nimport Container from '../../../shared/container/container'\nimport Select, { components } from 'react-select'\nimport Axios from 'axios';\nimport {\n    SEARCH_BY_ID_USER_REQUEST,\n    SEARCH_USER_REQUEST, BASE_PROCEDURES_URL,PROCEDURES_BASE_URL, USERS_SEARCH_BY_ID, USERS_SEARCH_BY_CREDENTIALS, PROCEDURES_SEARCH_BY_APPOINTMENT_ID,\n} from '../../../shared/rest_end_points';\nimport { connect } from \"react-redux\";\nimport { notify, set_active_page, load_todays_appointments, clear_todays_appointments } from '../../../actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport './todays_patient.css';\nimport { BASE_URL } from '../../../shared/router_constants';\nimport moment from 'moment';\nimport ProcedureModal from './procedures/procedure_modal';\nimport InvoiceModal from './invoice/invoice';\nimport TodaysPatientRow from './todays_patient_row';\nimport UserPreviewModal from '../../../shared/modals/userpreviewmodal';\nimport Loading from '../../../shared/customs/loading/loading';\nimport NewAppointmentModal from './appointment/new_appointment_modal';\nimport { Popup } from \"semantic-ui-react\";\nimport { PATIENT_VISIT_STATUSES } from '../../../shared/constant_data';\nimport DateTimePicker from 'react-datetime';\n\n\nclass Todayspatient extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            filtered_data: null,\n\n            doctors: [],\n            patients: [],\n\n            new_appointment_modal_visibility: false,\n            procedure_visibility: false,\n            prev_procedure_list: null,\n            user_preview_modal_visibility: false,\n            new_patient_modal_visibility: false,\n            invoice_modal_visibility: false,\n\n            user_modal_props: null,\n            invoice_data: null,\n            appointment_invoice_id: '',\n            procedure_appointment_id: null,\n            search_doctor: { value: '' },\n            search_patient: { value: '' },\n            search_status: { value: '' },\n            search_date: { value: moment(new Date()).format('ll') }\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-user mr-2\"></i>\n            Reception\n        </Link>, <span className=\"breadcrumb-item active\">Today's Patient</span>]\n        this.props.set_active_page(routes)\n        if (localStorage.getItem('Gh65$p3a008#2C')) {\n            this.setState({ \n                search_date: { value: localStorage.getItem('Gh65$p3a008#2C') } \n            }, () => this.props.load_todays_appointments(this.state.search_date.value))\n        } else {\n            const app_date = new Date(this.state.search_date.value);\n            this.props.load_todays_appointments(new Date(app_date.getTime() + (app_date.getTimezoneOffset() * 60000)).toISOString())\n            localStorage.setItem('Gh65$p3a008#2C', this.state.search_date.value)\n        }\n\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                return await Axios.post(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await Axios.get(_url)\n            }\n        }\n        catch (err) {\n            this.props.notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    async render_users(string, role) {\n\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        try {\n            const res_users = await this.request({}, query, 'get')\n            let temp_users = []\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `${role.toLowerCase()}_selection`,\n                    reference: t_user._id,\n                    label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient') {\n                this.setState({ patients: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctors: temp_users })\n            }\n        }\n        catch (error) {\n            console.error('error', error);\n        }\n    }\n\n    populate_doctors = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({ doctors: [] })\n        }\n    }\n\n    populate_patient = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({ patients: [] })\n        }\n    }\n\n    componentWillReceiveProps(new_props) {\n        if (new_props.todays_patient) {\n            this.setState({\n                filtered_data: new_props.todays_patient.data,\n                data: new_props.todays_patient.data\n            })\n        }\n    }\n\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n            switch (e.id) {\n                case 'location_selection':\n                    this.setState({ user_blood_group: { value: e.label } })\n                    break;\n                case 'status_selection':\n                    this.setState({ search_status: { value: e.label } })\n                    break;\n                case 'doctor_selection':\n                    this.setState({ search_doctor: { value: e.reference } })\n                    break;\n                case 'patient_selection':\n                    this.setState({ search_patient: { value: e.reference } })\n                    break\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'location_selection':\n                    this.setState({ user_blood_group: { value: '' } })\n                    break;\n                case 'status_selection':\n                    this.setState({ search_status: { value: '' } })\n                    break;\n                case 'doctor_selection':\n                    this.setState({ search_doctor: { value: '' } })\n                    break;\n                case 'patient_selection':\n                    this.setState({ search_patient: { value: '' } })\n                    break\n                default:\n                    break;\n            }\n        }\n    }\n\n    request_user = (id) => {\n        this.setState({\n            user_preview_modal_visibility: true\n        }, () => {\n            Axios.post(USERS_SEARCH_BY_ID, { user_id: id }).then(res => {\n                this.setState({ user_modal_props: res.data.payload.user })\n            }).catch(err => {\n                console.log('failed to fetch user', err)\n            })\n        })\n    }\n\n    renderDataInRows = (data) => {\n        if (data === null) {\n            return\n        }\n        return (data.map((booking, i) => {\n            // var random_color = classNameColors[Math.floor(Math.random() * classNameColors.length)]\n            const hidden_data = {\n                appointment_description: booking.appointment_description\n            }\n            return (\n                <TodaysPatientRow\n                    key={i}\n                    row_data={booking}\n                    hidden_data={hidden_data}\n                    open_procedure_modal={this.openProcedureModalHandler}\n                    open_invoice_modal={this.openInvoiceModalHandler}\n                    open_user_view_modal={this.request_user}\n                    columns=\"8\" />\n            )\n        }))\n    }\n\n    openProcedureModalHandler = (id) => {\n        this.setState({ procedure_visibility: true }, () => {\n            try {\n                let response = Axios.get(`${PROCEDURES_SEARCH_BY_APPOINTMENT_ID}?tag=${id}`);\n                response.then((res) => {\n                    this.setState({\n                        prev_procedure_list: res.data.payload,\n                        procedure_appointment_id: id,\n                        invoiceVisitId: 0\n                    });\n                });\n            }\n            catch (err) {\n                this.props.notify('error', '', 'Server is not responding! Please try again later');\n            }\n        });\n    };\n    closeProcedureModalHandler = (type) => {\n        this.setState({ procedure_visibility: false, prev_procedure_list: null, data: null })\n    };\n\n    invoiceVisitIdHandler = (value) => {\n        this.setState({ invoiceVisitId: value });\n    };\n\n    UpdateProcedureListHandler = (updateProcedureList) => {\n        this.setState({ prevProcedureList: updateProcedureList });\n    };\n\n    open_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: true })\n    };\n    openInvoiceModalHandler = (object) => {\n        this.setState({ invoice_modal_visibility: true, appointment_invoice_id: object })\n    };\n    closeInvoiceModalHandler = () => {\n        this.setState({ invoice_modal_visibility: false })\n    };\n\n    close_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: false })\n    };\n\n    call_back_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: false, data: null })\n    };\n\n    set_filters = () => {\n        this.setState({ filtered_data: null }, () => {\n            /**\n             * P D S\n             * ---------\n             * 0 0 0 - 1\n             * 0 0 1 - 2\n             * 0 1 0 - 3\n             * 0 1 1 - 4\n             * 1 0 0 - 5\n             * 1 0 1 - 6\n             * 1 1 0 - 7\n             * 1 1 1 - 8\n             */\n\n            const search_with_patients = this.state.search_patient.value !== '';\n            const search_with_doctors = this.state.search_doctor.value !== '';\n            const search_with_status = this.state.search_status.value !== '';\n\n            // console.log('search state', search_with_patients, search_with_doctors, search_with_status)\n\n            const temp = []\n            for (let i = 0; i < this.state.data.length; ++i) {\n                // console.log(this.state.search_patient.value, this.state.data[i].patient.id)\n                // 0 0 1\n                if (!search_with_patients && !search_with_doctors && search_with_status) {\n                    if (this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 0 1 0\n                else if (!search_with_patients && search_with_doctors && !search_with_status) {\n                    if (this.state.search_doctor.value === this.state.data[i].doctor.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 0 1 1\n                else if (!search_with_patients && search_with_doctors && search_with_status) {\n                    if (this.state.search_doctor.value === this.state.data[i].doctor.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 0 0\n                else if (search_with_patients && !search_with_doctors && !search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 0 1\n                else if (search_with_patients && !search_with_doctors && search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 1 0\n                else if (search_with_patients && search_with_doctors && !search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_doctor.value === this.state.data[i].doctor.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 1 1\n                else if (search_with_patients && search_with_doctors && search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_doctor.value === this.state.data[i].doctor.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n            }\n            let reset_check = true;\n            ['search_patient', 'search_doctor', 'search_status'].map((item, i) => {\n                if (this.state[item].value !== '') {\n                    reset_check = false;\n                    this.setState({ filtered_data: temp })\n                }\n                return '';\n            })\n            if (reset_check)\n                this.setState({ filtered_data: this.state.data })\n        })\n\n    }\n\n    todays_date_change = (e) => {\n        if (e === '') {\n            this.setState({ search_date: { value: '' } })\n        }\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n                this.props.clear_todays_appointments()\n                this.props.load_todays_appointments(configured_date)\n                localStorage.setItem('Gh65$p3a008#2C', configured_date)\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ search_date: { value: configured_date } })\n            }\n        }\n    }\n\n\n    render() {\n        var table = <Loading size={150} />\n        if (this.state.filtered_data != null) {\n            if (this.state.filtered_data.length > 0) {\n                table = <Fragment>\n\n                    <div className=\"table-responsive mt-2 card mb-0 pb-0\">\n                        <table className=\"table table-hover mb-0\">\n                            <tbody>\n                                {\n                                    this.renderDataInRows(this.state.filtered_data)\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </Fragment>\n\n            }\n            else {\n                table = <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\n                    <strong>Info!</strong> No Appointments found.\n                </div>;\n            }\n        }\n\n\n        const Menu = props => {\n            return (\n                <components.Menu {...props} >\n                    <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\n                        {props.children}\n                    </div>\n                </components.Menu>\n            );\n        };\n\n        const filters = <div className=\"row\">\n            <div className=\"col-md-10\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Doctors</label>\n                            <Select\n                                id=\"doctor_selection\"\n                                isClearable\n                                components={{ Menu }}\n                                menuPlacement=\"auto\"\n                                options={this.state.doctors}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Search Doctor\"\n                                onInputChange={e => this.populate_doctors(e)}\n                                onChange={e => this.on_selected_changed(e, \"doctor_selection\")}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Patients</label>\n                            <Select\n                                id=\"patient_selection\"\n                                isClearable\n                                components={{ Menu }}\n                                menuPlacement=\"auto\"\n                                options={this.state.patients}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Search Patient\"\n                                onInputChange={e => this.populate_patient(e)}\n                                onChange={e => this.on_selected_changed(e, \"patient_selection\")}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={`col-md-4`}>\n\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Status</label>\n                            <Select\n                                isClearable\n                                options={PATIENT_VISIT_STATUSES}\n                                placeholder=\"Status\"\n                                onChange={e => this.on_selected_changed(e, \"status_selection\")}\n                                onClick={() => console.log('visit status')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-2 d-flex justify-content-center align-items-end mb-2 pb-2\">\n\n                <Popup\n                    trigger={\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-dark btn-icon mr-1 \"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.set_filters}\n                        >\n                            <i className=\"icon-filter4\"></i>\n\n                        </button>}\n                    content={\n                        <div className={`card card-body bg-dark text-white shadow mb-1 py-1`}>\n                            Filter records\n                        </div>\n                    }\n                    flowing\n                    // hoverable\n                    position='top center'\n                />\n\n                <Popup\n                    trigger={\n                        <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-icon mr-1 btn-block\"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.open_new_appointment_modal}>\n                            <b><i className=\"icon-plus3\"></i></b>\n                        </button>}\n                    content={\n                        <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\n                            New Appointment\n                        </div>\n                    }\n                    flowing\n                    // hoverable\n                    position='top center'\n                />\n\n            </div>\n        </div>\n\n        const table_header = <div className=\"table-header-background shadow-sw\">\n            <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-12 d-flex align-items-center\">\n                    <span className=\"text-white\">Patients list for date</span>\n                    <span className=\"badge badge-secondary ml-2 d-none d-lg-block\">\n                        {this.state.search_date.value}\n                    </span>\n                </div>\n                <div className=\"col-lg-3 d-none d-lg-block col-0\"></div>\n                <div className=\"col-lg-3 col-md-6 col-12 d-flex\">\n                    <DateTimePicker id=\"dob_text_input\"\n                        onChange={this.todays_date_change}\n                        className=\"clock_datatime_picker \"\n                        inputProps={{\n                            placeholder: 'Select Date',\n                            width: '100%',\n                            className: `form-control bg-teal-400 border-teal-400`\n                        }}\n                        input={true}\n                        dateFormat={'ll'}\n                        timeFormat={false}\n                        closeOnSelect={true}\n                        value={this.state.search_date.value}\n\n                        onClick={() => console.log('date select', this.state.search_date.value)}\n                    />\n                    <button className=\"btn bg-teal-400 border-teal-400 text-teal-400 btn-sm ml-2\" onClick={() => {\n                        this.props.clear_todays_appointments()\n                        this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\n                    }}>\n                        <i className=\"icon-search4\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        return (\n            <Container container_type=\"todayspatient\">\n                {/* filters panel */}\n                {filters}\n                {table_header}\n                {/* table of todays appointments */}\n                {this.props.todays_patient.loading === true ? <Loading size={150} /> : table}\n\n                {/* Add new appointment modal */}\n                <NewAppointmentModal\n                    visibility={this.state.new_appointment_modal_visibility}\n                    close={this.close_new_appointment_modal}\n                    call_back={this.call_back_new_appointment_modal}\n                    bind_function={this.open_new_appointment_modal}\n                    state={'new'} />\n\n                <ProcedureModal\n                    new_procedure_visibility={this.state.procedure_visibility}\n                    appointment_id={this.state.procedure_appointment_id}\n                    prev_procedure_list={this.state.prev_procedure_list}\n                    updateProcedureList={this.UpdateProcedureListHandler}\n                    procedure_backDrop={this.closeProcedureModalHandler}\n                    cancelProcedureModal={this.closeProcedureModalHandler}\n                />\n\n                <InvoiceModal\n                    modal_visibility={this.state.invoice_modal_visibility}\n                    appointment_id={this.state.appointment_invoice_id}\n                    close_modal={this.closeInvoiceModalHandler}\n                />\n\n                <UserPreviewModal visibility={this.state.user_preview_modal_visibility}\n                    modal_props={this.state.user_modal_props}\n                    on_click_back_drop={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })}\n                    on_click_cancel={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })} />\n            </Container>\n        )\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        notify: state.notify,\n        todays_patient: state.todays_patient\n    }\n}\nexport default connect(map_state_to_props, { notify, set_active_page, load_todays_appointments, clear_todays_appointments })(withRouter(Todayspatient));","import React, { Component, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap'\r\n// import moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass TableRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false,\r\n            toggle_icon: 'icon-eye-plus',\r\n            row_data: this.props.row_data,\r\n            hidden_data: this.props.hidden_data,\r\n            hidden_header_elements: this.props.hidden_header_elements,\r\n            hidden_header_color: this.props.hidden_header_color,\r\n            col_span: ''\r\n        }\r\n    }\r\n    toggle_row = () => {\r\n        if (this.state.toggle)\r\n            this.setState({toggle: false, toggle_icon: 'icon-eye-plus'})\r\n        else\r\n            this.setState({toggle: true, toggle_icon: 'icon-eye-minus'})\r\n    }\r\n    componentDidMount(){\r\n        // this.setState({row_data: this.props.data})\r\n        this.setState({col_span: this.props.columns})\r\n    }\r\n\r\n    render_read_only_cols = () => {\r\n        return Object.keys(this.state.row_data).map((str,i) => {\r\n            return <td key={i} >{this.state.row_data[str]}</td>\r\n        })\r\n    }\r\n    render_hidden_elements = () => {\r\n        return this.state.hidden_data.map((str,i) => {\r\n            return <div key={i} className=\"\">{str}</div>\r\n        })\r\n    }\r\n    render_hidden_header_elements = () => {\r\n        return this.state.hidden_header_elements.map((str,i) => {\r\n            return <Fragment key={i}>{str}</Fragment>\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <tr>\r\n                    <td onClick={this.toggle_row}>\r\n                        <div className=\"slideInLeft animated\">\r\n                            <Link className=\"\" to=\"#\" onClick={this.toggle_row}>\r\n                                <i className={this.state.toggle_icon}></i>\r\n                            </Link>\r\n                        </div>\r\n                    </td>\r\n                    {\r\n                        this.render_read_only_cols()\r\n                    }\r\n                    {/* <td >\r\n                        \r\n                        <div className=\"d-flex flex-row\">\r\n                            <button className=\"btn btn-outline btn-sm bg-secondary border-secondary text-secondary btn-icon \"\r\n                                    onClick={()=>this.props.openModal(this.props.visit_id)}>\r\n                                <i className=\"icon-plus2\" />\r\n                            </button>\r\n                            <button className=\"btn btn-outline btn-sm bg-primary border-primary text-primary-800 btn-icon ml-1\">\r\n                                <i className=\"icon-pencil3\" />\r\n                            </button>\r\n                            <button className=\"btn btn-outline btn-sm bg-danger border-danger text-danger btn-icon ml-1\">\r\n                                <i className=\"icon-cross3\" />\r\n                            </button>\r\n                        </div>\r\n                    </td> */}\r\n                </tr>\r\n                <tr className=\"\">\r\n                    <td colSpan={`${this.state.col_span}`} className={`${this.state.toggle? '':'py-0'}`}>\r\n                        <Collapse isOpen={this.state.toggle} >\r\n                            <div className=\"float-right\">\r\n                                <Link onClick={this.toggle_row} to=\"#\" className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                                    <i className=\"icon-cross3 icon-2x\"></i>\r\n                                </Link>\r\n                            </div>\r\n                            {\r\n                                this.render_hidden_elements()\r\n                            }\r\n                        </Collapse>\r\n                    </td>\r\n                </tr>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default TableRow","import React, { Component } from 'react';\nimport Container from '../../../shared/container/container';\nimport { SEARCH_USER_REQUEST, SEARCH_APPOINTMENTS_URL, SEARCH_BY_ID_USER_REQUEST, USERS_SEARCH_BY_CREDENTIALS, APPOINTMENTS_SEARCH, USERS_SEARCH_BY_ID } from '../../../shared/rest_end_points';\nimport Axios from 'axios';\nimport { connect } from \"react-redux\";\nimport { notify, set_active_page } from '../../../actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport DateTimePicker from 'react-datetime'\nimport \"./visits.css\"\nimport { PATIENT_VISIT_STATUSES } from '../../../shared/constant_data';\n// import makeAnimated from 'react-select/animated';\nimport Select from 'react-select';\nimport TableRow from '../../../shared/customs/tablerows/tablerow';\nimport '../../../shared/customs/Animations/animations.css';\nimport UserPreviewModal from '../../../shared/modals/userpreviewmodal';\nimport Loading from '../../../shared/customs/loading/loading';\nimport { BASE_URL } from '../../../shared/router_constants';\nimport { Popup } from \"semantic-ui-react\";\n\n\nclass Visits extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            patient_list: [],\n            doctor_list: [],\n\n            today: moment().format('LT'),\n            page_number: 0,\n            total_records_on_this_page: 0,\n            total_pages: 0,\n\n            date_from: { value: moment().subtract(7, 'days').format('ll') },\n            date_to: { value: moment().format('ll') },\n\n            search_patient_id: { value: '' },\n            search_doctor_id: { value: '' },\n\n            patient_checkbox: false,\n            doctor_checkbox: false,\n\n            loading_status: false,\n            previous_query: { data: null },\n\n            user_preview_modal_visibility: false,\n            user_modal_props: null,\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-user mr-2\"></i>\n                        Reception\n                    </Link>, <span className=\"breadcrumb-item active\">All Apointments</span>]\n        this.props.set_active_page(routes)\n        setInterval(() => {\n            this.setState({ today: moment().format('LT') })\n        }, 60000)\n        this.on_search_click()\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                this.setState({ previous_query: { data: _data } })\n                return await Axios.post(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await Axios.get(_url)\n            }\n        }\n        catch (err) {\n            this.props.notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    on_selected_changed = (e, actor) => {\n\n        if (e !== null) {\n            switch (e.id) {\n                case 'gender_selection':\n                    this.setState({ user_gender: { value: e.label } })\n                    break;\n                case 'patient_list':\n                    this.setState({ search_patient_id: { value: e.reference } })\n                    break;\n                case 'doctor_list':\n                    this.setState({ search_doctor_id: { value: e.reference } })\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'blood_group_selection':\n                    this.setState({ user_gender: { value: '' } })\n                    break;\n                case 'patient_list':\n                    this.setState({ search_patient_id: { value: '' } })\n                    break;\n                case 'doctor_list':\n                    this.setState({ search_doctor_id: { value: '' } })\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    async render_users(string, role) {\n\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        const res_users = await this.request({}, query, 'get')\n        let temp_users = []\n        if (res_users.status === 200) {\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `${role.toLowerCase()}_list`,\n                    reference: t_user._id,\n                    label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient') {\n                this.setState({ patient_list: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctor_list: temp_users })\n            }\n        }\n    }\n\n    populate_patients = (string) => {\n        if (string.length >= 3) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({ patient_list: [] })\n        }\n    }\n    populate_doctors = (string) => {\n        if (string.length >= 3) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({ doctor_list: [] })\n        }\n    }\n\n    populate_appointments = async (data) => {\n        this.setState({ loading_status: true })\n        let res_visits = await this.request(data, APPOINTMENTS_SEARCH)\n        if (!res_visits) return\n        if (res_visits.status === 200) {\n            this.setState({\n                data: res_visits.data.payload.appointments,\n                total_records_on_this_page: res_visits.data.payload.appointments.length,\n                total_pages: res_visits.data.payload.total_pages,\n                loading_status: false\n            }, () => {\n                // this['element_7_ref'].scrollIntoView({ behavior: \"smooth\" });\n            })\n        }\n        else {\n            this.props.notify('info', '', res_visits.data.message)\n            this.setState({\n                data: null,\n                loading_status: false,\n                total_pages: 0,\n                total_records_on_this_page: 0\n            })\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'patient_checkbox_input':\n                this.setState({ patient_checkbox: e.target.checked })\n                break;\n            case 'doctor_checkbox_input':\n                this.setState({ doctor_checkbox: e.target.checked })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_from_date_change = (e) => {\n        if (e === '')\n            this.setState({ date_from: { value: '' } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_from: { value: configured_date } })\n            }\n        }\n    }\n\n    on_to_date_change = (e) => {\n        if (e === '')\n            this.setState({ date_to: { value: '' } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_to: { value: configured_date } })\n            }\n        }\n    }\n\n    on_search_click = () => {\n        this.setState({\n            data: null,\n\n            today: moment().format('LT'),\n            page_number: 0,\n            total_records_on_this_page: 0,\n            total_pages: 0,\n        }, () => {\n            if (this.state.date_from.value !== '' && this.state.date_to.value !== '') {\n                if (this.state.patient_checkbox === true && this.state.doctor_checkbox === true) {\n                    this.populate_appointments({\n                        to_date: this.state.date_to.value,\n                        from_date: this.state.date_from.value,\n                        patient_id: this.state.search_patient_id.value,\n                        doctor_id: this.state.search_doctor_id.value,\n                        page: this.state.page_number\n                    })\n                }\n                else if (this.state.patient_checkbox === false && this.state.doctor_checkbox === false) {\n                    this.populate_appointments({\n                        to_date: this.state.date_to.value,\n                        from_date: this.state.date_from.value,\n                        page: this.state.page_number\n                    })\n                }\n                else if (this.state.patient_checkbox === true && this.state.doctor_checkbox === false) {\n                    if (this.state.search_patient_id.value !== '') {\n                        this.populate_appointments({\n                            to_date: this.state.date_to.value,\n                            from_date: this.state.date_from.value,\n                            patient_id: this.state.search_patient_id.value,\n                            page: this.state.page_number\n                        })\n                    }\n                    else {\n                        this.props.notify('info', '', 'Please select a patient')\n                    }\n                }\n                else if (this.state.patient_checkbox === false && this.state.doctor_checkbox === true) {\n                    if (this.state.search_doctor_id.value !== '') {\n                        this.populate_appointments({\n                            to_date: this.state.date_to.value,\n                            from_date: this.state.date_from.value,\n                            doctor_id: this.state.search_doctor_id.value,\n                            page: this.state.page_number\n                        })\n                    }\n                    else {\n                        this.props.notify('info', '', 'Please select a doctor')\n                    }\n                }\n            }\n            else {\n                this.props.notify('error', '', 'Please specify a range of dates')\n            }\n        })\n\n    }\n\n    refresh_button_click = () => {\n        if (this.state.previous_query.data !== null) {\n            this.populate_appointments(this.state.previous_query.data)\n        }\n        else {\n            this.props.notify('info', '', 'Select dates and click search button to search')\n        }\n    }\n\n    request_user = (id) => {\n        this.setState({\n            user_preview_modal_visibility: true\n        }, () => {\n\n        })\n        Axios.post(USERS_SEARCH_BY_ID, { user_id: id }).then(res => {\n            if (res.status === 200) {\n                this.setState({\n                    user_modal_props: res.data.payload.user\n                })\n            }\n\n        }).catch(err => {\n            console.log('failed to fetch user')\n        })\n    }\n\n    renderDataInRows = () => {\n        return (this.state.data.map((booking, i) => {\n            // var random_color = classNameColors[Math.floor(Math.random() * classNameColors.length)]\n            console.log('booking', booking)\n            const row_data = {\n                date_of_booking: <div ref={(el) => { this[`element_${i}_ref`] = el; }}>\n                    {booking.appointment_date}\n                    {/* {`${moment(booking.appointment_date, \"YYYY-MM-DDThh:mm:ss\").utc().format('LL')}`} */}\n                </div>,// date of booking\n                time_of_booking: <div>\n                    {booking.appointment_time}\n                    {/* {`${moment(booking.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LT')}`} */}\n                </div>,// time of booking\n                patient_name: <button className=\"btn btn-outline bg-teal-400 border-teal-400 text-teal-400 btn-sm btn-block zoomIn animated\"\n                    onClick={() => this.request_user(booking.patient['id'])}>\n                    {booking.patient['first_name'] + ' ' + booking.patient['last_name']}\n                </button>,// patient_name\n                visit_reason: <span className=\"d-inline-block text-truncate \" style={{ maxWidth: \"150px\" }}>\n                    {booking.appointment_description}\n                </span>,\n                doctor_name: <button className=\"btn btn-outline-secondary btn-sm btn-block zoomIn animated\"\n                    onClick={() => this.request_user(booking.doctor['id'])}>\n                    {booking.doctor['first_name'] + ' ' + booking.doctor['last_name']}\n                </button>,// doctor name\n                visit_status: <span className={`badge ${booking.appointment_status.info === 'waiting' ? 'badge-danger' : 'badge-primary'}`}>\n                    {booking.appointment_status.info}\n                </span>,\n                visit_total_charges: <Popup\n                    trigger={<div className=\"\">{booking.total_charges}</div>}\n                    flowing\n                    position='top center'\n                    content={\n                        <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\n                            <div className={``}>Consultancy: {booking.appointment_charges['consultancy']}</div>\n                            <div className={``}>Discount: {booking.appointment_charges['discount']}</div>\n                            <div className={``}>Follow up: {booking.appointment_charges['follow_up']}</div>\n                            <div className={``}>Procedures: {booking.appointment_charges['procedures']}</div>\n                            <div className={``}>Paid Amount: {booking.appointment_charges['paid']}</div>\n                        </div>\n                    }\n                />\n            }\n            const hidden_data = [\n                <h5 className=\"font-weight-semibold\">Reason of visit</h5>,\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\n                    <p className=\"mb-1\">\n                        {booking.appointment_description}\n                    </p>\n                    <footer className=\"blockquote-footer\">Perscription</footer>\n                </blockquote>\n            ]\n            return (\n                <TableRow\n                    key={i}\n                    row_data={row_data}\n                    hidden_data={hidden_data}\n                    // hidden_header_elements={header_elements}\n                    // hidden_header_color={random_color}\n                    columns=\"8\" />\n            )\n        }))\n    }\n\n    on_previous_button_click = () => {\n        const to_request_page_number = this.state.page_number - 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n    on_page_number_click = (e) => {\n        const to_request_page_number = parseInt(e.target.innerHTML) - 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n    on_next_button_click = () => {\n        const to_request_page_number = this.state.page_number + 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n\n    render() {\n        const loading = <Loading size={150} />\n        var table = ''\n        if (this.state.data != null) {\n            if (this.state.total_records_on_this_page > 0) {\n                table = <div className=\"table-responsive mt-2 card mb-0 pb-0\"><table className=\"table table-hover\">\n                    <thead className=\"table-header-bg bg-dark\">\n                        <tr>\n                            <th></th>\n                            <th>Date</th>\n                            <th>Time</th>\n                            <th>Patient</th>\n                            <th>Reasons</th>\n                            <th>Doctor</th>\n                            <th>Status</th>\n                            <th>Charges</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderDataInRows()}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colSpan=\"4\">\n                                <div className=\"mt-2\">\n                                    <span className=\"font-weight-semibold h5\">Showing page {this.state.page_number + 1} of {this.state.total_pages} ...</span>\n                                </div>\n                            </td>\n                            <td colSpan=\"4\">\n                                <nav className=\"mt-2\">\n                                    <ul className=\"pagination justify-content-end\">\n                                        <li className={`page-item ${this.state.page_number === 0 ? 'disabled' : ''}`}>\n                                            <Link\n                                                className=\"page-link\"\n                                                to=\"#\"\n                                                onClick={this.on_previous_button_click}>\n                                                Previous\n                                            </Link>\n                                        </li>\n                                        {\n                                            this.state.total_pages > 1?\n                                            Array(this.state.total_pages).fill().map((item, i) => {\n                                                return <li key={i} className=\"page-item\">\n                                                    <Link className=\"page-link\" to=\"#\" onClick={e => this.on_page_number_click(e)}>\n                                                        {i + 1}\n                                                    </Link>\n                                                </li>\n                                            }):''\n                                        }\n                                        <li className={`page-item ${this.state.page_number === this.state.total_pages - 1 ? 'disabled' : ''}`}>\n                                            <Link className=\"page-link\" to=\"#\" onClick={this.on_next_button_click}>Next</Link>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table></div>\n            }\n            else {\n                table = <div className=\"alert alert-info\" style={{ marginBottom: '0px' }}>\n                    <strong>Info!</strong> No visits found.\n                </div>;\n            }\n        }\n        return (\n            <Container container_type={'visits'}>\n                <div className={`container-fluid`}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-8\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-6\">\n                                    <div className=\"form-group row mb-2 px-2\">\n                                        <label className=\"col-form-label-lg\">From</label>\n                                        <div className={`input-group`}>\n                                            <span className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\"><i className={'icon-calendar3'} /></span>\n                                            </span>\n                                            <DateTimePicker id=\"dob_text_input\"\n                                                onChange={this.on_from_date_change}\n                                                className=\"clock_datatime_picker form-control form-control-lg \"\n                                                inputProps={{ placeholder: 'Where from', className: 'border-0 w-100' }}\n                                                input={true}\n                                                dateFormat={'ll'}\n                                                timeFormat={false}\n                                                closeOnSelect={true}\n                                                value={this.state.date_from.value}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-lg-6\">\n                                    <div className=\"form-group row mb-2 px-2\">\n                                        <label className=\"col-form-label-lg\">To</label>\n                                        <div className={`input-group`}>\n                                            <span className=\"input-group-prepend\">\n                                                <span className=\"input-group-text\"><i className={'icon-calendar3'} /></span>\n                                            </span>\n                                            <DateTimePicker id=\"dob_text_input\"\n                                                onChange={this.on_to_date_change}\n                                                className=\"clock_datatime_picker form-control form-control-lg \"\n                                                inputProps={{ placeholder: 'Where to', className: 'border-0 w-100' }}\n                                                input={true}\n                                                dateFormat={'ll'}\n                                                timeFormat={false}\n                                                closeOnSelect={true}\n                                                value={this.state.date_to.value}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-4 d-flex flex-column-reverse mb-2 pb-1\">\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn bg-dark btn-block btn-labeled btn-labeled-right pr-5\"\n                                        style={{ textTransform: \"inherit\" }}\n                                        onClick={() => this.setState({\n                                            date_from: { value: '' }, date_to: { value: '' },\n                                            patient_checkbox: false,\n                                            doctor_checkbox: false,\n                                        })}>\n                                        <b><i className=\"icon-reset\"></i></b>\n                                        Reset filters\n                                    </button>\n                                </div>\n                                <div className=\"col\">\n\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 btn-block\"\n                                        style={{ textTransform: \"inherit\" }}\n                                        onClick={this.refresh_button_click}>\n                                        <b><i className=\"icon-reset\"></i></b>\n                                        Refresh\n                                    </button>\n                                </div>\n                            </div>\n                            <div className=\"row mb-2\">\n                                <div className=\"col\">\n                                    <Select\n                                        className=\"\"\n                                        options={PATIENT_VISIT_STATUSES}\n                                        classNamePrefix={``}\n                                        placeholder=\"Branch (Coming soon)\"\n                                        isClearable\n                                        id=\"branch_selection\"\n                                        onChange={this.on_selected_changed}\n                                        isDisabled={true}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-lg-5\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-11\">\n                                    <Select\n                                        isClearable\n                                        isDisabled={!this.state.patient_checkbox}\n                                        id=\"patient_list\"\n                                        options={this.state.patient_list}\n                                        onInputChange={e => this.populate_patients(e)}\n                                        onChange={e => this.on_selected_changed(e, 'patient_list')}\n                                        placeholder=\"Search patients\" />\n                                </div>\n                                <div className=\"col-1 d-flex align-items-end pr-0 mb-2 pl-0\">\n                                    <div className=\"form-check\">\n                                        <label className=\"form-check-label\">\n                                            <div className=\"uniform-checker\">\n                                                <span className={this.state.patient_checkbox ? 'checked' : ''}>\n                                                    <input type=\"checkbox\"\n                                                        name=\"patient\"\n                                                        id=\"patient_checkbox_input\"\n                                                        defaultChecked={this.state.patient_checkbox}\n                                                        value={this.state.patient_checkbox}\n                                                        onChange={this.on_text_field_change}\n                                                        className=\"form-input-styled\" />\n                                                </span>\n                                            </div>\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-lg-5\">\n                            <div className=\"row\">\n                                <div className=\"col-11\">\n                                    <Select\n                                        isClearable\n                                        isDisabled={!this.state.doctor_checkbox}\n                                        options={this.state.doctor_list}\n                                        onInputChange={e => this.populate_doctors(e)}\n                                        onChange={e => this.on_selected_changed(e, 'doctor_list')}\n                                        placeholder=\"Search Doctor\" />\n                                </div>\n                                <div className=\"col-1 d-flex align-items-end pr-0 mb-2 pl-0\">\n                                    <div className=\"form-check \">\n                                        <label className=\"form-check-label\">\n                                            <div className=\"uniform-checker\">\n                                                <span className={this.state.doctor_checkbox ? 'checked' : ''}>\n                                                    <input type=\"checkbox\"\n                                                        name=\"doctor\"\n                                                        id=\"doctor_checkbox_input\"\n                                                        defaultChecked={this.state.doctor_checkbox}\n                                                        value={this.state.doctor_checkbox}\n                                                        onChange={this.on_text_field_change}\n                                                        className=\"form-input-styled\" />\n                                                </span>\n                                            </div>\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={`col-lg-2`}>\n                            <button\n                                type=\"button\"\n                                className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 btn-block \"\n                                style={{ textTransform: \"inherit\" }}\n                                onClick={this.on_search_click}>\n                                <b><i className=\"icon-search4\"></i></b>\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                    {/* <div className={`row`}>\n                        <div className=\"col\">\n                            <Select\n                                className=\"\"\n                                options={PATIENT_VISIT_STATUSES}\n                                classNamePrefix={``}\n                                components={makeAnimated()}\n                                placeholder=\"Visit Status\"\n                                isClearable\n                                id=\"status_selection\"\n                                onChange={this.on_selected_changed}\n                            />\n                        </div>\n                        <div className={`col`}>\n                            <Select\n                                className=\"\"\n                                options={BLOOD_GROUPS_OPTIONS}\n                                classNamePrefix={``}\n                                components={makeAnimated()}\n                                placeholder=\"Blood group\"\n                                isClearable\n                                id=\"blood_group_selection\"\n                                onChange={this.on_selected_changed}\n                            />\n                        </div>\n                        <div className={`col`}>\n                            <button\n                                type=\"button\"\n                                className=\"btn bg-dark btn-labeled btn-labeled-right pr-5 btn-block\"\n                                style={{ textTransform: \"inherit\" }}\n                                onClick={this.on_submit_new_patient}>\n                                <b><i className=\"icon-sort-alpha-asc\"></i></b>\n                                Sort\n                            </button>\n                        </div>\n                        <div className={`col`}>\n                            <button\n                                type=\"button\"\n                                className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 btn-block \"\n                                style={{ textTransform: \"inherit\" }}\n                                onClick={this.on_search_click}>\n                                <b><i className=\"icon-search4\"></i></b>\n                                Search\n                            </button>\n                        </div>\n                    </div> */}\n                </div>\n                {this.state.loading_status ? loading : table}\n                <UserPreviewModal visibility={this.state.user_preview_modal_visibility}\n                    modal_props={this.state.user_modal_props}\n                    on_click_back_drop={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })}\n                    on_click_cancel={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })} />\n            </Container>\n        )\n    }\n}\nfunction map_state_to_props(notify) {\n    return { notify }\n}\nexport default connect(map_state_to_props, { notify, set_active_page })(withRouter(Visits));","import React, { useState } from 'react'\nimport Container from '../../../shared/container/container';\nimport Inputfield from '../../../shared/customs/inputfield/inputfield';\n// import { LOGIN_URL } from '../../../shared/router_constants';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { notify } from '../../../actions';\n\n\nfunction ForgotPassword(props) {\n\n    const [email,set_email] = useState('')\n    const [error,set_error] = useState(false)\n\n    function on_change(e) {\n        set_email(e.target.value)\n        set_error(false)\n    }\n\n    function on_submit() {\n        if (email === '')\n            set_error(true)\n            return\n        \n        // props.history.push(LOGIN_URL)\n    }\n\n    return (\n        <Container container_type={'darmian_me'}>\n            <div className=\"card shadow\">\n                <div className=\"card-header\">\n                    <h4>Reset your password</h4>\n                </div>\n                <div className=\"card-body px-4\" >\n                    <Inputfield\n                        id=\"email_text_input\"\n                        label_tag=\"Email\"\n                        placeholder=\"Enter your email\"\n                        icon_class=\"icon-envelop\"\n                        input_type={'email'}\n                        on_text_change_listener={(e) => on_change(e)}\n                        default_value={email}\n                        error={error}\n                    />\n                </div>\n                \n                <div className=\"card-footer\">\n                    <button className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 float-right\"\n                        onClick={() => on_submit()}>\n                        <b><i className=\"icon-user-check\" /></b>\n                        Sumit Request\n                    </button>\n                </div>\n                \n            </div>\n            \n        </Container>\n    )\n}\nexport default connect(null, notify)(withRouter(ForgotPassword));","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport {\n    BASE_URL,\n    LOGIN_URL,\n    REGISTER_URL,\n    PROFILE,\n    RECEPTION_TODAYSPATIIENT,\n    RECEPTION_VISITS,\n    FORGOT_PASSWORD\n} from '../shared/router_constants';\nimport ProtectedRoute from '../shared/protected_routes';\nimport { ToastContainer } from 'react-toastify';\n\nimport Home from './home/home';\nimport Login from './sigin_signup/login/login';\nimport Register from './sigin_signup/register/register';\nimport Profile from './profile/profile';\nimport Todayspatient from './reception/todays_patient/todays_patient';\nimport Visits from './reception/visits/visits';\nimport ForgotPassword from './sigin_signup/forgot_password/forgot_password';\n\nclass Init extends Component {\n    render() {\n        return (\n            <BrowserRouter >\n                <Switch>\n                    <Route exact path={LOGIN_URL} component={Login} />\n                    <Route exact path={REGISTER_URL} component={Register} />\n                    <Route exact path={FORGOT_PASSWORD} component={ForgotPassword} />\n                    <ProtectedRoute exact path={BASE_URL} component={Home} />\n                    <ProtectedRoute exact path={PROFILE} component={Profile} />\n                    <ProtectedRoute exact path={RECEPTION_TODAYSPATIIENT} component={Todayspatient} />\n                    <ProtectedRoute exact path={RECEPTION_VISITS} component={Visits} />\n                </Switch>\n                <ToastContainer hideProgressBar />\n            </BrowserRouter>\n        );\n    }\n}\nexport default Init;","import { combineReducers } from 'redux';\nimport Notify from './reducer_notify';\nimport Left_sidebar from './reducer_sidebar_controls';\nimport Active_user from './reducer_active_user';\nimport Active_page from './reducer_active_page';\nimport Todays_patient from './reducer_todays_patients';\n\nconst root_reducer = combineReducers({\n    notify: Notify,\n    left_sidebar: Left_sidebar,\n    active_user: Active_user,\n    active_page: Active_page,\n    todays_patient: Todays_patient\n});\n\nexport default root_reducer","import { NOTIFY } from \"../shared/action_constants\";\nimport { toast } from 'react-toastify';\n\n\nexport default function(state={},action){\n    switch (action.type){\n        case NOTIFY:\n            const options = {\n                position: toast.POSITION.TOP_RIGHT,\n                pauseOnFocusLoss: true\n            }\n            switch (action.payload['type']) {\n                case 'success':\n                    toast.success(action.payload['message'], options);\n                    break;\n                case 'error':\n                    toast.error(action.payload['message'], options);\n                    break;\n                case 'warning':\n                    toast.warn(action.payload['message'], options);\n                    break;\n                case 'info':\n                    toast.info(action.payload['message'], options);\n                    break;\n                default:\n                    toast(action.payload['message'], options);\n            }\n            return action.payload\n        default:\n            return state\n    }\n}","import { LEFT_SIDEBAR } from \"../shared/action_constants\";\n\nexport default function (state=false,action){\n    switch(action.type){\n        case LEFT_SIDEBAR:\n            return action.payload\n        default:\n            return state\n    }\n}","import { ACTIVE_USER } from \"../shared/action_constants\";\n\nexport default function(state={},action){\n    switch(action.type){\n        case ACTIVE_USER:\n            return action.payload;\n        default:\n            return state\n    }\n}","import { ACTIVE_PAGE } from \"../shared/action_constants\";\r\n\r\nexport default function(state=[],action){\r\n    switch(action.type){\r\n        case ACTIVE_PAGE:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}","import { TODAYS_PATIENT, TODAYS_PATIENT_CLEAR, TODAYS_PATIENT_APPOINTMENT_UPDATE } from \"../shared/action_constants\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case TODAYS_PATIENT:\r\n            console.log('todays patients',action.payload)\r\n            if (action.payload.status === 200)\r\n                return { \r\n                    loading: action.loading, \r\n                    data: action.payload.data.payload\r\n                }\r\n            else\r\n                return { \r\n                    loading: action.loading, \r\n                    data: action.payload \r\n                }\r\n        case TODAYS_PATIENT_CLEAR:\r\n            return { loading: true, data: [] }\r\n        case TODAYS_PATIENT_APPOINTMENT_UPDATE:\r\n            if (action.payload.new_item !== undefined){\r\n                return state.data.map((item,i) => {\r\n                    if (item._id !== action.payload.id) {\r\n                        // This isn't the item we care about - keep it as-is\r\n                        return item\r\n                    }\r\n                    return {\r\n                        ...item,\r\n                        ...action.payload.new_item\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return state.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Init from './components/init';\nimport reducers from './reducers'\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport promise from 'redux-promise';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n\n\nexport const store = createStore((reducers), composeWithDevTools(applyMiddleware(promise, thunk)));\n\nReactDOM.render(<Provider store={store}><Init /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}