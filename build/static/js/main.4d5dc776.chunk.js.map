{"version":3,"sources":["serviceWorker.js","router/constants.js","services/rest_end_points.js","services/queries/index.js","redux/actions/index.js","redux/constants.js","components/Skeletons/index.js","router/protected_routes.js","components/inputfield/index.js","notify.js","layouts/sigin_signup/login/login.js","utils/constant_data.js","layouts/sigin_signup/register/register.js","layouts/sigin_signup/forgot_password/forgot_password.js","layouts/settings/index.js","shared/customs/CustomTable/index.js","utils/functions.js","components/button/index.js","components/loading/index.js","components/icon-button/index.js","layouts/search/doctors/index.js","layouts/profile/profile.js","layouts/home/home.js","layouts/accounts/payments/index.js","components/container/index.js","components/header/index.js","components/footer/index.js","components/left_sidebar/menu-list.js","redux/reducers/reducer_settings.js","redux/reducers/index.js","redux/reducers/reducer_notify.js","redux/reducers/reducer_sidebar_controls.js","redux/reducers/reducer_active_user.js","redux/reducers/reducer_active_page.js","redux/reducers/reducer_todays_patients.js","redux/reducers/reducer_doctors.js","redux/reducers/reducer_procedure_list.js","redux/store.js","components/left_sidebar/index.js","components/page_header/index.js","layouts/reception/procedures/create-procedure.js","layouts/reception/procedures/create-procedure-list.js","layouts/reception/todays_patient/todays_patient_row_loading.js","layouts/reception/procedures/index.js","layouts/reception/todays_patient/procedures/procedure_item.js","layouts/reception/todays_patient/procedures/procedure_loading.js","layouts/reception/todays_patient/procedures/procedure_modal.js","layouts/reception/todays_patient/invoice/invoice.js","layouts/reception/todays_patient/appointment/update_appointment_modal.js","layouts/reception/todays_patient/todays_patient_row.js","shared/customs/user/user.js","shared/modals/userpreviewmodal.js","shared/modals/newusermodal.js","layouts/reception/todays_patient/appointment/new_appointment_modal.js","layouts/reception/todays_patient/consultancy/index.js","layouts/reception/todays_patient/todays_patient.js","shared/customs/tablerows/tablerow.js","layouts/reception/all-appointments/index.js","router/index.js","App.js","index.js","resources/images/LOGO.png","resources/images/placeholder.jpg"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","BASE_URL","LOGIN_URL","REGISTER_URL","PROFILE","RECEPTION_TODAYSPATIIENT","RECEPTION_VISITS","RECEPTION_PROCEDURES","FORGOT_PASSWORD","SEARCH_DOCTORS","PAYMENTS","SETTINGS","ROOT_URL","SOCKET_URL","USERS_BASE_URL","USERS_LOGIN","USERS_CREATE","USERS_UPDATE","USERS_LOGOUT","USERS_SEARCH_BY_ID","USERS_SEARCH_BY_TOKEN","USERS_SEARCH_BY_CREDENTIALS","ADMIN_BASE_URL","ADMIN_CREATE_PATIENT","ADMIN_CREATE_DOCTOR","ADMIN_UPDATE_DOCTOR","ADMIN_DELETE_DOCTOR","APPOINTMENTS_BASE_URL","APPOINTMENTS_CREATE","APPOINTMENTS_UPDATE","APPOINTMENTS_SEARCH","APPOINTMENTS_SEARCH_BY_ID","APPOINTMENTS_SEARCH_TODAY","APPOINTMENTS_CHARGES","APPOINTMENTS_CHARGES_UPDATE","APPOINTMENTS_INVOICE","APPOINTMENTS_CHECKOUT","PROCEDURES_BASE_URL","PROCEDURES_CREATE","PROCEDURES_UPDATE","PROCEDURES_DELETE","PROCEDURES_SEARCH","PROCEDURES_SEARCH_BY_APPOINTMENT_ID","PROCEDURES_LIST_BASE_URL","PROCEDURES_LIST_CREATE","DOCTORDETAILS_BASE_URL","BRANCHES_BASE_URL","PAYMENTS_BASE_URL","PAYMENTS_CREATE","BASE_USERS_URL","REGISTER_USER_REQUEST","LOGOUT_USER_REQUEST","PROFILE_USER_REQUEST","BASE_RECEPTION_URL","SEARCH_APPOINTMENTS_URL","SEARCH_APPOINTMENT_BY_ID","GET_APPOINTMENT_CHARGES","BASE_PROCEDURES_URL","BASE_PROFITS_URL","BASE_DOCTORDETAILS__URL","PostRequest","url","data","Axios","post","GetRequest","get","UserSearchById","id","rep","user_id","LogoutRequest","token","localStorage","getItem","GetAllDoctors","s","AppointmentsSearchToday","date","type","Date","getTime","getTimezoneOffset","toISOString","AppointmentCheckout","appointment_id","AppointmentCharges","AppointmentUpdateCharges","payload","put","AppointmentSearchById","ProcedureSearchByAppointmentId","ProcedureCreate","ProcedureUpdate","ProcedureSearch","doctor_id","GetProceduresList","search_query","left_sidebar_controls","status","set_active_user","details","set_active_page","load_todays_appointments","dispatch","res","loading","err","message","clear_todays_appointments","update_appointment","new_item","toggle_sidebar_menu_collapse","fetch_doctors","a","response","fetch_procedures_list","interceptors","request","use","user","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","backdrop","color","Skeletons","props","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","style","Skeleton","height","Drawer","paper","direction","ChevronRight","ChevronLeft","Divider","List","map","item","i","ListItem","key","ProtectedRoutes","authorize_token","_","isEmpty","active_user","clear","setItem","path","check_for_token","this","Component","component","__html","render","to","connect","Inputfield","received_props","_field_type","field_type","input_field_type","text_area_field_type","rows","cols","select_field_type","date_time_field_type","inputProps","placeholder","render_field","custom_field","parent_classes","inner_classes","highlightColor","count","heading","required","helper","Notify","title","options","toast","POSITION","TOP_RIGHT","pauseOnFocusLoss","success","warn","info","Login","on_text_field_change","e","target","setState","email","value","password","remember_me_option","checked","__check_hard_constraints","notify","on_submit","preventDefault","loading_status","LoginRequest","username","trim","remember_me","history","push","substring","removeItem","view","timeout","username_password","input_type","onChange","remember_me_reset_password","name","defaultChecked","method","onSubmit","textTransform","withRouter","BLOOD_GROUPS_OPTIONS","label","GENDER_OPTIONS","ROLES_OPTIONS","PATIENT_VISIT_STATUSES","CITIES","COUTRIES","Register","first_name","last_name","length","cnic","phone_number","verify_password","address","on_date_of_birth_change","dob","configured_date","format","on_selected_changed","blood_group","gender","role","check_input","input","only_alpha","only_numbers","alphabets","numbers","check_hard_constraints","include","length_check","val","includes","current_page","next_button_click","back_button_click","role_select_modal_visibility","loader","to_render_page","name_and_email_and_phone","label_tag","icon_class","on_text_change_listener","default_value","password_and_verification","date_of_birth_and_cnic_address","date_format","time_format","role_gender_and_blood_group","classNamePrefix","components","makeAnimated","action","set_email","set_error","on_change","defaultValue","Settings","menu_style_change","settings","left_sidebar_collapsed","customReducer","column","reverse","sortBy","Error","CustomTable","isInitialMount","useRef","useReducer","useEffect","current","parse_item","isNaN","getDate","moment","Table","sortable","stackable","celled","textAlign","size","collapsing","Header","Row","Object","keys","headCells","HeaderCell","sorted","Body","Cell","colSpan","cell","k","Ucfirst","string","charAt","toUpperCase","slice","get_utc_date","input_date","now_utc","UTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","convert_object_array_to_string","array","key_to_select","toString","Button","fuklWidth","icon","children","Loading","custom","btn_type","numeric","disablePadding","SearchDoctors","on_edit_doctor","doctor","mode","toUpdateDoctorId","_id","addNewModalVisibility","user_first_name","user_last_name","user_phone_number","user_dob","date_of_birth","user_cnic","user_email","user_country","country","user_city","city","user_address","user_gender","user_blood_group","user_role","user_consultancy_fee","consultancy_fee","user_consultancy_percentage","consultancy_percentage","user_is_active","is_active","user_specialities","specialities","user_degrees","degrees","user_schedule","schedule","on_delete_doctor","confirmAlert","buttons","delete","reset_state","load_doctors","query","_doctors","counts","total","active","deactive","temp","actions","actor","on_user_date_of_birth_change","on_checkbox_change","delete_item","index","splice","toggle_modal","identity","add_item","description","addNewSpecialityModalVisibility","addNewDegreeModalVisibility","addNewScheduleModalVisibility","speciality_description","degree_description","admin_id","doctor_details","addNewDoctorModalLoading","delete_doctor","routes","visible","dialogClassName","onClickBackdrop","disabled","pattern","maxlength","isClearable","menuPlacement","isDisabled","styles","container","base","backgroundColor","borderRadius","active_page","Profile","request_update","UserUpdate","on_click_update","register_date","on_text_changed","previous_payload","src","NO_PICTURE","alt","menuPosition","dateFormat","timeFormat","closeOnSelect","Home","order_data","patients_per_day_raw_data","patients_per_day","current_patient","month","day","year","numenator","patient_attended","denomenator","patient_left","doctors","total_attended","total_patients_attended","total_appointments","total_patients_appointments_registered","checkout_percentage","Math","ceil","current_date_time","sort","compare_dates","socket","socketIOClient","rc","on","b","disconnect","option_patients_attended_percentage","tooltip","formatter","series","detail","option_patients_attended_history","trigger","pt","xAxis","boundaryGap","yAxis","dataZoom","start","end","handleIcon","handleSize","handleStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","symbol","itemStyle","areaStyle","echarts","LinearGradient","offset","option_procedures","legend","orient","left","radius","avoidLabelOverlap","normal","show","emphasis","textStyle","fontSize","fontWeight","labelLine","option","axisPointer","grid","right","bottom","containLabel","Payments","onCheckoutToggle","checkoutModalVisibility","selected_doctor_appointments","rawData","filter","doc","doctor_name","featuredData","appointment_count","parseInt","indexOf","total_consultancy_fee","total_procedures_fee","procedures_fee","total_amount","consultancy_share","c_doctor_share","procedures_share","p_doctor_share","balance","appointments","procedures","currentCheckout","that","records","counter","element","_procedures","Number","appointment_charges","consultancy","follow_up","discount","total_c_doctor_share","reduce","total_p_dr_share","a_count","c_hospital_share","p_hospital_share","_doctor","payments_balance","is_paid_to_doctor","loadData","app_date","interval","setInterval","queryInterval","showDoctor","onConfirmCheckout","modalLoading","undefined","branch_id","paid_amount","paid_text_input","appointments_ids","searchDate","userPreviewModalVisibility","showAppointments","clearInterval","Collapse","isOpen","appointment_date","time","todays_patient","left_sidebar","setLoading","logoutLoading","setLogoutLoading","authenticated","setAuthenticated","anchorEl","setAnchorEl","openMenu","handleMenuClose","onLogoutClick","UsersSearchByToken","pathname","setTimeout","container_type","aria-controls","aria-haspopup","event","currentTarget","AccountCircleRounded","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","PersonRounded","Backdrop","CircularProgress","on_sidebar_control_button_click","on_logout_button_click","on_click_drop_down","showDropDown","on_click_collapse_menu","collapseMenu","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","document","addEventListener","removeEventListener","x-placement","willChange","top","transform","alert","nested_items_icon","ArrowRightRounded","LIST","Dashboard","nested","HomeRounded","RC","Search","SearchRounded","Reception","ImportContactsRounded","Accounts","AccountBalanceRounded","SettingsRounded","INITIAL_SETTINGS","root_reducer","combineReducers","new_state","cloneDeep","proceduresList","store","createStore","reducers","composeWithDevTools","applyMiddleware","promise","thunk","list","setList","first_name_first_letter","first_name_rest","last_name_first_letter","last_name_rest","avatar_size","Avatar","elem","button","selected","Link","routes_list","onItemClick","ListItemIcon","ListItemText","primary","primaryTypographyProps","ExpandLess","ExpandMore","in","unmountOnExit","nitem","ni","endIcon","getState","Page_header","headers","data-toggle","NOPICTURE","CreateProcedure","populate_doctors","temp_users","t_user","populate_procedures_list","procedures_list","t","department","onCreateProcedure","operate_time","date_input","time_input","patient_id","patient_input","doctor_input","procedure_list_id","procedure_type_input","reference","reference_input","fee","fee_input","discount_input","dr_share","dr_share_input","comments_input","paid_amount_input","time_stamp","operate","report","_res","handleClose","onTextChange","onSelectChange","respective_item","find","operation_charges","populate_patients","str","clearTimeout","search_patient_trigger_timmer","pateints_options_loading","users","mrn","patients","procedureDateInputChange","new_props","procedure_type","procedures_list_id","patient","visibility","isLoading","noOptionsMessage","onInputChange","Popup","flowing","min","max","new_time","formatted12","coarseMinutes","forceCoarseMinutes","switchToMinuteOnHourSelect","CreateProcedureList","onDoctorsSelectChange","operation_doctors_input","onCreateProcedureList","name_input","department_input","description_input","operation_alternative","operation_alternative_input","operation_charges_input","operation_doctors","operation_efficacy","operation_efficacy_input","operation_risk","operation_risk_input","operation_time","operation_time_input","CreateNewProcedureItem","closeMenuOnSelect","isMulti","TodaysPatientRowLoading","Menu","Procedures","load_procedures","search_date","todays_date_change","filter_records","doctors_input","patients_input","status_selection","procedure_status","create_procedure_modal_visibility","create_procedure_list_modal_visibility","procedures_copy","fromNow","discount_purpose","ProcedureItem","handle_change","description_text_input","prev_description","charges_text_input","prev_fee","discount_text_input","prev_discount","dr_share_text_input","prev_dr_share","edited","on_save_click","save_click_loading","save_opp","procedure_id","on_delete_click","delete_opp","procedure_description","procedure_fee","procedure_discount","procedure_dr_share","save_button_classes","update_button_classes","border","ProcedureLoading","ProcedureModal","save_procedure","handle_total_values","delete_procedure","pop","mount","procedures_list_copy","amount","paid_for_procedures","paid_amount_copy","user_data","show_procedures","handle_close_modal","consultancy_fee_text_input","follow_up_text_input","cancelProcedureModal","handle_checkout_button_click","minimum_payable","scrollToBottom","last_element","scrollIntoView","behavior","calculate_balance","on_text_change","on_item_text_change","prev_procedure_list","compare_changes","on_item_delete_click","edited_items","x","procedure_total","is_deleted","changes","add_procedure_click","obj","created","last_updated","add_procedure","on_save_changes_click","procedures_to_create","procedure","procedures_to_update","o","on_save_payment_click","procedure_backDrop","fade","componentRef","overflowY","marginBottom","borderLeft","float","ref","el","LOGO","Invoice","get_total","get_balance","paid","get_total_paid","table_header","procedures_table","appointment_procedures","appointment_charges_table","appointment_paid_balance","close_modal","UpdateAppointmentModal","render_users","patient_ref","doctor_ref","val_patient","appointment_patient","patient_select_value","val_doctor","appointment_doctor","doctor_select_value","appointment_reason","appointment_comments","appointment_referee","on_apointment_date_change","on_apointment_time_change","appointment_time","AppointmentUpdate","visit_id","close","comments","referee","utc","_data","_url","_method","res_users","toLowerCase","add_appointment_modal_body","strictParsing","TodaysPatientRow","toggle_row","toggle","procedure_loading","toggle_icon","row_data","view_user","toggle_user_view_modal","handle_checkout","render_read_only_cols","consultancy_charges","toggle_consultancy_modal","procedure_modal_visibility","invoice","toggle_invoice_modal","edit","update_appointment_modal_visibility","follow_ups","checkout","verticalAlign","appointment_time_difference_from_now","appointment_status","is_paid","render_hidden_elements","hidden_data","render_hidden_header_elements","hidden_header_elements","close_update_appointment_modal","open_update_appointment_modal","call_back_update_appointment_modal","hidden_header_color","col_span","columns","call_back","reason","User","calculate_age","dob1","today","birthDate","age_now","getFullYear","m","getMonth","text_size","icon_size","button_size","heading_size","phone","text","UserPreviewModal","handle_on_click_back_drop","on_click_back_drop","modal_props","NewUserModal","subtract","calendar","user_age","configured_age","split","add_user_modal_body","maxLength","NewAppointmentModal","hours","mins","AppointmentCreate","open_new_patient_modal","new_patient_modal_visibility","close_new_patient_modal","call_back_new_patient_modal","time_period","bind_function","ConsultancyModal","handle_save_button_click","procedure_charges","onBeforeGetContent","gather_invoice_data","custom_classes","Todayspatient","load_data","populate_patient","search_status","search_doctor","search_patient","request_user","user_preview_modal_visibility","user_modal_props","renderDataInRows","booking","appointment_description","toggle_procedure_modal","openProcedureModalHandler","openInvoiceModalHandler","selected_appointment_id","closeProcedureModalHandler","invoiceVisitIdHandler","invoiceVisitId","UpdateProcedureListHandler","updateProcedureList","prevProcedureList","open_new_appointment_modal","new_appointment_modal_visibility","object","invoice_modal_visibility","appointment_invoice_id","closeInvoiceModalHandler","close_new_appointment_modal","call_back_new_appointment_modal","set_filters","filtered_data","search_with_patients","search_with_doctors","search_with_status","reset_check","consultancy_modal_visibility","invoice_data","table","filters","on_click_cancel","TableRow","AllAppointments","search_patient_id","search_doctor_id","patient_list","doctor_list","populate_appointments","res_visits","total_records_on_this_page","total_pages","patient_checkbox","doctor_checkbox","on_from_date_change","date_from","on_to_date_change","date_to","on_search_click","page_number","to_date","from_date","page","refresh_button_click","previous_query","date_of_booking","time_of_booking","patient_name","visit_reason","maxWidth","visit_status","visit_total_charges","total_charges","on_previous_button_click","to_request_page_number","updated","on_page_number_click","innerHTML","on_next_button_click","Array","fill","LoginRoute","rest","from","NO_CONTAINER_PATHS","RouterX","useLocation","state_container","set_state_container","exact","LAYOUTS","hideProgressBar","App","getElementById","URL","process","href","origin","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.4d5dc776.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ROOT_ROUTE = '';\n\nexport const BASE_URL = `${ROOT_ROUTE}/`;\nexport const LOGIN_URL = `${ROOT_ROUTE}/login`;\nexport const REGISTER_URL = `${ROOT_ROUTE}/register`;\nexport const PROFILE = `${ROOT_ROUTE}/profile`;\nexport const RECEPTION_TODAYSPATIIENT = `${ROOT_ROUTE}/todays-patient`;\nexport const RECEPTION_VISITS = `${ROOT_ROUTE}/visits`;\nexport const RECEPTION_PROCEDURES = `${ROOT_ROUTE}/procedures`;\nexport const FORGOT_PASSWORD = `${ROOT_ROUTE}/forgot-password`;\nexport const SEARCH_DOCTORS = `${ROOT_ROUTE}/search-doctors`;\nexport const PAYMENTS = `${ROOT_ROUTE}/payments`;\nexport const SETTINGS = `${ROOT_ROUTE}/settings`;","const PROTOCOL = 'http';\n\n/**\n * production address\n */\n// const ADDRESS = '18.188.119.132'\nconst ADDRESS = 'codemedicine.ddns.net'\nconst TYPE = '/test';\nexport const ROOT_URL = `${PROTOCOL}://${ADDRESS}`;\nexport const SOCKET_URL = `${TYPE}/socket.io`;\n\n/**\n * developement address\n */\n// const ADDRESS = 'localhost'\n// const PORT = 7000;\n// const TYPE = '/test';\n// export const ROOT_URL = `${PROTOCOL}://${ADDRESS}:${PORT}`;\n// export const SOCKET_URL = `${TYPE}/socket.io`; \n\nexport const BASE_URL = `${ROOT_URL}${TYPE}`;\n \nexport const USERS_BASE_URL = `${BASE_URL}/users`;\nexport const USERS_LOGIN = `${USERS_BASE_URL}/login`;\nexport const USERS_CREATE = `${USERS_BASE_URL}/register`;\nexport const USERS_UPDATE = `${USERS_BASE_URL}/update`;\nexport const USERS_DELETE = `${USERS_BASE_URL}/delete`;\nexport const USERS_LOGOUT = `${USERS_BASE_URL}/logout`;\nexport const USERS_SEARCH_BY_ID = `${USERS_BASE_URL}/search/id`;\nexport const USERS_SEARCH_BY_TOKEN = `${USERS_BASE_URL}/search/token`;\nexport const USERS_SEARCH_BY_CREDENTIALS = `${USERS_BASE_URL}/search/credentials`;\n \nexport const ADMIN_BASE_URL = `${USERS_BASE_URL}/admin`;\nexport const ADMIN_CREATE_PATIENT = `${ADMIN_BASE_URL}/patient/create`;\nexport const ADMIN_UPDATE_PATIENT = `${ADMIN_BASE_URL}/patient/update`;\nexport const ADMIN_DELETE_PATIENT = `${ADMIN_BASE_URL}/patient/delete`;\nexport const ADMIN_CREATE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/create`;\nexport const ADMIN_UPDATE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/update`;\nexport const ADMIN_DELETE_DOCTOR =  `${ADMIN_BASE_URL}/doctor/delete`;\n\nexport const APPOINTMENTS_BASE_URL = `${BASE_URL}/appointments`;\nexport const APPOINTMENTS_CREATE = `${APPOINTMENTS_BASE_URL}/create`;\nexport const APPOINTMENTS_UPDATE = `${APPOINTMENTS_BASE_URL}/update`;\nexport const APPOINTMENTS_DELETE = `${APPOINTMENTS_BASE_URL}/delete`;\nexport const APPOINTMENTS_SEARCH = `${APPOINTMENTS_BASE_URL}/search`;\nexport const APPOINTMENTS_SEARCH_BY_ID = `${APPOINTMENTS_BASE_URL}/search/id`;\nexport const APPOINTMENTS_SEARCH_TODAY = `${APPOINTMENTS_BASE_URL}/search/today`;\nexport const APPOINTMENTS_CHARGES = `${APPOINTMENTS_BASE_URL}/charges`\nexport const APPOINTMENTS_CHARGES_UPDATE = `${APPOINTMENTS_CHARGES}/update`\nexport const APPOINTMENTS_INVOICE = `${APPOINTMENTS_BASE_URL}/invoice`\nexport const APPOINTMENTS_CHECKOUT = `${APPOINTMENTS_BASE_URL}/checkout`\n \nexport const PROCEDURES_BASE_URL = `${BASE_URL}/procedures`;\nexport const PROCEDURES_CREATE = `${PROCEDURES_BASE_URL}/create`;\nexport const PROCEDURES_UPDATE = `${PROCEDURES_BASE_URL}/update`;\nexport const PROCEDURES_DELETE = `${PROCEDURES_BASE_URL}/delete`;\nexport const PROCEDURES_SEARCH = `${PROCEDURES_BASE_URL}/search`;\nexport const PROCEDURES_SEARCH_BY_ID = `${PROCEDURES_BASE_URL}/search/id`;\nexport const PROCEDURES_SEARCH_BY_APPOINTMENT_ID = `${PROCEDURES_BASE_URL}/appointment/id`;\n\nexport const PROCEDURES_LIST_BASE_URL = `${BASE_URL}/procedures_list`;\nexport const PROCEDURES_LIST_CREATE = `${PROCEDURES_LIST_BASE_URL}/create`;\nexport const PROCEDURES_LIST_UPDATE = `${PROCEDURES_LIST_BASE_URL}/update`;\nexport const PROCEDURES_LIST_DELETE = `${PROCEDURES_LIST_BASE_URL}/delete`;\nexport const PROCEDURES_LIST_SEARCH = `${PROCEDURES_LIST_BASE_URL}/search`;\nexport const PROCEDURES_LIST_SEARCH_BY_ID = `${PROCEDURES_LIST_BASE_URL}/search/id`;\n\nexport const DOCTORDETAILS_BASE_URL = `${BASE_URL}/doctor/details`;\nexport const DOCTORDETAILS_CREATE = `${DOCTORDETAILS_BASE_URL}/create`;\nexport const DOCTORDETAILS_UPDATE = `${DOCTORDETAILS_BASE_URL}/update`;\nexport const DOCTORDETAILS_DELETE = `${DOCTORDETAILS_BASE_URL}/delete`;\nexport const DOCTORDETAILS_SEARCH_BY_ID = `${DOCTORDETAILS_BASE_URL}/search/id`;\n\nexport const BRANCHES_BASE_URL = `${BASE_URL}/branches`;\nexport const BRANCHES_CREATE = `${BRANCHES_BASE_URL}/create`;\nexport const BRANCHES_UPDATE = `${BRANCHES_BASE_URL}/update`;\nexport const BRANCHES_DELETE = `${BRANCHES_BASE_URL}/delete`;\nexport const BRANCHES_SEARCH_BY_ID = `${BRANCHES_BASE_URL}/search/id`;\n\nexport const PAYMENTS_BASE_URL = `${BASE_URL}/payments`;\nexport const PAYMENTS_CREATE = `${PAYMENTS_BASE_URL}/create`;\nexport const PAYMENTS_UPDATE = `${PAYMENTS_BASE_URL}/update`;\nexport const PAYMENTS_DELETE = `${PAYMENTS_BASE_URL}/delete`;\nexport const PAYMENTS_SEARCH_BY_ID = `${PAYMENTS_BASE_URL}/search/id`;\n\n\n// --------------------------------------------------------------------------------------------------------------------\n\n\n// All user related end points\nexport const BASE_USERS_URL = `${BASE_URL}/users`;\nexport const REGISTER_USER_REQUEST = `${BASE_USERS_URL}/register`;\nexport const REGISTER_USER_REQUEST_BY_ADMIN = `${REGISTER_USER_REQUEST}/admin`;\nexport const LOGIN_USER_REQUEST = `${BASE_USERS_URL}/login`;\nexport const LOGOUT_USER_REQUEST = `${BASE_USERS_URL}/logout`;\nexport const PROFILE_USER_REQUEST = `${BASE_USERS_URL}/profile`;\nexport const PROFILE_UPDATE_USER_REQUEST = `${PROFILE_USER_REQUEST}/update`;\nexport const SEARCH_USER_REQUEST = `${BASE_USERS_URL}/search`;\nexport const SEARCH_BY_ID_USER_REQUEST = `${BASE_USERS_URL}/search/id`;\n\n// All visits/reception related end points\n// export const BASE_RECEPTION_URL = `${BASE_URL}/visits`;\n// export const NEW_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/new`;\n// export const UPDATE_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/update`\n// export const SEARCH_APPOINTMENTS_URL = `${BASE_RECEPTION_URL}/search`;\n// export const SEARCH_TODAYS_APPOINTMENTS_URL = `${SEARCH_APPOINTMENTS_URL}/today`;\n\nexport const BASE_RECEPTION_URL = `${BASE_URL}/appointments`;\nexport const NEW_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/create`;\nexport const UPDATE_APPOINTMENT_URL = `${BASE_RECEPTION_URL}/update`\nexport const SEARCH_APPOINTMENTS_URL = `${BASE_RECEPTION_URL}/search`;\nexport const SEARCH_APPOINTMENT_BY_ID = `${SEARCH_APPOINTMENTS_URL}/id`;\nexport const SEARCH_TODAYS_APPOINTMENTS_URL = `${SEARCH_APPOINTMENTS_URL}/today`;\nexport const GET_APPOINTMENT_CHARGES = `${BASE_RECEPTION_URL}/charges`;\nexport const UPDATE_APPOINTMENT_CHARGES = `${GET_APPOINTMENT_CHARGES}/update`;\nexport const CHECKOUT_APPOINTMENT = `${BASE_RECEPTION_URL}/checkout`;\nexport const GET_INVOICE_DATA = `${BASE_RECEPTION_URL}/invoice`;\n\n// All procedure related end points\nexport const BASE_PROCEDURES_URL = `${BASE_RECEPTION_URL}/procedures`;\nexport const NEW_PROCEDURES_URL = `${BASE_PROCEDURES_URL}/create`;\nexport const UPDATE_PROCEDURE_URL = `${BASE_PROCEDURES_URL}/update`;\nexport const DELETE_PROCEDURE_URL = `${BASE_PROCEDURES_URL}/delete`;\n\n// All profit related end points\nexport const BASE_PROFITS_URL = `${BASE_URL}/profits`;\nexport const GET_PROFITS_BY_DOCTOR_ID = `${BASE_PROFITS_URL}/search/visit/id`;\nexport const PROFITS_UPDATE = `${BASE_PROFITS_URL}/update`;\n\n// All profit related end points\nexport const BASE_DOCTORDETAILS__URL = `${BASE_URL}/doctordetails`;\nexport const DOCTORDETAILS_SEARCH = `${BASE_DOCTORDETAILS__URL}/search`;\n","import Axios from \"axios\"\r\nimport * as rep from '../rest_end_points';\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * General Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const PostRequest = (url, data) => {\r\n    return Axios.post(url, data);\r\n}\r\n\r\nexport const GetRequest = (url) => {\r\n    return Axios.get(url);\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * User Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const GetUserById = (id) => {\r\n    return Axios.post(rep.USERS_SEARCH_BY_ID, { user_id: id })\r\n}\r\n\r\nexport const LoginRequest = (data) => {\r\n    return Axios.post(rep.USERS_LOGIN, data);\r\n}\r\n\r\nexport const UsersSearchByToken = (token) => {\r\n    return Axios.get(`${rep.USERS_SEARCH_BY_TOKEN}?tag=${token}`)\r\n}\r\n\r\nexport const UserSearchByToken = (token) => {\r\n    return Axios.get(`${rep.USERS_SEARCH_BY_TOKEN}?tag=${token}`)\r\n}\r\n\r\nexport const UserUpdate = (data) => {\r\n    return Axios.put(rep.USERS_UPDATE, data)\r\n}\r\n\r\nexport const UserSearchById = (id) => {\r\n    return Axios.post(rep.USERS_SEARCH_BY_ID, { user_id: id })\r\n}\r\n\r\nexport const UserSearchByCredentials = (string, role) => {\r\n    return Axios.get(`${rep.USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`);\r\n}\r\n\r\nexport const LogoutRequest = () => {\r\n    return Axios.post(rep.USERS_LOGOUT, { token: localStorage.getItem('user') })\r\n}\r\n\r\nexport const GetAllDoctors = (s) => {\r\n    return Axios.get(`${rep.BASE_USERS_URL}?role=Doctor`)\r\n}\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Appointment Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const AppointmentsSearchToday = (date, type = \"\") => {\r\n    if (type !== \"\")\r\n        return Axios.get(`${rep.APPOINTMENTS_SEARCH_TODAY}?tag=${new Date(new Date(date.getTime() + (date.getTimezoneOffset() * 60000)).toISOString())}&type=${type}`);\r\n    else\r\n        return Axios.get(`${rep.APPOINTMENTS_SEARCH_TODAY}?tag=${new Date(date)}`)\r\n}\r\n\r\nexport const AppointmentCheckout = (id) => {\r\n    return Axios.post(rep.APPOINTMENTS_CHECKOUT, { appointment_id: id });\r\n}\r\n\r\nexport const AppointmentCreate = (data) => {\r\n    return Axios.post(rep.APPOINTMENTS_CREATE, data)\r\n}\r\n\r\nexport const AppointmentUpdate = (data) => {\r\n    return Axios.put(rep.APPOINTMENTS_UPDATE, data)\r\n}\r\n\r\nexport const AppointmentCharges = (id) => {\r\n    return Axios.get(`${rep.APPOINTMENTS_CHARGES}?tag=${id}`)\r\n}\r\n\r\nexport const AppointmentUpdateCharges = (payload) => {\r\n    return Axios.put(rep.APPOINTMENTS_CHARGES_UPDATE, payload)\r\n}\r\n\r\nexport const AppointmentSearchById = (id) => {\r\n    return Axios.get(`${rep.APPOINTMENTS_SEARCH_BY_ID}?tag=${id}`)\r\n}\r\n\r\nexport const AppointmentInvoice = (id) => {\r\n    return Axios.get(`${rep.APPOINTMENTS_INVOICE}?tag=${id}`)\r\n}\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Procedure Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const ProcedureSearchByAppointmentId = (id) => {\r\n    return Axios.get(`${rep.PROCEDURES_SEARCH_BY_APPOINTMENT_ID}?tag=${id}`)\r\n}\r\n\r\nexport const ProcedureCreate = (data) => {\r\n    return Axios.post(rep.PROCEDURES_CREATE, data);\r\n}\r\n\r\nexport const ProcedureUpdate = (payload) => {\r\n    return Axios.put(rep.PROCEDURES_UPDATE, payload)\r\n}\r\n\r\nexport const ProcedureDelete = (id) => {\r\n    return Axios.delete(rep.PROCEDURES_DELETE, { data: { procedure_id: id } })\r\n}\r\n\r\nexport const ProcedureSearch = (appointment_id, doctor_id, date) => {\r\n    return Axios.get(`${rep.PROCEDURES_SEARCH}?appointment_id=${appointment_id}&doctor_id=${doctor_id}&date=${date}`); \r\n}\r\n\r\nexport const GetProcedures = (date) => {\r\n    return Axios.get(`${rep.PROCEDURES_BASE_URL}?date=${date}`);\r\n}\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Procedure List Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\nexport const CreateNewProcedureItem = (payload) => {\r\n    return Axios.post(rep.PROCEDURES_LIST_CREATE, payload);\r\n}\r\n\r\nexport const GetProceduresList = (search_query) => {\r\n    if (search_query && search_query !== '') {\r\n        return Axios.get(`${rep.PROCEDURES_LIST_BASE_URL}?search=${search_query}`)\r\n    }\r\n    return Axios.get(rep.PROCEDURES_LIST_BASE_URL);\r\n}\r\n\r\n\r\n/**\r\n * ------------------------------------------------------------------------------\r\n * Payments Queries\r\n * ------------------------------------------------------------------------------\r\n */\r\n\r\n export const CreateNewPaymentLog = (payload) => {\r\n    return Axios.post(rep.PAYMENTS_CREATE, payload);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { NOTIFY, LEFT_SIDEBAR, \n    ACTIVE_USER, \n    ACTIVE_PAGE, \n    TODAYS_PATIENT, \n    TODAYS_PATIENT_CLEAR, \n    TODAYS_PATIENT_APPOINTMENT_UPDATE, SETTINGS_UPDATE_LEFTSIDEBAR_LIST, FETCH_DOCTORS, FETCH_PROCEDURE_LIST } from \"../constants\";\nimport Axios from \"axios\";\nimport { SEARCH_APPOINTMENT_BY_ID } from \"../../services/rest_end_points\";\nimport { AppointmentsSearchToday, GetAllDoctors, GetProceduresList } from '../../services/queries';\n\n/**\n * LOGIN api\n * Return token\n * store token\n * user_token = token\n */\n\nAxios.interceptors.request.use(request => {\n    var user = localStorage.getItem('user');\n    if (user) {\n        request['headers']['code-medicine'] = `${user}`;\n    }\n    return request\n})\n\nexport function notify(type,title,message){\n    return {\n        type: NOTIFY,\n        payload: {\n            type: type,\n            title: title,\n            message: message\n        }\n    }\n    \n}\n\nexport function left_sidebar_controls(status){\n    return {\n        type: LEFT_SIDEBAR,\n        payload: status\n    }\n}\n\nexport function set_active_user(details){\n    return {\n        type: ACTIVE_USER,\n        payload: details\n    }\n}\n\nexport function set_active_page(details){\n    return {\n        type: ACTIVE_PAGE,\n        payload: details\n    }\n}\n\nexport function load_todays_appointments(date){\n    return function(dispatch){\n        // let d = new Date();\n        // d = new Date(d.getTime() - d.getTimezoneOffset() * 60000)\n        AppointmentsSearchToday(new Date(date))\n        .then(res => {\n            dispatch({\n                type: TODAYS_PATIENT,\n                payload: res,\n                loading: false\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: TODAYS_PATIENT,\n                payload: {\n                    data: {\n                        message: err, \n                        loading: false\n                    }\n                }\n            })\n        })\n    }\n}\n\nexport function clear_todays_appointments(){\n    return {\n        type: TODAYS_PATIENT_CLEAR\n    }\n}\n\nexport function update_appointment(appointment_id){\n    const response = Axios.get(`${SEARCH_APPOINTMENT_BY_ID}?tag=${appointment_id}`)\n    return {\n        type: TODAYS_PATIENT_APPOINTMENT_UPDATE,\n        payload: {\n            id: appointment_id,\n            new_item: response.data\n        }\n    }\n}\n\nexport function toggle_sidebar_menu_collapse(){\n    return {\n        type: SETTINGS_UPDATE_LEFTSIDEBAR_LIST,\n    }\n}\n\nexport async function fetch_doctors() {\n    const response = await GetAllDoctors();\n    return {\n        type: FETCH_DOCTORS,\n        payload: response.data\n    }\n}\n\nexport async function fetch_procedures_list(){\n    const response = await GetProceduresList();\n    return {\n        type: FETCH_PROCEDURE_LIST,\n        payload: response.data\n    }\n}","export const NOTIFY = 'notify';\nexport const LEFT_SIDEBAR = 'left_sidebar';\nexport const ACTIVE_USER = 'active_user';\nexport const ACTIVE_PAGE = 'active_page';\nexport const TODAYS_PATIENT = 'todays_patients';\nexport const TODAYS_PATIENT_CLEAR = 'clear_todays_patients';\nexport const TODAYS_PATIENT_APPOINTMENT_UPDATE = 'update_single_record';\nexport const SETTINGS_UPDATE_LEFTSIDEBAR_LIST = `settings-update-left-sidebar-list`;\nexport const FETCH_DOCTORS = 'fetch-doctors';\nexport const FETCH_PROCEDURE_LIST = 'fetch-procedure-list';","// import React from 'react'\n// import Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, CssBaseline, Typography, Divider, IconButton, List, ListItem } from '@material-ui/core';\nimport { Menu as MenuIcon, ChevronLeft as ChevronLeftIcon, ChevronRight as ChevronRightIcon } from '@material-ui/icons';\nimport { Skeleton } from '@material-ui/lab';\nimport 'styles/animations/animations.css'\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // background: '#292b2c'\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nexport default function Skeletons(props) {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n  \n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n            return (\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AppBar\n                        position=\"fixed\"\n                        className={`${clsx(classes.appBar, { [classes.appBarShift]: open })} bg-dark`}\n                    >\n                        <Toolbar>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={handleDrawerOpen}\n                                edge=\"start\"\n                                className={clsx(classes.menuButton, { [classes.hide]: open, })}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" noWrap style={{flexGrow: 1}}>\n                                Code medicine\n                            </Typography>\n                            <div>\n                                <Skeleton className={`bg-light`} variant=\"circle\" height={30} width={30}></Skeleton>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer\n                        variant=\"permanent\"\n                        className={clsx(classes.drawer, { [classes.drawerOpen]: open, [classes.drawerClose]: !open })}\n                        classes={{\n                            paper: `${clsx({ [classes.drawerOpen]: open, [classes.drawerClose]: !open })} bg-dark`,\n                        }}\n                    >\n                        <div className={classes.toolbar}>\n                            <IconButton onClick={handleDrawerClose} className={`text-white`}>\n                                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                            </IconButton>\n                        </div>\n                        <Divider />\n                        {/* <LeftSideBar open={open} /> */}\n                        <div className={`background_custom_left_side_bar d-flex justify-content-center align-items-center flex-column`} style={{ height: '25vh' }}>\n                            <Skeleton className={`bg-light`} variant=\"circle\" height={open? 80:40} width={open? 80:40} />\n                            <Skeleton className={`bg-light mt-2`} variant=\"text\" width={open? '50%': '80%'} />\n                        </div>\n                        <List>\n                            {\n                                [1,2,3,4,5].map((item,i) => {\n                                    return (\n                                        <ListItem key={i}>\n                                            <Skeleton variant=\"rect\" height={40} width={'100%'} />\n                                        </ListItem>\n                                    )\n                                })\n                            }\n                        </List>\n                    </Drawer>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <div className={`container-fluid`}>\n                            <div className={`row`}>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={100} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={100} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={100} width={'100%'} />\n                                </div>\n                            </div>\n                            <div className={`row mt-3`}>\n                                <div className={`col-lg-8`}>\n                                    <Skeleton variant=\"rect\" height={250} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={250} width={'100%'} />\n                                </div>\n                            </div>\n                            <div className={`row mt-3`}>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={120} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={120} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={120} width={'100%'} />\n                                </div>\n                            </div>\n                            <div className={`row mt-3`}>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={120} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={120} width={'100%'} />\n                                </div>\n                                <div className={`col-lg-4`}>\n                                    <Skeleton variant=\"rect\" height={120} width={'100%'} />\n                                </div>\n                            </div>\n                        </div>\n                    </main>\n                </div>\n            );\n}","import React, { Component } from 'react';\r\nimport { LOGIN_URL } from './constants';\r\nimport { connect } from 'react-redux';\r\nimport Axios from 'axios';\r\nimport { USERS_SEARCH_BY_TOKEN } from '../services/rest_end_points';\r\nimport { set_active_user } from '../redux/actions';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport _ from 'lodash'\r\nimport Skeletons from '../components/Skeletons';\r\n\r\nclass ProtectedRoutes extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.authorize_token(localStorage.getItem('user'))\r\n    }\r\n\r\n    authorize_token = (token) => {\r\n        if (_.isEmpty(this.props.active_user)){\r\n            if (token !== null){\r\n                Axios.get(`${USERS_SEARCH_BY_TOKEN}?tag=${token}`).then(res => {\r\n                    this.props.set_active_user(res.data['payload'])\r\n                }).catch(err => {\r\n                    console.log(err)\r\n                    localStorage.clear()\r\n                    localStorage.setItem('cached-path', this.props.path)\r\n                    this.props.set_active_user({})\r\n                })\r\n            }\r\n            else {\r\n                localStorage.setItem('cached-path', this.props.path)\r\n            }\r\n        }\r\n    }\r\n\r\n    check_for_token = () => {\r\n        return localStorage.getItem('user') ? true : false;\r\n    }\r\n\r\n    render() {\r\n        const { component: Component, ...props } = this.props\r\n        console.log('path', this.props.path)\r\n        let __html = <Skeletons />//<div className=\"d-flex align-items-center justify-content-center\" style={{height: '90vh'}}><Loading size={150}/></div>;\r\n\r\n        /* if user is logged in */\r\n        if (this.check_for_token()) {\r\n            /* first fetch the user details from server */\r\n            if (!_.isEmpty(this.props.active_user)) {\r\n                __html = <Route {...props} render={props => <Component {...props} />} />\r\n            }\r\n        }\r\n        else {\r\n            console.log('invalid token');\r\n            __html = <Redirect to={LOGIN_URL} />\r\n        }\r\n        return __html;\r\n    }\r\n}\r\nfunction mapStateToProps(state){\r\n    return {\r\n        active_user: state.active_user\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {set_active_user})(ProtectedRoutes)","import React, { Component } from 'react';\nimport Select from 'react-select'\nimport DateTimePicker from 'react-datetime';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\n\nclass Inputfield extends Component {\n\n    render() {\n\n        const received_props = this.props;\n\n        const _field_type = received_props.field_type;\n        const input_field_type = <input \n            {...received_props} \n            className={`form-control ${received_props.error ? 'border-danger' : ''} ${received_props.className}`} \n            />\n\n        const text_area_field_type = <textarea \n            rows={\"3\"} \n            cols={\"3\"} \n            {...received_props} \n            className={`form-control ${received_props.error ? 'border-danger' : ''} ${received_props.className}`} \n            />\n\n        const select_field_type = <Select {...received_props} />\n        const date_time_field_type = <DateTimePicker \n            {...received_props} \n            className={`clock_datatime_picker form-control ${received_props.error ? 'border-danger' : ''} ${received_props.className}`} \n            inputProps={{ \n                placeholder: received_props.placeholder, \n                className: 'border-0 w-100', \n                ...received_props.inputProps \n            }} \n            />\n        let render_field = ''\n\n        if (_field_type === 'text-area') {\n            render_field = text_area_field_type\n        }\n        else if (_field_type === 'date-time') {\n            render_field = date_time_field_type\n        }\n        else if (_field_type === 'select') {\n            render_field = select_field_type\n        }\n        else if (_field_type === 'custom') {\n            render_field = received_props.custom_field\n        }\n        else {\n            render_field = input_field_type\n        }\n\n\n        const parent_classes = received_props.parent_classes;\n        const inner_classes = received_props.inner_classes;\n        return (\n            <div className={`form-group ${parent_classes} mb-0`}>\n                {\n                    received_props.loading? \n                    <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                        <Skeleton className=\"\" count={1} height={15} width={80} />\n                    </SkeletonTheme> : \n                    (received_props.heading ? <label className=\"col-form-label mb-0 pb-1\">\n                        {received_props.heading}{received_props.required ? <span className=\"text-danger\"> * </span> : ''}\n                    </label> : '')\n                }\n                <div className={inner_classes}>\n                    {\n                        received_props.loading? \n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"mb-1\" count={1} height={40} />\n                        </SkeletonTheme> : render_field\n                    }\n                    {\n                        received_props.helper? <span className={`form-text text-muted mt-0`}>{received_props.helper}</span>: '' \n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default Inputfield;","import { toast } from 'react-toastify';\r\n\r\n\r\nexport default function Notify(type, title, message) {\r\n    const options = {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n        pauseOnFocusLoss: true\r\n    }\r\n    switch (type) {\r\n        case 'success':\r\n            return toast.success(message, options);\r\n        case 'error':\r\n            return toast.error(message, options);\r\n        case 'warning':\r\n            return toast.warn(message, options);\r\n        case 'info':\r\n            return toast.info(message, options);\r\n        default:\r\n            return toast(message, options);\r\n    }\r\n}","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport Loader from 'react-loader-spinner';\nimport { withRouter, Link } from 'react-router-dom';\nimport { set_active_user, fetch_doctors, fetch_procedures_list } from 'redux/actions';\nimport Inputfield from '../../../components/inputfield';\nimport notify from 'notify'\nimport { BASE_URL, LOGIN_URL, FORGOT_PASSWORD } from '../../../router/constants';\nimport { LoginRequest } from '../../../services/queries';\n\n\nclass Login extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: { value: '', error: false },// admin-cm@gmail.com \n            password: { value: '', error: false },// 111222333\n            remember_me_option: true,\n            loading_status: false,\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } })\n                break;\n            case 'password_text_input':\n                this.setState({ password: { value: e.target.value, error: false } })\n                break;\n            case 'remember_me_text_input':\n                this.setState({ remember_me_option: e.target.checked })\n                break;\n            default:\n                break;\n        }\n    }\n\n    __check_hard_constraints = (data) => {\n        if (data.email === '') {\n            notify('error', '', 'Please specify a username or phone number');\n            return false;\n        }\n        if (data.password === '') {\n            notify('error', '', 'Please give your password');\n            return false;\n        }\n        return true\n    }\n\n    on_submit = (e) => {\n        e.preventDefault()\n        this.setState({ loading_status: true })\n        const data = {\n            username: this.state.email.value.trim(),\n            password: this.state.password.value.trim(),\n            remember_me: this.state.remember_me_option\n        }\n        LoginRequest(data).then(async res => {\n            localStorage.setItem(\"user\", res.data['token']);\n            await this.props.set_active_user(res.data.user)\n            await this.props.fetch_doctors();\n            await this.props.fetch_procedures_list();\n            notify('success', '', res.data['message']);\n            this.setState({ loading_status: false });\n            \n            if (!localStorage.getItem('cached-path'))\n                this.props.history.push(BASE_URL);\n            else {\n                this.props.history.push(`${BASE_URL}${localStorage.getItem('cached-path').substring(1)}`);\n                localStorage.removeItem('cached-path');\n            }\n        }).catch(err => {\n            if (err.response) {\n                // console.log('login',err.response)\n                if (err.response.status >= 500) {\n                    notify('error', '', 'Server not responding! please try again later')\n                }\n                else if (err.response.status >= 400 && err.response.status < 500) {\n                    notify('error', '', err.response.data.message)\n                }\n                this.setState({\n                    loading_status: false,\n                    email: { value: this.state.email.value, error: true },\n                    password: { value: this.state.password.value, error: true }\n                })\n            }\n            console.log('login error', err) \n        });\n    }\n\n\n    render() {\n\n        var view = ''\n        if (this.state.loading_status) {\n            view = <div className=\"mt-3\">\n                <div className=\"d-flex justify-content-center \">\n                    <Loader\n                        type=\"Rings\"\n                        color=\"#00BFFF\"\n                        height={150}\n                        width={150}\n                        timeout={60000} //60 secs\n                    />\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <p>Loading...</p>\n                </div>\n            </div>\n        }\n        else {\n            const username_password = <div className={``}>\n                <Inputfield\n                    id={'email_text_input'}\n                    heading={'Email'}\n                    placeholder={\"someone@hello.com\"}\n                    input_type={'email'}\n                    onChange={this.on_text_field_change}\n                    value={this.state.email.value}\n                    error={this.state.email.error}\n                />\n                <Inputfield\n                    id={'password_text_input'}\n                    heading={'Password'}\n                    placeholder={\"Enter your password\"}\n                    type={'password'}\n                    onChange={this.on_text_field_change}\n                    value={this.state.password.value}\n                    error={this.state.password.error}\n                />\n\n            </div>\n            const remember_me_reset_password = <div className=\"form-group d-flex align-items-center\">\n                <div className=\"form-check mb-0\">\n                    <label className=\"form-check-label\">\n                        <div className=\"uniform-checker\">\n                            <span className={this.state.remember_me_option ? 'checked' : ''}>\n                                <input type=\"checkbox\"\n                                    name=\"remember\"\n                                    id=\"remember_me_text_input\"\n                                    defaultChecked={this.state.remember_me_option}\n                                    value={this.state.remember_me_option}\n                                    onChange={this.on_text_field_change}\n                                    className=\"form-input-styled\" />\n                            </span>\n                        </div>\n                        Remember\n                    </label>\n                </div>\n\n                <Link to={FORGOT_PASSWORD} className=\"ml-auto\">Forgot password?</Link>\n            </div>\n\n            view = <div className={``}>\n                {username_password}\n                <hr />\n                {remember_me_reset_password}\n            </div>\n        }\n\n        return (\n            // <Container container_type={'login'}>\n                <div className={`container-fluid`}>\n                    <div className={`row`}>\n                        <div className={`col-lg-4 col-md-6 p-0`}>\n                            <form method=\"post\" onSubmit={this.on_submit}>\n                                <div className={`card m-0`} style={{ height: '100vh' }}>\n                                    <div className={`card-header text-center h4 font-weight-light`}>\n                                        <span>Sign in</span>\n                                        <hr />\n                                    </div>\n                                    <div className={`card-body px-5`} >\n                                        {view}\n                                        <hr />\n                                        <div className=\"form-group \">\n                                            <button\n                                                type=\"submit\"\n                                                className=\"btn btn-block bg-teal-400 btn-labeled btn-labeled-right ml-auto\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={this.on_submit}>\n                                                <b><i className=\"icon-circle-right2\"></i></b>\n                                                Sign in\n                                            </button>\n                                        </div>\n\n                                        <div className=\"form-group text-center text-muted content-divider\">\n                                            <span className=\"px-2\">Don't have an account?</span>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-dark btn-labeled btn-labeled-right ml-auto\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={() => notify('info', \"UC\", 'Patients signup is not available now')}// alert(\"Patients signup under developement..\")}\n                                                // this.props.history.push(REGISTER_URL)}\n                                                >\n                                                <b><i className=\"icon-plus2\"></i></b>\n                                                Sign up\n                                            </button>\n                                        </div>\n                                        <span className=\"form-text text-center text-muted\">By continuing, you're confirming that you've read our <Link to={LOGIN_URL}>Terms &amp; Conditions</Link> and <Link to={LOGIN_URL}>Cookie Policy</Link></span>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div className={`col-lg-8 col-md-6 d-none d-lg-block d-xl-block d-md-block background_custom`}>\n\n                        </div>\n                    </div>\n                </div>\n\n            // </Container >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, fetch_doctors, fetch_procedures_list })(withRouter(Login));","export const BLOOD_GROUPS_OPTIONS = [\r\n    { id: 'blood_group_selection', label: 'A+' },\r\n    { id: 'blood_group_selection', label: 'A-' },\r\n    { id: 'blood_group_selection', label: 'B+' },\r\n    { id: 'blood_group_selection', label: 'B-' },\r\n    { id: 'blood_group_selection', label: 'AB+' },\r\n    { id: 'blood_group_selection', label: 'AB-' },\r\n    { id: 'blood_group_selection', label: 'O+' },\r\n    { id: 'blood_group_selection', label: 'O-' },\r\n    { id: 'blood_group_selection', label: 'Unknown' },\r\n];\r\nexport const GENDER_OPTIONS = [\r\n    { id: 'gender_selection', label: 'Male' },\r\n    { id: 'gender_selection', label: 'Female' },\r\n    { id: 'gender_selection', label: 'other' },\r\n];\r\nexport const ROLES_OPTIONS = [\r\n    { id: 'role_selection', label: 'Patient' },\r\n    { id: 'role_selection', label: 'Doctor' },\r\n    { id: 'role_selection', label: 'Admin' },\r\n];\r\n\r\nexport const PATIENT_VISIT_STATUSES = [\r\n    { id: 'status_selection', label: 'Scheduled'},\r\n    { id: 'status_selection', label: 'Waiting'},\r\n    { id: 'status_selection', label: 'Checked in'},\r\n    { id: 'status_selection', label: 'Checked out'},\r\n    { id: 'status_selection', label: 'Emergency'},\r\n]\r\n\r\nexport const classNameColors = [\r\n    'dark',\r\n    'primary',\r\n    'warning',\r\n    'success',\r\n    'danger',\r\n]\r\n\r\nexport const FEDRAL_CITIES = [\r\n    { id: \"city_selection\", label: \"Islamabad\" },\r\n]\r\n\r\nexport const PUNJAB_CITIES = [\r\n    { id: \"city_selection\", label: \"Ahmed Nager Chatha\" },\r\n    { id: \"city_selection\", label: \"Ahmadpur East\" },\r\n    { id: \"city_selection\", label: \"Ali Khan Abad\" },\r\n    { id: \"city_selection\", label: \"Alipur\" },\r\n    { id: \"city_selection\", label: \"Arifwala\" },\r\n    { id: \"city_selection\", label: \"Attock\" },\r\n    { id: \"city_selection\", label: \"Bhera\" },\r\n    { id: \"city_selection\", label: \"Bhalwal\" },\r\n    { id: \"city_selection\", label: \"Bahawalnagar\" },\r\n    { id: \"city_selection\", label: \"Bahawalpur\" },\r\n    { id: \"city_selection\", label: \"Bhakkar\" },\r\n    { id: \"city_selection\", label: \"Burewala\" },\r\n    { id: \"city_selection\", label: \"Chillianwala\" },\r\n    { id: \"city_selection\", label: \"Chakwal\" },\r\n    { id: \"city_selection\", label: \"Chichawatni\" },\r\n    { id: \"city_selection\", label: \"Chiniot\" },\r\n    { id: \"city_selection\", label: \"Chishtian\" },\r\n    { id: \"city_selection\", label: \"Daska\" },\r\n    { id: \"city_selection\", label: \"Darya Khan\" },\r\n    { id: \"city_selection\", label: \"Dera Ghazi Khan\" },\r\n    { id: \"city_selection\", label: \"Dhaular\" },\r\n    { id: \"city_selection\", label: \"Dina\" },\r\n    { id: \"city_selection\", label: \"Dinga\" },\r\n    { id: \"city_selection\", label: \"Dipalpur\" },\r\n    { id: \"city_selection\", label: \"Faisalabad\" },\r\n    { id: \"city_selection\", label: \"Fateh Jang\" },\r\n    { id: \"city_selection\", label: \"Ghakhar Mandi\" },\r\n    { id: \"city_selection\", label: \"Gojra\" },\r\n    { id: \"city_selection\", label: \"Gujranwala\" },\r\n    { id: \"city_selection\", label: \"Gujrat\" },\r\n    { id: \"city_selection\", label: \"Gujar Khan\" },\r\n    { id: \"city_selection\", label: \"Hafizabad\" },\r\n    { id: \"city_selection\", label: \"Haroonabad\" },\r\n    { id: \"city_selection\", label: \"Hasilpur\" },\r\n    { id: \"city_selection\", label: \"Haveli\" },\r\n    { id: \"city_selection\", label: \"Lakha\" },\r\n    { id: \"city_selection\", label: \"Jalalpur\" },\r\n    { id: \"city_selection\", label: \"Jattan\" },\r\n    { id: \"city_selection\", label: \"Jampur\" },\r\n    { id: \"city_selection\", label: \"Jaranwala\" },\r\n    { id: \"city_selection\", label: \"Jhang\" },\r\n    { id: \"city_selection\", label: \"Jhelum\" },\r\n    { id: \"city_selection\", label: \"Kalabagh\" },\r\n    { id: \"city_selection\", label: \"Karor Lal Esan\" },\r\n    { id: \"city_selection\", label: \"Kasur\" },\r\n    { id: \"city_selection\", label: \"Kamalia\" },\r\n    { id: \"city_selection\", label: \"Kamoke\" },\r\n    { id: \"city_selection\", label: \"Khanewal\" },\r\n    { id: \"city_selection\", label: \"Khanpur\" },\r\n    { id: \"city_selection\", label: \"Kharian\" },\r\n    { id: \"city_selection\", label: \"Khushab\" },\r\n    { id: \"city_selection\", label: \"Kot Adu\" },\r\n    { id: \"city_selection\", label: \"Jauharabad\" },\r\n    { id: \"city_selection\", label: \"Lahore\" },\r\n    { id: \"city_selection\", label: \"Lalamusa\" },\r\n    { id: \"city_selection\", label: \"Layyah\" },\r\n    { id: \"city_selection\", label: \"Liaquat Pur\" },\r\n    { id: \"city_selection\", label: \"Lodhran\" },\r\n    { id: \"city_selection\", label: \"Malakwal\" },\r\n    { id: \"city_selection\", label: \"Mamoori\" },\r\n    { id: \"city_selection\", label: \"Mailsi\" },\r\n    { id: \"city_selection\", label: \"Mandi Bahauddin\" },\r\n    { id: \"city_selection\", label: \"Mian Channu\" },\r\n    { id: \"city_selection\", label: \"Mianwali\" },\r\n    { id: \"city_selection\", label: \"Multan\" },\r\n    { id: \"city_selection\", label: \"Murree\" },\r\n    { id: \"city_selection\", label: \"Muridke\" },\r\n    { id: \"city_selection\", label: \"Mianwali Bangla\" },\r\n    { id: \"city_selection\", label: \"Muzaffargarh\" },\r\n    { id: \"city_selection\", label: \"Narowal\" },\r\n    { id: \"city_selection\", label: \"Okara\" },\r\n    { id: \"city_selection\", label: \"Renala Khurd\" },\r\n    { id: \"city_selection\", label: \"Pakpattan\" },\r\n    { id: \"city_selection\", label: \"Pattoki\" },\r\n    { id: \"city_selection\", label: \"Pir Mahal\" },\r\n    { id: \"city_selection\", label: \"Qaimpur\" },\r\n    { id: \"city_selection\", label: \"Qila Didar Singh\" },\r\n    { id: \"city_selection\", label: \"Rabwah\" },\r\n    { id: \"city_selection\", label: \"Raiwind\" },\r\n    { id: \"city_selection\", label: \"Rajanpur\" },\r\n    { id: \"city_selection\", label: \"Rahim Yar Khan\" },\r\n    { id: \"city_selection\", label: \"Rawalpindi\" },\r\n    { id: \"city_selection\", label: \"Sadiqabad\" },\r\n    { id: \"city_selection\", label: \"Safdarabad\" },\r\n    { id: \"city_selection\", label: \"Sahiwal\" },\r\n    { id: \"city_selection\", label: \"Sangla Hill\" },\r\n    { id: \"city_selection\", label: \"Sarai Alamgir\" },\r\n    { id: \"city_selection\", label: \"Sargodha\" },\r\n    { id: \"city_selection\", label: \"Shakargarh\" },\r\n    { id: \"city_selection\", label: \"Sheikhupura\" },\r\n    { id: \"city_selection\", label: \"Sialkot\" },\r\n    { id: \"city_selection\", label: \"Sohawa\" },\r\n    { id: \"city_selection\", label: \"Soianwala\" },\r\n    { id: \"city_selection\", label: \"Siranwali\" },\r\n    { id: \"city_selection\", label: \"Talagang\" },\r\n    { id: \"city_selection\", label: \"Taxila\" },\r\n    { id: \"city_selection\", label: \"Toba Tek Singh\" },\r\n    { id: \"city_selection\", label: \"Vehari\" },\r\n    { id: \"city_selection\", label: \"Wah Cantonment\" },\r\n    { id: \"city_selection\", label: \"Wazirabad\" },\r\n]\r\n\r\nexport const SINDH_CITIES = [\r\n    { id: \"city_selection\", label: \"Badin\" },\r\n    { id: \"city_selection\", label: \"Bhirkan\" },\r\n    { id: \"city_selection\", label: \"Rajo Khanani\" },\r\n    { id: \"city_selection\", label: \"Chak\" },\r\n    { id: \"city_selection\", label: \"Dadu\" },\r\n    { id: \"city_selection\", label: \"Digri\" },\r\n    { id: \"city_selection\", label: \"Diplo\" },\r\n    { id: \"city_selection\", label: \"Dokri\" },\r\n    { id: \"city_selection\", label: \"Ghotki\" },\r\n    { id: \"city_selection\", label: \"Haala\" },\r\n    { id: \"city_selection\", label: \"Hyderabad\" },\r\n    { id: \"city_selection\", label: \"Islamkot\" },\r\n    { id: \"city_selection\", label: \"Jacobabad\" },\r\n    { id: \"city_selection\", label: \"Jamshoro\" },\r\n    { id: \"city_selection\", label: \"Jungshahi\" },\r\n    { id: \"city_selection\", label: \"Kandhkot\" },\r\n    { id: \"city_selection\", label: \"Kandiaro\" },\r\n    { id: \"city_selection\", label: \"Karachi\" },\r\n    { id: \"city_selection\", label: \"Kashmore\" },\r\n    { id: \"city_selection\", label: \"Keti Bandar\" },\r\n    { id: \"city_selection\", label: \"Khairpur\" },\r\n    { id: \"city_selection\", label: \"Kotri\" },\r\n    { id: \"city_selection\", label: \"Larkana\" },\r\n    { id: \"city_selection\", label: \"Matiari\" },\r\n    { id: \"city_selection\", label: \"Mehar\" },\r\n    { id: \"city_selection\", label: \"Mirpur Khas\" },\r\n    { id: \"city_selection\", label: \"Mithani\" },\r\n    { id: \"city_selection\", label: \"Mithi\" },\r\n    { id: \"city_selection\", label: \"Mehrabpur\" },\r\n    { id: \"city_selection\", label: \"Moro\" },\r\n    { id: \"city_selection\", label: \"Nagarparkar\" },\r\n    { id: \"city_selection\", label: \"Naudero\" },\r\n    { id: \"city_selection\", label: \"Naushahro Feroze\" },\r\n    { id: \"city_selection\", label: \"Naushara\" },\r\n    { id: \"city_selection\", label: \"Nawabshah\" },\r\n    { id: \"city_selection\", label: \"Nazimabad\" },\r\n    { id: \"city_selection\", label: \"Qambar\" },\r\n    { id: \"city_selection\", label: \"Qasimabad\" },\r\n    { id: \"city_selection\", label: \"Ranipur\" },\r\n    { id: \"city_selection\", label: \"Ratodero\" },\r\n    { id: \"city_selection\", label: \"Rohri\" },\r\n    { id: \"city_selection\", label: \"Sakrand\" },\r\n    { id: \"city_selection\", label: \"Sanghar\" },\r\n    { id: \"city_selection\", label: \"Shahbandar\" },\r\n    { id: \"city_selection\", label: \"Shahdadkot\" },\r\n    { id: \"city_selection\", label: \"Shahdadpur\" },\r\n    { id: \"city_selection\", label: \"Shahpur Chakar\" },\r\n    { id: \"city_selection\", label: \"Shikarpaur\" },\r\n    { id: \"city_selection\", label: \"Sukkur\" },\r\n    { id: \"city_selection\", label: \"Tangwani\" },\r\n    { id: \"city_selection\", label: \"Tando Adam Khan\" },\r\n    { id: \"city_selection\", label: \"Tando Allahyar\" },\r\n    { id: \"city_selection\", label: \"Tando Muhammad Khan\" },\r\n    { id: \"city_selection\", label: \"Thatta\" },\r\n    { id: \"city_selection\", label: \"Umerkot\" },\r\n    { id: \"city_selection\", label: \"Warah\" },\r\n]\r\n\r\nexport const KPK_CITIES = [\r\n    { id: \"city_selection\", label: \"Abbottabad\" },\r\n    { id: \"city_selection\", label: \"Adezai\" },\r\n    { id: \"city_selection\", label: \"Alpuri\" },\r\n    { id: \"city_selection\", label: \"Akora Khattak\" },\r\n    { id: \"city_selection\", label: \"Ayubia\" },\r\n    { id: \"city_selection\", label: \"Banda Daud Shah\" },\r\n    { id: \"city_selection\", label: \"Bannu\" },\r\n    { id: \"city_selection\", label: \"Batkhela\" },\r\n    { id: \"city_selection\", label: \"Battagram\" },\r\n    { id: \"city_selection\", label: \"Birote\" },\r\n    { id: \"city_selection\", label: \"Chakdara\" },\r\n    { id: \"city_selection\", label: \"Charsadda\" },\r\n    { id: \"city_selection\", label: \"Chitral\" },\r\n    { id: \"city_selection\", label: \"Daggar\" },\r\n    { id: \"city_selection\", label: \"Dargai\" },\r\n    { id: \"city_selection\", label: \"Darya Khan\" },\r\n    { id: \"city_selection\", label: \"Dera Ismail Khan\" },\r\n    { id: \"city_selection\", label: \"Doaba\" },\r\n    { id: \"city_selection\", label: \"Dir\" },\r\n    { id: \"city_selection\", label: \"Drosh\" },\r\n    { id: \"city_selection\", label: \"Hangu\" },\r\n    { id: \"city_selection\", label: \"Haripur\" },\r\n    { id: \"city_selection\", label: \"Karak\" },\r\n    { id: \"city_selection\", label: \"Kohat\" },\r\n    { id: \"city_selection\", label: \"Kulachi\" },\r\n    { id: \"city_selection\", label: \"Lakki Marwat\" },\r\n    { id: \"city_selection\", label: \"Latamber\" },\r\n    { id: \"city_selection\", label: \"Madyan\" },\r\n    { id: \"city_selection\", label: \"Mansehra\" },\r\n    { id: \"city_selection\", label: \"Mardan\" },\r\n    { id: \"city_selection\", label: \"Mastuj\" },\r\n    { id: \"city_selection\", label: \"Mingora\" },\r\n    { id: \"city_selection\", label: \"Nowshera\" },\r\n    { id: \"city_selection\", label: \"Paharpur\" },\r\n    { id: \"city_selection\", label: \"Pabbi\" },\r\n    { id: \"city_selection\", label: \"Peshawar\" },\r\n    { id: \"city_selection\", label: \"Saidu Sharif\" },\r\n    { id: \"city_selection\", label: \"Shorkot\" },\r\n    { id: \"city_selection\", label: \"Shewa Adda\" },\r\n    { id: \"city_selection\", label: \"Swabi\" },\r\n    { id: \"city_selection\", label: \"Swat\" },\r\n    { id: \"city_selection\", label: \"Tangi\" },\r\n    { id: \"city_selection\", label: \"Tank\" },\r\n    { id: \"city_selection\", label: \"Thall\" },\r\n    { id: \"city_selection\", label: \"Timergara\" },\r\n    { id: \"city_selection\", label: \"Tordher\" },\r\n]\r\n\r\nexport const BALOCHISTAN_CITIES = [\r\n    { id: \"city_selection\", label: \"Awaran\" },\r\n    { id: \"city_selection\", label: \"Barkhan\" },\r\n    { id: \"city_selection\", label: \"Chagai\" },\r\n    { id: \"city_selection\", label: \"Dera Bugti\" },\r\n    { id: \"city_selection\", label: \"Gwadar\" },\r\n    { id: \"city_selection\", label: \"Harnai\" },\r\n    { id: \"city_selection\", label: \"Jafarabad\" },\r\n    { id: \"city_selection\", label: \"Jhal Magsi\" },\r\n    { id: \"city_selection\", label: \"Kacchi\" },\r\n    { id: \"city_selection\", label: \"Kalat\" },\r\n    { id: \"city_selection\", label: \"Kech\" },\r\n    { id: \"city_selection\", label: \"Kharan\" },\r\n    { id: \"city_selection\", label: \"Khuzdar\" },\r\n    { id: \"city_selection\", label: \"Killa Abdullah\" },\r\n    { id: \"city_selection\", label: \"Killa Saifullah\" },\r\n    { id: \"city_selection\", label: \"Kohlu\" },\r\n    { id: \"city_selection\", label: \"Lasbela\" },\r\n    { id: \"city_selection\", label: \"Lehri\" },\r\n    { id: \"city_selection\", label: \"Loralai\" },\r\n    { id: \"city_selection\", label: \"Mastung\" },\r\n    { id: \"city_selection\", label: \"Musakhel\" },\r\n    { id: \"city_selection\", label: \"Nasirabad\" },\r\n    { id: \"city_selection\", label: \"Nushki\" },\r\n    { id: \"city_selection\", label: \"Panjgur\" },\r\n    { id: \"city_selection\", label: \"Pishin Valley\" },\r\n    { id: \"city_selection\", label: \"Quetta\" },\r\n    { id: \"city_selection\", label: \"Sherani\" },\r\n    { id: \"city_selection\", label: \"Sibi\" },\r\n    { id: \"city_selection\", label: \"Sohbatpur\" },\r\n    { id: \"city_selection\", label: \"Washuk\" },\r\n    { id: \"city_selection\", label: \"Zhob\" },\r\n    { id: \"city_selection\", label: \"Ziarat\" },\r\n]\r\n\r\n/**\r\n * Cities of pakistan\r\n */\r\nexport const CITIES = [ \r\n    { label: 'fedral', options: FEDRAL_CITIES },\r\n    { label: 'punjab', options: PUNJAB_CITIES },\r\n    { label: 'sindh', options: SINDH_CITIES },\r\n    { label: 'kpk', options: KPK_CITIES },\r\n    { label: 'balochistan', options: BALOCHISTAN_CITIES },\r\n]\r\n\r\n/**\r\n * Provinces of pakistan\r\n */\r\nexport const PROVINCES = [\r\n    { id: 'province_selection', label: \"Fedral\" },\r\n    { id: 'province_selection', label: \"Punjab\" },\r\n    { id: 'province_selection', label: \"Sindh\" },\r\n    { id: 'province_selection', label: \"Khyber pakhtun khwa\" },\r\n    { id: 'province_selection', label: \"Balochistan\" },\r\n]\r\n\r\n/**\r\n * List of world countries\r\n */\r\nexport const COUTRIES = [\r\n    { id: \"country_selection\", label: \"Afghanistan\" },\r\n    { id: \"country_selection\", label: \"Albania\" },\r\n    { id: \"country_selection\", label: \"Algeria\" },\r\n    { id: \"country_selection\", label: \"Andorra\" },\r\n    { id: \"country_selection\", label: \"Angola\" },\r\n    { id: \"country_selection\", label: \"Antigua & Deps\" },\r\n    { id: \"country_selection\", label: \"Argentina\" },\r\n    { id: \"country_selection\", label: \"Armenia\" },\r\n    { id: \"country_selection\", label: \"Australia\" },\r\n    { id: \"country_selection\", label: \"Austria\" },\r\n    { id: \"country_selection\", label: \"Azerbaijan\" },\r\n    { id: \"country_selection\", label: \"Bahamas\" },\r\n    { id: \"country_selection\", label: \"Bahrain\" },\r\n    { id: \"country_selection\", label: \"Bangladesh\" },\r\n    { id: \"country_selection\", label: \"Barbados\" },\r\n    { id: \"country_selection\", label: \"Belarus\" },\r\n    { id: \"country_selection\", label: \"Belgium\" },\r\n    { id: \"country_selection\", label: \"Belize\" },\r\n    { id: \"country_selection\", label: \"Benin\" },\r\n    { id: \"country_selection\", label: \"Bhutan\" },\r\n    { id: \"country_selection\", label: \"Bolivia\" },\r\n    { id: \"country_selection\", label: \"Bosnia Herzegovina\" },\r\n    { id: \"country_selection\", label: \"Botswana\" },\r\n    { id: \"country_selection\", label: \"Brazil\" },\r\n    { id: \"country_selection\", label: \"Brunei\" },\r\n    { id: \"country_selection\", label: \"Bulgaria\" },\r\n    { id: \"country_selection\", label: \"Burkina\" },\r\n    { id: \"country_selection\", label: \"Burundi\" },\r\n    { id: \"country_selection\", label: \"Cambodia\" },\r\n    { id: \"country_selection\", label: \"Cameroon\" },\r\n    { id: \"country_selection\", label: \"Canada\" },\r\n    { id: \"country_selection\", label: \"Cape Verde\" },\r\n    { id: \"country_selection\", label: \"Central African Rep\" },\r\n    { id: \"country_selection\", label: \"Chad\" },\r\n    { id: \"country_selection\", label: \"Chile\" },\r\n    { id: \"country_selection\", label: \"China\" },\r\n    { id: \"country_selection\", label: \"Colombia\" },\r\n    { id: \"country_selection\", label: \"Comoros\" },\r\n    { id: \"country_selection\", label: \"Congo\" },\r\n    { id: \"country_selection\", label: \"Congo {Democratic Rep}\" },\r\n    { id: \"country_selection\", label: \"Costa Rica\" },\r\n    { id: \"country_selection\", label: \"Croatia\" },\r\n    { id: \"country_selection\", label: \"Cuba\" },\r\n    { id: \"country_selection\", label: \"Cyprus\" },\r\n    { id: \"country_selection\", label: \"Czech Republic\" },\r\n    { id: \"country_selection\", label: \"Denmark\" },\r\n    { id: \"country_selection\", label: \"Djibouti\" },\r\n    { id: \"country_selection\", label: \"Dominica\" },\r\n    { id: \"country_selection\", label: \"Dominican Republic\" },\r\n    { id: \"country_selection\", label: \"East Timor\" },\r\n    { id: \"country_selection\", label: \"Ecuador\" },\r\n    { id: \"country_selection\", label: \"Egypt\" },\r\n    { id: \"country_selection\", label: \"El Salvador\" },\r\n    { id: \"country_selection\", label: \"Equatorial Guinea\" },\r\n    { id: \"country_selection\", label: \"Eritrea\" },\r\n    { id: \"country_selection\", label: \"Estonia\" },\r\n    { id: \"country_selection\", label: \"Ethiopia\" },\r\n    { id: \"country_selection\", label: \"Fiji\" },\r\n    { id: \"country_selection\", label: \"Finland\" },\r\n    { id: \"country_selection\", label: \"France\" },\r\n    { id: \"country_selection\", label: \"Gabon\" },\r\n    { id: \"country_selection\", label: \"Gambia\" },\r\n    { id: \"country_selection\", label: \"Georgia\" },\r\n    { id: \"country_selection\", label: \"Germany\" },\r\n    { id: \"country_selection\", label: \"Ghana\" },\r\n    { id: \"country_selection\", label: \"Greece\" },\r\n    { id: \"country_selection\", label: \"Grenada\" },\r\n    { id: \"country_selection\", label: \"Guatemala\" },\r\n    { id: \"country_selection\", label: \"Guinea\" },\r\n    { id: \"country_selection\", label: \"Guinea-Bissau\" },\r\n    { id: \"country_selection\", label: \"Guyana\" },\r\n    { id: \"country_selection\", label: \"Haiti\" },\r\n    { id: \"country_selection\", label: \"Honduras\" },\r\n    { id: \"country_selection\", label: \"Hungary\" },\r\n    { id: \"country_selection\", label: \"Iceland\" },\r\n    { id: \"country_selection\", label: \"India\" },\r\n    { id: \"country_selection\", label: \"Indonesia\" },\r\n    { id: \"country_selection\", label: \"Iran\" },\r\n    { id: \"country_selection\", label: \"Iraq\" },\r\n    { id: \"country_selection\", label: \"Ireland {Republic}\" },\r\n    { id: \"country_selection\", label: \"Israel\" },\r\n    { id: \"country_selection\", label: \"Italy\" },\r\n    { id: \"country_selection\", label: \"Ivory Coast\" },\r\n    { id: \"country_selection\", label: \"Jamaica\" },\r\n    { id: \"country_selection\", label: \"Japan\" },\r\n    { id: \"country_selection\", label: \"Jordan\" },\r\n    { id: \"country_selection\", label: \"Kazakhstan\" },\r\n    { id: \"country_selection\", label: \"Kenya\" },\r\n    { id: \"country_selection\", label: \"Kiribati\" },\r\n    { id: \"country_selection\", label: \"Korea North\" },\r\n    { id: \"country_selection\", label: \"Korea South\" },\r\n    { id: \"country_selection\", label: \"Kosovo\" },\r\n    { id: \"country_selection\", label: \"Kuwait\" },\r\n    { id: \"country_selection\", label: \"Kyrgyzstan\" },\r\n    { id: \"country_selection\", label: \"Laos\" },\r\n    { id: \"country_selection\", label: \"Latvia\" },\r\n    { id: \"country_selection\", label: \"Lebanon\" },\r\n    { id: \"country_selection\", label: \"Lesotho\" },\r\n    { id: \"country_selection\", label: \"Liberia\" },\r\n    { id: \"country_selection\", label: \"Libya\" },\r\n    { id: \"country_selection\", label: \"Liechtenstein\" },\r\n    { id: \"country_selection\", label: \"Lithuania\" },\r\n    { id: \"country_selection\", label: \"Luxembourg\" },\r\n    { id: \"country_selection\", label: \"Macedonia\" },\r\n    { id: \"country_selection\", label: \"Madagascar\" },\r\n    { id: \"country_selection\", label: \"Malawi\" },\r\n    { id: \"country_selection\", label: \"Malaysia\" },\r\n    { id: \"country_selection\", label: \"Maldives\" },\r\n    { id: \"country_selection\", label: \"Mali\" },\r\n    { id: \"country_selection\", label: \"Malta\" },\r\n    { id: \"country_selection\", label: \"Marshall Islands\" },\r\n    { id: \"country_selection\", label: \"Mauritania\" },\r\n    { id: \"country_selection\", label: \"Mauritius\" },\r\n    { id: \"country_selection\", label: \"Mexico\" },\r\n    { id: \"country_selection\", label: \"Micronesia\" },\r\n    { id: \"country_selection\", label: \"Moldova\" },\r\n    { id: \"country_selection\", label: \"Monaco\" },\r\n    { id: \"country_selection\", label: \"Mongolia\" },\r\n    { id: \"country_selection\", label: \"Montenegro\" },\r\n    { id: \"country_selection\", label: \"Morocco\" },\r\n    { id: \"country_selection\", label: \"Mozambique\" },\r\n    { id: \"country_selection\", label: \"Myanmar, {Burma}\" },\r\n    { id: \"country_selection\", label: \"Namibia\" },\r\n    { id: \"country_selection\", label: \"Nauru\" },\r\n    { id: \"country_selection\", label: \"Nepal\" },\r\n    { id: \"country_selection\", label: \"Netherlands\" },\r\n    { id: \"country_selection\", label: \"New Zealand\" },\r\n    { id: \"country_selection\", label: \"Nicaragua\" },\r\n    { id: \"country_selection\", label: \"Niger\" },\r\n    { id: \"country_selection\", label: \"Nigeria\" },\r\n    { id: \"country_selection\", label: \"Norway\" },\r\n    { id: \"country_selection\", label: \"Oman\" },\r\n    { id: \"country_selection\", label: \"Pakistan\" },\r\n    { id: \"country_selection\", label: \"Palau\" },\r\n    { id: \"country_selection\", label: \"Panama\" },\r\n    { id: \"country_selection\", label: \"Papua New Guinea\" },\r\n    { id: \"country_selection\", label: \"Paraguay\" },\r\n    { id: \"country_selection\", label: \"Peru\" },\r\n    { id: \"country_selection\", label: \"Philippines\" },\r\n    { id: \"country_selection\", label: \"Poland\" },\r\n    { id: \"country_selection\", label: \"Portugal\" },\r\n    { id: \"country_selection\", label: \"Qatar\" },\r\n    { id: \"country_selection\", label: \"Romania\" },\r\n    { id: \"country_selection\", label: \"Russian Federation\" },\r\n    { id: \"country_selection\", label: \"Rwanda\" },\r\n    { id: \"country_selection\", label: \"St Kitts & Nevis\" },\r\n    { id: \"country_selection\", label: \"St Lucia\" },\r\n    { id: \"country_selection\", label: \"Saint Vincent & the Grenadines\" },\r\n    { id: \"country_selection\", label: \"Samoa\" },\r\n    { id: \"country_selection\", label: \"San Marino\" },\r\n    { id: \"country_selection\", label: \"Sao Tome & Principe\" },\r\n    { id: \"country_selection\", label: \"Saudi Arabia\" },\r\n    { id: \"country_selection\", label: \"Senegal\" },\r\n    { id: \"country_selection\", label: \"Serbia\" },\r\n    { id: \"country_selection\", label: \"Seychelles\" },\r\n    { id: \"country_selection\", label: \"Sierra Leone\" },\r\n    { id: \"country_selection\", label: \"Singapore\" },\r\n    { id: \"country_selection\", label: \"Slovakia\" },\r\n    { id: \"country_selection\", label: \"Slovenia\" },\r\n    { id: \"country_selection\", label: \"Solomon Islands\" },\r\n    { id: \"country_selection\", label: \"Somalia\" },\r\n    { id: \"country_selection\", label: \"South Africa\" },\r\n    { id: \"country_selection\", label: \"South Sudan\" },\r\n    { id: \"country_selection\", label: \"Spain\" },\r\n    { id: \"country_selection\", label: \"Sri Lanka\" },\r\n    { id: \"country_selection\", label: \"Sudan\" },\r\n    { id: \"country_selection\", label: \"Suriname\" },\r\n    { id: \"country_selection\", label: \"Swaziland\" },\r\n    { id: \"country_selection\", label: \"Sweden\" },\r\n    { id: \"country_selection\", label: \"Switzerland\" },\r\n    { id: \"country_selection\", label: \"Syria\" },\r\n    { id: \"country_selection\", label: \"Taiwan\" },\r\n    { id: \"country_selection\", label: \"Tajikistan\" },\r\n    { id: \"country_selection\", label: \"Tanzania\" },\r\n    { id: \"country_selection\", label: \"Thailand\" },\r\n    { id: \"country_selection\", label: \"Togo\" },\r\n    { id: \"country_selection\", label: \"Tonga\" },\r\n    { id: \"country_selection\", label: \"Trinidad & Tobago\" },\r\n    { id: \"country_selection\", label: \"Tunisia\" },\r\n    { id: \"country_selection\", label: \"Turkey\" },\r\n    { id: \"country_selection\", label: \"Turkmenistan\" },\r\n    { id: \"country_selection\", label: \"Tuvalu\" },\r\n    { id: \"country_selection\", label: \"Uganda\" },\r\n    { id: \"country_selection\", label: \"Ukraine\" },\r\n    { id: \"country_selection\", label: \"United Arab Emirates\" },\r\n    { id: \"country_selection\", label: \"United Kingdom\" },\r\n    { id: \"country_selection\", label: \"United States\" },\r\n    { id: \"country_selection\", label: \"Uruguay\" },\r\n    { id: \"country_selection\", label: \"Uzbekistan\" },\r\n    { id: \"country_selection\", label: \"Vanuatu\" },\r\n    { id: \"country_selection\", label: \"Vatican City\" },\r\n    { id: \"country_selection\", label: \"Venezuela\" },\r\n    { id: \"country_selection\", label: \"Vietnam\" },\r\n    { id: \"country_selection\", label: \"Yemen\" },\r\n    { id: \"country_selection\", label: \"Zambia\" },\r\n    { id: \"country_selection\", label: \"Zimbabwe\" },\r\n]\r\n\r\nexport const HOURS24 = [\r\n    { id: 'hour_selection', label: '00' },\r\n    { id: 'hour_selection', label: '01' },\r\n    { id: 'hour_selection', label: '02' },\r\n    { id: 'hour_selection', label: '03' },\r\n    { id: 'hour_selection', label: '04' },\r\n    { id: 'hour_selection', label: '05' },\r\n    { id: 'hour_selection', label: '06' },\r\n    { id: 'hour_selection', label: '07' },\r\n    { id: 'hour_selection', label: '08' },\r\n    { id: 'hour_selection', label: '09' },\r\n    { id: 'hour_selection', label: '10' },\r\n    { id: 'hour_selection', label: '11' },\r\n    { id: 'hour_selection', label: '12' },\r\n    { id: 'hour_selection', label: '13' },\r\n    { id: 'hour_selection', label: '14' },\r\n    { id: 'hour_selection', label: '15' },\r\n    { id: 'hour_selection', label: '16' },\r\n    { id: 'hour_selection', label: '17' },\r\n    { id: 'hour_selection', label: '18' },\r\n    { id: 'hour_selection', label: '19' },\r\n    { id: 'hour_selection', label: '20' },\r\n    { id: 'hour_selection', label: '21' },\r\n    { id: 'hour_selection', label: '22' },\r\n    { id: 'hour_selection', label: '23' },\r\n]\r\n\r\nexport const TIME_PERIOD = [\r\n    { id: 'time_period_selection', label: 'AM' },\r\n    { id: 'time_period_selection', label: 'PM' },\r\n]\r\n\r\nexport const HOURS12 = [\r\n    { id: 'hour_selection', label: '01' },\r\n    { id: 'hour_selection', label: '02' },\r\n    { id: 'hour_selection', label: '03' },\r\n    { id: 'hour_selection', label: '04' },\r\n    { id: 'hour_selection', label: '05' },\r\n    { id: 'hour_selection', label: '06' },\r\n    { id: 'hour_selection', label: '07' },\r\n    { id: 'hour_selection', label: '08' },\r\n    { id: 'hour_selection', label: '09' },\r\n    { id: 'hour_selection', label: '10' },\r\n    { id: 'hour_selection', label: '11' },\r\n    { id: 'hour_selection', label: '12' },\r\n]\r\n\r\nexport const MINS = [\r\n    { id: 'min_selection', label: '00' },\r\n    { id: 'min_selection', label: '01' },\r\n    { id: 'min_selection', label: '02' },\r\n    { id: 'min_selection', label: '03' },\r\n    { id: 'min_selection', label: '04' },\r\n    { id: 'min_selection', label: '05' },\r\n    { id: 'min_selection', label: '06' },\r\n    { id: 'min_selection', label: '07' },\r\n    { id: 'min_selection', label: '08' },\r\n    { id: 'min_selection', label: '09' },\r\n    { id: 'min_selection', label: '10' },\r\n    { id: 'min_selection', label: '11' },\r\n    { id: 'min_selection', label: '12' },\r\n    { id: 'min_selection', label: '13' },\r\n    { id: 'min_selection', label: '14' },\r\n    { id: 'min_selection', label: '15' },\r\n    { id: 'min_selection', label: '16' },\r\n    { id: 'min_selection', label: '17' },\r\n    { id: 'min_selection', label: '18' },\r\n    { id: 'min_selection', label: '19' },\r\n    { id: 'min_selection', label: '20' },\r\n    { id: 'min_selection', label: '21' },\r\n    { id: 'min_selection', label: '22' },\r\n    { id: 'min_selection', label: '23' },\r\n    { id: 'min_selection', label: '24' },\r\n    { id: 'min_selection', label: '25' },\r\n    { id: 'min_selection', label: '26' },\r\n    { id: 'min_selection', label: '27' },\r\n    { id: 'min_selection', label: '28' },\r\n    { id: 'min_selection', label: '29' },\r\n    { id: 'min_selection', label: '30' },\r\n    { id: 'min_selection', label: '31' },\r\n    { id: 'min_selection', label: '32' },\r\n    { id: 'min_selection', label: '33' },\r\n    { id: 'min_selection', label: '34' },\r\n    { id: 'min_selection', label: '35' },\r\n    { id: 'min_selection', label: '36' },\r\n    { id: 'min_selection', label: '37' },\r\n    { id: 'min_selection', label: '38' },\r\n    { id: 'min_selection', label: '39' },\r\n    { id: 'min_selection', label: '40' },\r\n    { id: 'min_selection', label: '41' },\r\n    { id: 'min_selection', label: '42' },\r\n    { id: 'min_selection', label: '43' },\r\n    { id: 'min_selection', label: '44' },\r\n    { id: 'min_selection', label: '45' },\r\n    { id: 'min_selection', label: '46' },\r\n    { id: 'min_selection', label: '47' },\r\n    { id: 'min_selection', label: '48' },\r\n    { id: 'min_selection', label: '49' },\r\n    { id: 'min_selection', label: '50' },\r\n    { id: 'min_selection', label: '51' },\r\n    { id: 'min_selection', label: '52' },\r\n    { id: 'min_selection', label: '53' },\r\n    { id: 'min_selection', label: '54' },\r\n    { id: 'min_selection', label: '55' },\r\n    { id: 'min_selection', label: '56' },\r\n    { id: 'min_selection', label: '57' },\r\n    { id: 'min_selection', label: '58' },\r\n    { id: 'min_selection', label: '59' },\r\n]\r\n\r\nexport const MINS_BY_5 = [\r\n    { id: 'min_selection', label: '00' },\r\n    { id: 'min_selection', label: '05' },\r\n    { id: 'min_selection', label: '10' },\r\n    { id: 'min_selection', label: '15' },\r\n    { id: 'min_selection', label: '20' },\r\n    { id: 'min_selection', label: '25' },\r\n    { id: 'min_selection', label: '30' },\r\n    { id: 'min_selection', label: '35' },\r\n    { id: 'min_selection', label: '40' },\r\n    { id: 'min_selection', label: '45' },\r\n    { id: 'min_selection', label: '50' },\r\n    { id: 'min_selection', label: '55' },\r\n]","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport Axios from 'axios';\nimport { USERS_CREATE } from '../../../services/rest_end_points';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { LOGIN_URL } from '../../../router/constants';\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport './register.css';\nimport { withRouter } from 'react-router-dom';\nimport Inputfield from '../../../components/inputfield';\nimport { BLOOD_GROUPS_OPTIONS, GENDER_OPTIONS, ROLES_OPTIONS } from '../../../utils/constant_data';\nimport notify from 'notify'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            first_name: { value: '', error: false },\n            last_name: { value: '', error: false },\n            email: { value: '', error: false },\n            password: { value: '', error: false },\n            verify_password: { value: '', error: false },\n            gender: { value: '', error: false },\n            dob: { value: '', error: false },\n            blood_group: { value: '', error: false },\n            role: { value: '', error: false },\n            phone_number: { value: '', error: false },\n            cnic: { value: '', error: false },\n            address: { value: '', error: false },\n            loading_status: false,\n            role_select_modal_visibility: false,\n\n            current_page: 0,\n        }\n    }\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'first_name_text_input':\n                this.setState({ first_name: { value: e.target.value, error: false } })\n                break;\n            case 'last_name_text_input':\n                this.setState({ last_name: { value: e.target.value, error: false } })\n                break;\n            case 'cnic_text_input':\n                if (e.target.value.length <= 13)\n                    this.setState({ cnic: { value: e.target.value, error: false } })\n                break;\n            case 'phone_number_text_input':\n                if (e.target.value.length <= 11)\n                    this.setState({ phone_number: { value: e.target.value, error: false } })\n                break;\n            case 'email_text_input':\n                this.setState({ email: { value: e.target.value, error: false } })\n                break;\n            case 'password_text_input':\n                this.setState({ password: { value: e.target.value, error: false } })\n                break;\n            case 'verify_password_text_input':\n                this.setState({ verify_password: { value: e.target.value, error: false } })\n                break;\n            case 'address_text_input':\n                this.setState({ address: { value: e.target.value, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_date_of_birth_change = (e) => {\n\n        if (e === '')\n            this.setState({ dob: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ dob: { value: configured_date } })\n            }\n        }\n    }\n    on_selected_changed = (e) => {\n        switch (e.id) {\n            case 'blood_group_selection':\n                this.setState({ blood_group: { value: e.label, error: false } })\n                break;\n            case 'gender_selection':\n                this.setState({ gender: { value: e.label, error: false } })\n                break;\n            case 'role_selection':\n                this.setState({ role: { value: e.label, error: false } })\n                break;\n            default:\n                break;\n        }\n    }\n\n    check_input = (input,required = true,only_alpha=false,only_numbers=false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required  && input === ''){\n            return true;\n        }\n        if (only_alpha && !input.match(alphabets)){\n            return true;\n        }\n        if (only_numbers && !input.match(numbers)){\n            return true;\n        }\n        return false;\n    }\n\n    check_hard_constraints = (input,include=\"\",length_check=\"default\",val=-1) => {\n        if (!input.includes(include)) {\n            return true;\n        }\n        switch(length_check){\n            case 'eq':\n                if (input.length !== val){\n                    return true\n                }\n                break;\n            case 'min':\n                if (input.length < val){\n                    return true\n                }\n                break;\n            case 'max':\n                if (input.length > val){\n                    return true\n                }\n                break;\n            default:\n                break\n        }\n        return false;\n    }\n\n    on_submit = async (e) => {\n        this.setState({ loading_status: true })\n            \n        let error = false\n        if(this.check_input(this.state.first_name.value,true,true,false)){\n            this.setState({ current_page: 0, first_name: { value: this.state.first_name.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.last_name.value,true,true,false)){\n            this.setState({ current_page: 0, last_name: { value: this.state.last_name.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.email.value,true,false,false) || this.check_hard_constraints(this.state.email.value,\"@\")){\n            this.setState({ current_page: 0, email: { value: this.state.email.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.phone_number.value,true,false,true) || this.check_hard_constraints(this.state.phone_number.value,\"\",\"eq\",11)){\n            this.setState({ current_page: 0, phone_number: { value: this.state.phone_number.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.password.value,true,false,false) || this.check_hard_constraints(this.state.password.value,\"\",\"min\",8)){\n            this.setState({ current_page: 1, password: { value: this.state.password.value, error: true}})\n            error = true;\n        }\n        if (this.state.password.value !== this.state.verify_password.value){\n            this.setState({ \n                password: { value: this.state.password.value, error: true },\n                verify_password: { value: this.state.verify_password.value, error: true },\n                current_page: 1, \n            })\n            error = true;\n        }\n        if(this.check_input(this.state.cnic.value,true,false,true) || this.check_hard_constraints(this.state.cnic.value,\"\",\"eq\",13)){\n            this.setState({ current_page: 2, cnic: { value: this.state.cnic.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.dob.value,true,false,false)){\n            this.setState({ current_page: 2, dob: { value: this.state.dob.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.address.value,true,false,false)){\n            this.setState({ current_page: 2, address: { value: this.state.address.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.role.value,true,true,false)){\n            this.setState({ current_page: 3, role: { value: this.state.role.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.gender.value,true,true,false)){\n            this.setState({ current_page: 3, gender: { value: this.state.gender.value, error: true}})\n            error = true;\n        }\n        if(this.check_input(this.state.blood_group.value,true,false,false)){\n            this.setState({ current_page: 3, blood_group: { value: this.state.blood_group.value, error: true}})\n            error = true;\n        }\n        if (error === true){\n            notify('error','','Invalid info')\n            this.setState({ loading_status: false })\n            return\n        }\n        const data = {\n            first_name: this.state.first_name.value.trim(),\n            last_name: this.state.last_name.value.trim(),\n            email: this.state.email.value.trim(),\n            password: this.state.password.value.trim(),\n            verify_password: this.state.verify_password.value.trim(),\n            phone_number: this.state.phone_number.value.trim(),\n            cnic: this.state.cnic.value.trim(),\n            role: this.state.role.value.trim(),\n            dob: this.state.dob.value,\n            gender: this.state.gender.value.trim(),\n            blood_group: this.state.blood_group.value.trim(),\n            address: this.state.address.value.trim()\n        }\n        const response = await Axios.post(USERS_CREATE, data);\n        try {\n            if (response.data['status']) {\n                notify('success', '', response.data['message']);\n                this.props.history.push(LOGIN_URL);\n            }\n            else {\n                notify('error', '', response.data['message'])\n                this.setState({ loading_status: false })\n            }\n        }\n        catch (err) {\n            notify('error', '', 'We are sorry for invonvenience. Server is not responding! please try again later')\n            this.setState({ loading_status: false })\n        }\n    }\n\n    \n    next_button_click = (e) => {\n        e.preventDefault()\n        if (this.state.current_page < 3){\n            this.setState({current_page: this.state.current_page + 1})\n        }\n        else if (this.state.current_page === 3){\n            this.on_submit()\n        } \n    }\n    back_button_click = (e) => {\n        if (this.state.current_page >= 0)\n            this.setState({current_page: this.state.current_page - 1})\n    }\n\n    render() {\n        const loader = <div className=\"mt-3\">\n                            <div className=\"d-flex justify-content-center \">\n                                <Loader\n                                    type=\"Rings\"\n                                    color=\"#00BFFF\"\n                                    height={150}\n                                    width={150}\n                                    timeout={60000} //60 secs\n                                />\n                            </div>\n                            <div className=\"d-flex justify-content-center\">\n                                <p>Loading...</p>\n                            </div>\n                        </div>\n        let to_render_page = loader\n        if (this.state.loading_status) {\n            to_render_page = loader\n        }\n        else {\n\n            const name_and_email_and_phone = <div className={``}>\n                    <Inputfield\n                            id={'email_text_input'}\n                            label_tag={'Email'}\n                            placeholder={\"someone@hello.com\"}\n                            icon_class={'icon-envelop'}\n                            input_type={'email'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.email.value}\n                            error={this.state.email.error}\n                        />\n                    <Inputfield\n                            id={`first_name_text_input`}\n                            label_tag={'First name'}\n                            placeholder=\"Enter your first name\"\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.first_name.value}\n                            error={this.state.first_name.error}\n                        />\n                    <Inputfield\n                            id={`last_name_text_input`}\n                            label_tag={'Last name'}\n                            placeholder=\"Enter your last name\"\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.last_name.value}\n                            error={this.state.last_name.error}\n                        />\n                    <Inputfield\n                            id={`phone_number_text_input`}\n                            label_tag={'Phone Number'}\n                            placeholder=\"Enter your phone number\"\n                            icon_class={'icon-phone2'}\n                            input_type={'number'}\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.phone_number.value}\n                            error={this.state.phone_number.error}\n                        />\n                </div>      \n            const password_and_verification = <div className={``}>\n                        <Inputfield\n                                id={`password_text_input`}\n                                label_tag={'Password'}\n                                placeholder=\"Enter password\"\n                                icon_class={'icon-user-lock'}\n                                input_type={'password'}\n                                on_text_change_listener={this.on_text_field_change}\n                                default_value={this.state.password.value}\n                                error={this.state.password.error}\n                            />\n                        <Inputfield\n                                id={`verify_password_text_input`}\n                                label_tag={'Verify Password'}\n                                placeholder=\"Re-enter password\"\n                                icon_class={'icon-user-lock'}\n                                input_type={'password'}\n                                on_text_change_listener={this.on_text_field_change}\n                                default_value={this.state.verify_password.value}\n                                error={this.state.verify_password.error}\n                            />\n                </div>\n            const date_of_birth_and_cnic_address = <div className={``}>\n                    <Inputfield \n                        id={`cnic_text_input`}\n                        label_tag={'CNIC'}\n                        placeholder=\"Enter your cnic\"\n                        icon_class={'icon-vcard'}\n                        input_type={'text'}\n                        on_text_change_listener={this.on_text_field_change}\n                        default_value={this.state.cnic.value}\n                        error={this.state.cnic.error}\n                        />\n                    {/* <div className=\"form-group row\">\n                        <label className=\"col-form-label-lg\">Date of birth</label>\n                        <div className={`input-group`}>\n                            <span className=\"input-group-prepend\">\n                                <span className=\"input-group-text\"><i className={'icon-calendar3'}/></span>\n                            </span>\n                            <DateTimePicker id=\"dob_text_input\"\n                                onChange={this.on_date_of_birth_change}\n                                className=\"clock_datatime_picker form-control form-control-lg \"\n                                inputProps={{ placeholder: 'Select your date of birth', width: '100%', className: 'border-0' }}\n                                input={true}\n                                dateFormat={'ll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.dob.value}\n                            />\n                        </div>\n                    </div> */}\n                    <Inputfield \n                        id={`dob_text_input`}\n                        label_tag={'Date of birth'}\n                        icon_class={'icon-calendar3'}\n                        placeholder=\"Date of birth\"\n                        input_type={'text'}\n                        field_type=\"date-time\"\n                        date_format={'ll'}\n                        time_format={false}\n                        on_text_change_listener={this.on_date_of_birth_change}\n                        default_value={this.state.dob.value}\n                        error={this.state.dob.error}\n                        />\n                    <Inputfield\n                        id={`address_text_input`}\n                        label_tag={'What is your current address'}\n                        placeholder=\"Enter your address\"\n                        icon_class={'icon-home'}\n                        input_type={'text'}\n                        on_text_change_listener={this.on_text_field_change}\n                        default_value={this.state.address.value}\n                        error={this.state.address.error}\n                        field_type={'text-area'}\n                    />\n                    \n                </div>\n            const role_gender_and_blood_group = <div className={``}>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">What is your blood group</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-droplet'}/></span>\n                        </span>\n                        <Select\n                            className=\"w-75\"\n                            options={BLOOD_GROUPS_OPTIONS}\n                            classNamePrefix={``}\n                            components={makeAnimated()}\n                            placeholder=\"Select blood group\"\n                            id=\"blood_group_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">Specify your gender</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-man-woman'}/></span>\n                        </span>\n\n                        <Select\n                            className=\"w-75\"\n                            options={GENDER_OPTIONS}\n                            components={makeAnimated()}\n                            classNamePrefix={``}\n                            placeholder=\"Select gender\"\n                            id=\"gender_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-form-label-lg\">How you want to go into this</label>\n                    <div className={`input-group`}>\n                        <span className=\"input-group-prepend\">\n                            <span className=\"input-group-text\"><i className={'icon-user-tie'}/></span>\n                        </span>\n                            \n                        <Select\n                            className=\"w-75\"\n                            options={ROLES_OPTIONS}\n                            classNamePrefix={``}\n                            placeholder=\"Select role\"\n                            id=\"role_selection\"\n                            onChange={this.on_selected_changed}\n                        />\n                    </div>\n                </div>\n            </div>\n            \n            if (this.state.current_page === 0){\n                to_render_page = name_and_email_and_phone\n            }\n            else if (this.state.current_page === 1){\n                to_render_page = password_and_verification\n            }\n            else if (this.state.current_page === 2){\n                to_render_page = date_of_birth_and_cnic_address\n            }\n            else{\n                to_render_page = role_gender_and_blood_group\n            }\n\n        }\n        return (\n            // <Container container_type={'register'}>\n                <div className={`container-fluid`}>\n                    <div className={`row`}>\n                        <div className={`col-lg-4 col-md-6 p-0`} >\n                            <form method=\"post\" action={this.next_button_click}>\n                                <div className={`card m-0 `} style={{height: '100vh'}}>\n                                    <div className={`card-header text-center h4 font-weight-light`}>\n                                        <span>Sign up</span>\n                                        <hr/>\n                                    </div>\n\n                                    <div className={`card-body px-5`}>                   \n                                        {to_render_page}\n                                    </div>\n\n                                    <div className={`row card-footer`}>\n                                        \n                                        \n                                        <div className=\"col-4\">\n                                            <button  \n                                                id=\"back_button\"\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-teal-400 btn-labeled btn-labeled-left pl-5 mr-2\"                                        \n                                                style={{ textTransform: \"inherit\", display: this.state.current_page === 0? 'none': 'inline'}}\n                                                onClick={this.back_button_click}>\n                                                <b><i className=\"icon-arrow-left13\"/></b>\n                                                Back\n                                            </button>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-block bg-danger btn-labeled btn-labeled-right pr-5 mr-2\"\n                                                style={{ textTransform: \"inherit\" }}\n                                                onClick={() => this.props.history.push(LOGIN_URL)}>\n                                                <b><i className=\"icon-cross\"></i></b>\n                                                Cancel\n                                            </button>\n                                        </div>\n                                        <div className={`col-4`}>\n                                            <button\n                                                type=\"submit\"\n                                                className={`btn btn-block bg-teal-400 btn-labeled btn-labeled-right pr-5`}\n                                                id=\"next_button\"\n                                                onClick={this.next_button_click}>\n                                                {\n                                                    this.state.current_page === 3? <b><i className=\"icon-plus3\"></i></b>:\n                                                            <b><i className=\"icon-arrow-right14\"></i></b>\n                                                }\n                                                {\n                                                    this.state.current_page === 3? \"Register\":'Next'\n                                                }\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div className={`col-lg-8 col-md-6 d-none d-lg-block d-xl-block d-md-block background_custom`} style={{height:'100vh'}}>\n                                            \n                        </div>\n                    </div>\n                </div>\n            // </Container>\n        );\n    }\n}\nexport default withRouter(Register);","import React, { Fragment, useState } from 'react'\nimport Inputfield from '../../../components/inputfield';\nimport { withRouter } from 'react-router-dom';\n\n\nfunction ForgotPassword(props) {\n\n    const [email,set_email] = useState('')\n    const [error,set_error] = useState(false)\n\n    function on_change(e) {\n        set_email(e.target.value)\n        set_error(false)\n    }\n\n    function on_submit() {\n        if (email === '')\n            set_error(true)\n            return\n        \n        // props.history.push(LOGIN_URL)\n    }\n\n    return (\n        <Fragment>\n            <div className=\"card shadow w-lg-50 w-md-75 w-100\">\n                <div className=\"card-header\">\n                    <h4>Reset your password</h4>\n                </div>\n                <div className=\"card-body px-4\" >\n                    <Inputfield\n                        id=\"email_text_input\"\n                        label_tag=\"Email\"\n                        placeholder=\"Enter your email\"\n                        icon_class=\"icon-envelop\"\n                        type={'email'}\n                        onChange={(e) => on_change(e)}\n                        defaultValue={email}\n                        error={error}\n                    />\n                </div>\n                \n                <div className=\"card-footer\">\n                    <button className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 float-right\"\n                        onClick={() => on_submit()}>\n                        <b><i className=\"icon-user-check\" /></b>\n                        Submit Request\n                    </button>\n                </div>\n                \n            </div>\n            \n        </Fragment>\n    )\n}\nexport default withRouter(ForgotPassword);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggle_sidebar_menu_collapse } from '../../redux/actions';\r\n\r\nclass Settings extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    menu_style_change = (e) => {\r\n        console.log('settings menu styke change', e.target)\r\n        this.props.toggle_sidebar_menu_collapse();\r\n        console.log('props settings', this.props.settings);\r\n    }\r\n\r\n    render() {\r\n        console.log('props settings', this.props.settings);\r\n        return(\r\n                <div className={`row`}>\r\n                    <div className={`col-lg-6`}>\r\n                        <div className={`d-flex`}>\r\n                            <span className={`font-weight-bold mr-3`}>Menu Style</span>\r\n                            <div className=\"form-check mr-2\">\r\n                                <label className=\"form-check-label\">\r\n                                    <div className=\"uniform-checker\">\r\n                                        <span className={this.props.settings.left_sidebar_collapsed ? 'checked' : ''}>\r\n                                            <input type=\"checkbox\"\r\n                                                name=\"is_active\"\r\n                                                id=\"user_is_active\"\r\n                                                onChange={this.menu_style_change}\r\n                                                className=\"form-input-styled\" />\r\n                                        </span>\r\n                                    </div>\r\n                                    Collapsed\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"form-check mb-0\">\r\n                                <label className=\"form-check-label\">\r\n                                    <div className=\"uniform-checker\">\r\n                                        <span className={this.props.settings.left_sidebar_collapsed ? '' : 'checked'}>\r\n                                            <input type=\"checkbox\"\r\n                                                name=\"is_active\"\r\n                                                id=\"user_is_active\"\r\n                                                onChange={this.menu_style_change}\r\n                                                className=\"form-input-styled\" />\r\n                                        </span>\r\n                                    </div>\r\n                                    UnCollapsed (Experimental)\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction map_state_to_props(state){\r\n    return {\r\n        settings: state.settings\r\n    }\r\n}\r\n\r\nexport default connect(map_state_to_props, { toggle_sidebar_menu_collapse })(Settings)","import _ from 'lodash';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport moment from 'moment'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\n\r\nfunction customReducer(state, action) {\r\n    // console.log('state', state);\r\n    // console.log('action', action);\r\n    switch (action.type) {\r\n        case 'CHANGE_SORT':\r\n            if (state.column === action.column) {\r\n                return {\r\n                    ...state,\r\n                    data: state.data.reverse(),\r\n                    direction: state.direction === 'ascending' ? 'descending' : 'ascending',\r\n                }\r\n            }\r\n\r\n            return {\r\n                column: action.column,\r\n                data: _.sortBy(state.data, [action.column]),\r\n                direction: 'ascending',\r\n            }\r\n        case 'UPDATE_DATA':\r\n            return {\r\n                ...state,\r\n                data: _.sortBy(action.data, [action.column]),\r\n            }\r\n        default:\r\n            throw new Error()\r\n    }\r\n}\r\n\r\nfunction CustomTable(props) {\r\n    const isInitialMount = useRef(true);\r\n    const [state, dispatch] = React.useReducer(customReducer, {\r\n        column: null,\r\n        data: props.rows,\r\n        direction: null,\r\n    })\r\n    const { column, data, direction } = state\r\n\r\n    useEffect(() => {\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n            // console.log('component did mount')\r\n        }\r\n        else {\r\n            // console.log('component did update')\r\n            dispatch({ type: 'UPDATE_DATA', data: props.rows },)\r\n        }\r\n\r\n    }, [props.rows])\r\n\r\n    function isDate(dateStr) {\r\n        return !isNaN(new Date(dateStr).getDate());\r\n    }\r\n    const parse_item = (item) => {\r\n        if (typeof (item) === 'boolean') {\r\n            return item ? <i className={`icon-check2 bg-success`} /> : <i className={`icon-cross2 bg-danger`} />\r\n        }\r\n        else if (typeof (item) === 'string') {\r\n            if (isDate(item)) {\r\n                return moment(item).format('ll')\r\n            }\r\n            else if (item === \"\") {\r\n                return <i className={`icon-dash`} />\r\n            }\r\n            else {\r\n                return item;\r\n            }\r\n        }\r\n        else {\r\n            if (item === null)\r\n                return <i className={`icon-dash`} />\r\n            return item\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Table sortable stackable celled textAlign=\"center\" size=\"large\" collapsing>\r\n            <Table.Header className={`bg-dark`}>\r\n                <Table.Row>\r\n                    {\r\n                        Object.keys(props.headCells).map((item, i) => {\r\n                            return (\r\n                                <Table.HeaderCell key={i}\r\n                                    sorted={column === props.headCells[item].id ? direction : null}\r\n                                    onClick={() => dispatch({ type: 'CHANGE_SORT', column: props.headCells[item].id })}>\r\n                                    {props.headCells[item].label}\r\n                                </Table.HeaderCell>\r\n\r\n                            )\r\n                        })\r\n                    }\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {\r\n                    props.loading ?\r\n                        <Table.Row>\r\n                            <Table.Cell colSpan={props.headCells.length} className={`px-0`}>\r\n                                <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n                                    <Skeleton className=\"mb-1\" count={7} height={40} />\r\n                                </SkeletonTheme>\r\n                            </Table.Cell>\r\n                        </Table.Row> : (\r\n                            data.length === 0 ?\r\n                                <Table.Row>\r\n                                    <Table.Cell className={`px-0`} colSpan={props.headCells.length}>\r\n                                        <div className=\"alert alert-info mt-2 w-100\" >\r\n                                            <strong>Info!</strong> No data found.\r\n                                        </div>\r\n                                    </Table.Cell>\r\n                                </Table.Row> :\r\n                                data.map((item, i) => (\r\n                                    <Table.Row key={i}>\r\n                                        {\r\n                                            Object.keys(item).map((cell, k) => {\r\n                                                return (\r\n                                                    <Table.Cell key={k}>\r\n                                                        {\r\n                                                            parse_item(item[cell])\r\n                                                        }\r\n                                                        {\r\n                                                            // console.log('object', item[cell], 'type', typeof (item[cell]))\r\n                                                        }\r\n                                                    </Table.Cell>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Table.Row>\r\n                                ))\r\n                        )\r\n                }\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nexport default CustomTable","export const Ucfirst = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport const shift_timezone_to_pakistan = (date) => {\n    // console.log('DATE raw object', date)\n    const temp = new Date(date);\n    // -300 is the value in gmt +5:00 which is the local timezone for pakistan\n    // 60000 is multiplied to convert hours into seconds\n    //  getTime() returns seconds\n    // if (temp.getTimezoneOffset() !== -300) {\n    //     console.log('date change')\n    return new Date(temp.getTime() - (-300 * 60000));\n    // console.log('date',updated_date)\n    // return updated_date;\n}\n\nexport const get_utc_date = (input_date) => {\n\n    var date = new Date(input_date);\n    var now_utc = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(),\n        date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds());\n\n    return new Date(now_utc);\n}\n\nexport const convert_object_array_to_string = (array, key_to_select) => {\n    return array.map((item) => {\n        return item[key_to_select]\n    }).toString();\n}","import React from 'react'\r\n\r\n\r\n\r\nfunction Button(props) {\r\n    let color = 'bg-teal-400';\r\n    switch(props.color) {\r\n        case 'default':\r\n            color = 'bg-teal-400';\r\n            break;\r\n        case 'red':\r\n            color = 'bg-danger';\r\n            break;\r\n        case 'black':\r\n            color = 'bg-dark';\r\n            break;\r\n        case 'gray':\r\n            color = 'bg-secondary';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <button\r\n            {...props}\r\n            className={`btn ${color} btn-labeled btn-labeled-right pr-5 ${props.fuklWidth? 'btn-block': ''} ${props.className}`}\r\n            style={{ textTransform: \"inherit\" }}\r\n            >\r\n            <b><i className={props.icon}></i></b>\r\n            {\r\n                props.children\r\n            }\r\n        </button>\r\n    )\r\n}\r\nexport default Button;","import React from 'react'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Loading(props) {\r\n    const custom = props.custom\r\n    return (\r\n        props.custom? <Loader type=\"Rings\" color={custom.color} height={props.size} width={props.size} timeout={custom.timeout} />:\r\n        <div className=\"d-flex justify-content-center\">\r\n            <Loader\r\n                type=\"Rings\"\r\n                color=\"#00BFFF\"\r\n                height={props.size}\r\n                width={props.size}\r\n                timeout={120000} //120 secs\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Loading;","import React from 'react'\r\n\r\n\r\n\r\nfunction IconButton(props) {\r\n    let color = 'bg-teal-400 border-teal-400 text-teal-400';\r\n    let btn_type = 'btn-outline';\r\n    let size = \"btn-lg\";\r\n\r\n    switch(props.variant) {\r\n        case 'outlined':\r\n            btn_type = 'btn-outline'\r\n            break;\r\n        case 'filled':\r\n            btn_type = ''\r\n            break;\r\n        default: \r\n            btn_type = 'btn-outline'\r\n            break;\r\n    }\r\n    switch(props.color) {\r\n        case 'red':\r\n            color = btn_type === 'btn-outline'? 'bg-danger border-danger text-danger': 'btn-danger';\r\n            break;\r\n        case 'black':\r\n            color = btn_type === 'btn-outline'? 'bg-dark border-dark text-dark' : 'btn-dark';\r\n            break;\r\n        case 'gray':\r\n            color = btn_type === 'btn-outline'? 'bg-secondary border-secondary text-secondary' : 'btn-secondary';\r\n            break;\r\n        default:\r\n            color = btn_type === 'btn-outline'? 'bg-teal-400 border-teal-400 text-teal-400' : 'bg-teal-400 text-white';\r\n            break;\r\n    }\r\n    switch(props.size) {\r\n        case 'md':\r\n            size = 'btn-md'\r\n            break;\r\n        case 'sm':\r\n            size = 'btn-sm'\r\n            break;\r\n        case 'lg':\r\n            size = 'btn-lg';\r\n            break;\r\n        default: \r\n            size = 'btn-sm'\r\n            break;\r\n    }\r\n\r\n    const className = `btn ${btn_type} ${size} ${color} btn-icon ${props.className}`\r\n\r\n    // console.log('className', className)\r\n    return (\r\n        <button {...props} className={className}>\r\n            <i className={props.icon}></i>\r\n        </button>\r\n    )\r\n}\r\nexport default IconButton;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { set_active_page } from '../../../redux/actions';\nimport { BASE_URL } from '../../../router/constants';\nimport { ADMIN_CREATE_DOCTOR, ADMIN_DELETE_DOCTOR, ADMIN_UPDATE_DOCTOR, USERS_BASE_URL } from '../../../services/rest_end_points';\nimport CustomTable from '../../../shared/customs/CustomTable';\nimport Axios from 'axios';\nimport { Ucfirst } from '../../../utils/functions';\nimport Button from '../../../components/button';\nimport Modal from 'react-bootstrap4-modal';\nimport Inputfield from '../../../components/inputfield';\nimport { BLOOD_GROUPS_OPTIONS, CITIES, COUTRIES, GENDER_OPTIONS } from '../../../utils/constant_data';\nimport Loading from '../../../components/loading';\nimport IconButton from '../../../components/icon-button';\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport notify from 'notify'\n\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'phone_number', numeric: false, disablePadding: false, label: 'Phone#' },\n    { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\n    { id: 'consultancy_fee', numeric: true, disablePadding: false, label: 'Consultancy' },\n    { id: 'consultancy_percentage', numeric: false, disablePadding: false, label: 'Percentage' },\n    { id: 'gender', numeric: false, disablePadding: false, label: 'Gender' },\n    { id: 'active', numeric: false, disablePadding: false, label: 'Active' },\n    { id: 'actions', numeric: false, disablePadding: false, label: 'Actions' },\n];\n\nclass SearchDoctors extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            loading: true,\n            addNewDoctorModalLoading: false,\n\n            rows: [],\n            addNewModalVisibility: false,\n            addNewSpecialityModalVisibility: false,\n            addNewDegreeModalVisibility: false,\n            addNewScheduleModalVisibility: false,\n\n            user_first_name: { value: '', error: false },\n            user_last_name: { value: '', error: false },\n            user_phone_number: { value: '', error: false },\n            user_dob: { value: '', error: false },\n            user_cnic: { value: '', error: false },\n            user_email: { value: '', error: false },\n\n            user_country: { value: 'Pakistan', error: false },\n            user_city: { value: 'Lahore', error: false },\n            user_address: { value: '', error: false },\n\n            user_gender: { value: 'Male', error: false },\n            user_blood_group: { value: 'Unknown', error: false },\n            user_role: { value: 'Doctor', error: false },\n\n            user_consultancy_fee: { value: '1500', error: false },\n            user_consultancy_percentage: { value: '70', error: false },\n            user_is_active: { value: true, error: false },\n\n            speciality_description: { value: '', error: false },\n            degree_description: { value: '', error: false },\n\n            user_specialities: [],\n\n            user_degrees: [],\n            user_schedule: [],\n\n            mode: 'create',\n            toUpdateDoctorId: '',\n\n            counts: {\n                total: 0,\n                active: 0,\n                deactive: 0,\n            }\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                            Search\n                        </Link>, <span className=\"breadcrumb-item active\">Doctors</span>]\n        this.props.set_active_page(routes)\n        this.load_doctors()\n    }\n\n\n    on_edit_doctor = (doctor) => {\n        this.setState({\n            mode: 'update',\n            toUpdateDoctorId: doctor.doctor._id,\n            addNewModalVisibility: true,\n\n            user_first_name: { value: doctor.doctor.first_name, error: false },\n            user_last_name: { value: doctor.doctor.last_name, error: false },\n            user_phone_number: { value: doctor.doctor.phone_number, error: false },\n            user_dob: { value: doctor.doctor.date_of_birth, error: false },\n            user_cnic: { value: doctor.doctor.cnic, error: false },\n            user_email: { value: doctor.doctor.email, error: false },\n\n            user_country: { value: doctor.doctor.country, error: false },\n            user_city: { value: doctor.doctor.city, error: false },\n            user_address: { value: doctor.doctor.address, error: false },\n\n            user_gender: { value: doctor.doctor.gender, error: false },\n            user_blood_group: { value: doctor.doctor.blood_group, error: false },\n            user_role: { value: 'Doctor', error: false },\n\n            user_consultancy_fee: { value: doctor.details.consultancy_fee, error: false },\n            user_consultancy_percentage: { value: doctor.details.consultancy_percentage, error: false },\n            user_is_active: { value: doctor.doctor.is_active, error: false },\n\n            user_specialities: doctor.details.specialities,\n\n            user_degrees: doctor.details.degrees,\n            user_schedule: doctor.details.schedule,\n\n        }, () => console.log('state', this.state));\n    }\n\n    on_delete_doctor = (id) => {\n        confirmAlert({\n            title: \"Deactivate doctor\",\n            message: 'Are you sure you want to deactivate this doctor?',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => {\n                        Axios\n                            .delete(`${ADMIN_DELETE_DOCTOR}?tag=${id}`)\n                            .then(() => {\n                                // this.setState({ loading: true }, () => {\n                                    this.reset_state()\n                                    this.load_doctors()\n                                // })\n                                notify('success', '', 'Successfully deleted doctor');\n                            })\n                            .catch(err => {\n                                console.log('error', err);\n                                notify('error', '', err.toString())\n                            })\n                    }\n                },\n                {\n                    label: 'No',\n                    onClick: () => console.log('no selected')//notify('info', '', 'Doctor not deleted')\n                }\n            ]\n        })\n        \n    }\n\n    load_doctors = () => {\n        const query = `${USERS_BASE_URL}?role=Doctor&active=all`\n        Axios.get(query).then(_doctors => {\n            if (_doctors.data) {\n                _doctors = _doctors.data.payload;\n                console.log('doctors', _doctors);\n                const counts = {\n                    total: 0,\n                    active: 0,\n                    deactive: 0,\n                }\n                const temp = []\n                for (let i = 0; i < _doctors.length; ++i) {\n                    temp.push({\n                        name: `Dr. ${Ucfirst(_doctors[i].doctor.first_name)} ${Ucfirst(_doctors[i].doctor.last_name)}`,\n                        phone_number: _doctors[i].doctor.phone_number,\n                        email: _doctors[i].doctor.email,\n                        consultancy_fee: _doctors[i].details.consultancy_fee,\n                        consultancy_percentage: `${_doctors[i].details.consultancy_percentage}% cut`,\n                        gender: _doctors[i].doctor.gender === 'Male' ? <span className={`badge badge-primary`}>Male</span> : <span className={`badge bg-pink-400`}>Female</span>,\n                        active: _doctors[i].doctor.is_active,\n                        actions: <div className={`d-flex`}>\n                            <IconButton \n                                icon=\"icon-pencil\" className={`mx-1`} \n                                onClick={() => this.on_edit_doctor(_doctors[i])}/>\n                            {\n                                _doctors[i].doctor.is_active ? <IconButton\n                                    color=\"red\"\n                                    icon=\"icon-cross\"\n                                    onClick={() => this.on_delete_doctor(_doctors[i].doctor._id)} /> : ''\n                            }\n                        </div>\n                    })\n                    counts.total += 1;\n                    if (_doctors[i].doctor.is_active) {\n                        counts.active += 1;\n                    }\n                    else {\n                        counts.deactive += 1;\n                    }\n                    if (i === _doctors.length - 1) {\n                        this.setState({ rows: temp, loading: false, counts: counts });\n                    }\n                }\n                if (_doctors.length === 0) {\n                    this.setState({ rows: temp, loading: false });\n                }\n            }\n            this.setState({ loading: false })\n        })\n        .catch(err => {\n            notify('error', '', err.toString());\n            this.setState({ loading: false })\n        })\n    }\n\n    on_text_field_change = (e) => {\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } })\n    }\n\n    on_selected_changed = (e, actor) => {\n        this.setState({ [actor]: { value: e !== null ? e.label : '', error: false } })\n    }\n    on_user_date_of_birth_change = (e) => {\n        if (e === '')\n            this.setState({ user_dob: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ user_dob: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    on_checkbox_change = (e) => {\n        this.setState({ [e.target.id]: { value: !e.target.checked, error: false }})\n    }\n\n    delete_item = (index, id) => {\n        const temp = this.state[id];\n        temp.splice(index, 1);\n        this.setState({ [id]: temp })\n    }\n\n    toggle_modal = (identity) => {\n        this.setState({ [identity]: !this.state[identity] })\n    }\n\n    add_item = (item, id) => {\n        const temp = this.state[id];\n        temp.push({ description: item });\n        this.setState({\n            [id]: temp,\n            speciality_description: { value: '', error: false },\n            degree_description: { value: '', error: false },\n            addNewDegreeModalVisibility: false,\n            addNewSpecialityModalVisibility: false,\n        });\n    }\n\n    reset_state = () => {\n        this.setState({\n            addNewModalVisibility: false,\n            addNewSpecialityModalVisibility: false,\n            addNewDegreeModalVisibility: false,\n            addNewScheduleModalVisibility: false,\n\n            user_first_name: { value: '', error: false },\n            user_last_name: { value: '', error: false },\n            user_phone_number: { value: '', error: false },\n            user_dob: { value: '', error: false },\n            user_cnic: { value: '', error: false },\n            user_email: { value: '', error: false },\n\n            user_country: { value: 'Pakistan', error: false },\n            user_city: { value: 'Lahore', error: false },\n            user_address: { value: '', error: false },\n\n            user_gender: { value: 'Male', error: false },\n            user_blood_group: { value: 'Unknown', error: false },\n            user_role: { value: 'Doctor', error: false },\n\n            user_consultancy_fee: { value: '1500', error: false },\n            user_consultancy_percentage: { value: '70', error: false },\n\n            speciality_description: { value: '', error: false },\n            degree_description: { value: '', error: false },\n\n            user_specialities: [],\n\n            user_degrees: [],\n            user_schedule: [],\n\n            mode: 'create',\n            toUpdateDoctorId: ''\n        })\n    }\n\n    on_submit = (e) => {\n        e.preventDefault()\n        console.log('this.state', this.state)\n        const payload = {\n            admin_id: this.props.active_user._id,\n            doctor: {\n                first_name: this.state.user_first_name.value.trim(),\n                last_name: this.state.user_last_name.value.trim(),\n                phone_number: this.state.user_phone_number.value.trim(),\n                date_of_birth: this.state.user_dob.value,\n                cnic: this.state.user_cnic.value.trim(),\n                email: this.state.user_email.value.trim(),\n                country: this.state.user_country.value,\n                city: this.state.user_city.value,\n                address: this.state.user_address.value.trim(),\n                gender: this.state.user_gender.value.trim(),\n                blood_group: this.state.user_blood_group.value.trim(),\n                role: this.state.user_role.value.trim(),\n            },\n            doctor_details: {\n                consultancy_fee: this.state.user_consultancy_fee.value,\n                consultancy_percentage: this.state.user_consultancy_percentage.value,\n                specialities: this.state.user_specialities,\n                degrees: this.state.user_degrees,\n                schedule: this.state.user_schedule,\n            }\n        }\n        if (this.state.mode === 'create') {\n            this.setState({ addNewDoctorModalLoading: true });\n            Axios\n                .post(ADMIN_CREATE_DOCTOR, payload)\n                .then(res => {\n                    console.log('res', res)\n                    this.setState({ loading: true, addNewModalVisibility: false, addNewDoctorModalLoading: false }, () => this.load_doctors())\n                })\n                .catch(err => {\n                    console.log('res', err)\n                    if (err.response){\n                        notify('error', '', err.response.data.message);\n                    }\n                    else {\n                        notify('error', '', err.toString());\n                    }\n                    \n                    this.setState({ addNewDoctorModalLoading: false })\n                })\n        }\n        else {\n            payload.doctor_id = this.state.toUpdateDoctorId;\n            payload.doctor.is_active = this.state.user_is_active.value;\n            Axios\n                .put(ADMIN_UPDATE_DOCTOR, payload)\n                .then(res => {\n                    console.log('response', res)\n                    notify('success','', 'Doctor successfully updated');\n                    this.setState({ addNewModalVisibility: false, addNewDoctorModalLoading: false }, () => {\n                        this.reset_state()\n                        this.load_doctors()    \n                    })\n                })\n                .catch(err => {\n                    console.log('err', err)\n                    notify('error','', 'There was an error updating doctor');\n                    this.setState({ addNewModalVisibility: false, addNewDoctorModalLoading: false })\n                })\n\n        }\n    }\n\n    delete_doctor = (id) => {\n        console.log('delete doctor id', id);\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <div className={`mb-2 d-flex justify-content-between`}>\n                    <div className={`d-flex justify-content-between w-100`}>\n                        \n                        <div className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-info mr-2 px-3\" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-info\">\n                                                {this.state.counts.total}\n                                            </h1>\n                                    }\n                                    <h5 className={`text-dark`}>Total</h5>\n                                </div>\n                                <i className=\"fa fa-stethoscope fa-5x text-info\"></i>\n                            </div>\n                        </div>\n                        <div className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-success mr-2 px-3\" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-success\">\n                                                {this.state.counts.active}\n                                            </h1>\n                                    }\n                                    <h5 className={`text-dark`}>Active</h5>\n                                </div>\n                                <i className=\"fa fa-check fa-5x text-success\"></i>\n                            </div>\n                        </div>\n                        <div className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-danger mr-2 px-3\" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-danger\">\n                                                {this.state.counts.deactive}\n                                            </h1>\n                                    }\n                                    <h5 className={`text-dark`}>Deactive</h5>\n                                </div>\n                                <i className=\"fa fa-times fa-5x text-danger\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`d-flex align-items-end mb-3`}>\n                        <Button icon=\"icon-plus3\" onClick={() => this.setState({ addNewModalVisibility: true })}>\n                            Add a new doctor\n                        </Button>\n                    </div>\n                </div>\n                {\n                    this.state.loading ? <>\n                        {/* <SkeletonTheme color=\"#000\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-1\" count={1} height={40}/>\n                        </SkeletonTheme> */}\n                        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                            <Skeleton className=\"my-1\" count={8} height={45}/>\n                        </SkeletonTheme>\n                    </>: (\n                        this.state.rows.length === 0 ?\n                            <div className=\"alert alert-info mt-2 w-100\" >\n                                <strong>Info!</strong> Not found.\n                            </div> :\n                            <CustomTable\n                                rows={this.state.rows}\n                                headCells={headCells}\n                                heading={'Doctors'}\n                            />)\n                }\n                <Modal visible={this.state.addNewModalVisibility} dialogClassName=\"modal-lg\" onClickBackdrop={() => this.setState({ addNewModalVisibility: false })}>\n                    <div className={`modal-header bg-teal-400`}>\n                        <h5 className={`mb-0`}>{this.state.mode === 'create'? 'Add a new doctor': 'Update doctor'}</h5>\n                    </div>\n                    <div className={`modal-body`}>\n                        <h5 className={`font-weight-bold`}>Basic Information</h5>\n                        <div className={`row`}>\n                            <div className={`col-md-4 px-3`}>\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_first_name`}\n                                        heading={'First name'}\n                                        placeholder=\"Enter first name\"\n                                        required\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_first_name.value}\n                                        error={this.state.user_first_name.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_last_name`}\n                                        heading={'Last name'}\n                                        placeholder=\"Enter last name\"\n                                        required\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_last_name.value}\n                                        error={this.state.user_last_name.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_phone_number`}\n                                        heading={'Phone number'}\n                                        placeholder=\"Enter phone number\"\n                                        required\n                                        type=\"text\" pattern=\"\\d*\" maxlength=\"11\"\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_phone_number.value}\n                                        error={this.state.user_phone_number.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_dob`}\n                                        heading={'Date of birth'}\n                                        icon_class={'icon-calendar3'}\n                                        placeholder=\"Date of birth\"\n                                        input_type={'text'}\n                                        field_type=\"date-time\"\n                                        date_format={'ll'}\n                                        time_format={false}\n                                        onChange={this.on_user_date_of_birth_change}\n                                        value={this.state.user_dob.value}\n                                        error={this.state.user_dob.error}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_cnic`}\n                                        heading={'CNIC'}\n                                        icon_class={'icon-vcard'}\n                                        input_type={'number'}\n                                        placeholder=\"Enter CNIC\"\n                                        type=\"text\" pattern=\"\\d*\" maxlength=\"13\"\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_cnic.value}\n                                        error={this.state.user_cnic.error} />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 px-3\">\n                                <div className=\"form-group\">\n                                    <Inputfield\n                                        id={`user_email`}\n                                        heading={'Email'}\n                                        icon_class={'icon-envelop'}\n                                        input_type={'email'}\n                                        required\n                                        \n                                        placeholder=\"Enter email\"\n                                        onChange={this.on_text_field_change}\n                                        value={this.state.user_email.value}\n                                        error={this.state.user_email.error}\n                                        disabled={this.state.addNewDoctorModalLoading} />\n                                </div>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className=\"row\">\n                            <div className=\"col-md-8\">\n                                <h5 className={`font-weight-bold`}>Location</h5>\n                                <div className=\"row\">\n                                    <div className=\"col-md-6\">\n                                        <Inputfield\n                                            heading={'Country'}\n                                            field_type=\"select\"\n                                            required\n                                            isClearable\n                                            menuPlacement=\"auto\"\n                                            options={COUTRIES}\n                                            classNamePrefix={`form-control`}\n                                            placeholder=\"Select Country\"\n                                            id=\"user_country\"\n                                            isDisabled\n                                            onChange={e => this.on_selected_changed(e, 'user_country')}\n                                            // value={{ id: 'country_selection', label: this.state.user_country.value }}\n                                            defaultValue={{ id: 'country_selection', label: 'Pakistan' }}\n                                            styles={{\n                                                container: base => ({\n                                                    ...base,\n                                                    backgroundColor: this.state.user_country.error ? '#FF0000' : '',\n                                                    padding: 1,\n                                                    borderRadius: 5\n                                                }),\n                                            }}\n                                        />\n                                    </div>\n                                    <div className=\"col-md-6\">\n                                        <Inputfield\n                                            heading={'City'}\n                                            field_type=\"select\"\n                                            required\n                                            isClearable\n                                            menuPlacement=\"auto\"\n                                            options={CITIES}\n                                            classNamePrefix={`form-control`}\n                                            placeholder=\"Select City\"\n                                            id=\"user_city\"\n                                            isDisabled={this.state.addNewDoctorModalLoading}\n                                            onChange={e => this.on_selected_changed(e, 'user_city')}\n                                            // value={{ id: 'city_selection', label: this.state.user_city.value }}\n                                            defaultValue={{ id: 'city_selection', label: 'Lahore' }}\n                                            styles={{\n                                                container: base => ({\n                                                    ...base,\n                                                    backgroundColor: this.state.user_city.error ? '#FF0000' : '',\n                                                    padding: 1,\n                                                    borderRadius: 5\n                                                }),\n                                            }}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <Inputfield\n                                            heading=\"Address/Area\"\n                                            className=\"form-control form-control-lg\"\n                                            id=\"user_address\"\n                                            value={this.state.user_address.value}\n                                            onChange={e => this.on_text_field_change(e)}\n                                            placeholder=\"Enter address / area you live in the city\"\n                                            disabled={this.state.addNewDoctorModalLoading}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-4 border-left\">\n                                <h5 className={`font-weight-bold`}>Specifications</h5>\n                                <Inputfield\n                                    heading=\"Gender\"\n                                    field_type=\"select\"\n                                    required\n                                    isClearable\n                                    menuPlacement=\"auto\"\n                                    options={GENDER_OPTIONS}\n                                    classNamePrefix={`form-control`}\n                                    placeholder=\"Select Gender\"\n                                    id=\"user_gender\"\n                                    isDisabled={this.state.addNewDoctorModalLoading}\n                                    onChange={e => this.on_selected_changed(e, 'user_gender')}\n                                    // value={{ id: 'gender_selection', label: this.state.user_gender.value }}\n                                    defaultValue={{ id: 'gender_selection', label: 'Male' }}\n                                    styles={{\n                                        container: base => ({\n                                            ...base,\n                                            backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\n                                            padding: 1,\n                                            borderRadius: 5\n                                        }),\n                                    }}\n                                />\n                                <Inputfield\n                                    heading=\"Blood group\"\n                                    field_type=\"select\"\n                                    required\n                                    isClearable\n                                    menuPlacement=\"auto\"\n                                    options={BLOOD_GROUPS_OPTIONS}\n                                    className={`Select-option`}\n                                    classNamePrefix={`form-control`}\n                                    placeholder=\"Select blood group\"\n                                    id=\"user_gender\"\n                                    isDisabled={this.state.addNewDoctorModalLoading}\n                                    onChange={e => this.on_selected_changed(e, 'user_gender')}\n                                    // value={{ id: 'blood_group_selection', label: this.state.user_blood_group.value }}\n                                    defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\n                                    styles={{\n                                        container: base => ({\n                                            ...base,\n                                            backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\n                                            padding: 1,\n                                            borderRadius: 5\n                                        }),\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        <hr />\n                        <h5 className={`font-weight-bold`}>Pricing</h5>\n                        <div className={`row`}>\n                            <div className={`col-md-6`}>\n                                <Inputfield\n                                    id=\"user_consultancy_fee\"\n                                    heading=\"Consultancy fee\"\n                                    placeholder=\"Enter consultancy fee\"\n                                    required\n                                    value={this.state.user_consultancy_fee.value}\n                                    error={this.state.user_consultancy_fee.error}\n                                    onChange={this.on_text_field_change}\n                                    disabled={this.state.addNewDoctorModalLoading}\n                                />\n                            </div>\n                            <div className={`col-md-6`}>\n                                <Inputfield\n                                    id=\"user_consultancy_percentage\"\n                                    heading=\"Consultancy percentage\"\n                                    placeholder=\"Enter consultancy % shared with this doctor\"\n                                    required\n                                    value={this.state.user_consultancy_percentage.value}\n                                    error={this.state.user_consultancy_percentage.error}\n                                    onChange={this.on_text_field_change}\n                                    disabled={this.state.addNewDoctorModalLoading}\n                                />\n\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={`d-flex justify-content-between`}>\n                            <h5 className={`font-weight-bold`}>Specialities's</h5>\n                            <Button icon=\"icon-plus3\" color=\"black\" disabled={this.state.addNewDoctorModalLoading} onClick={() => this.toggle_modal('addNewSpecialityModalVisibility')}>Speciality</Button>\n                        </div>\n                        <div className={`row mt-2`}>\n                            {\n                                this.state.user_specialities.length === 0 ?\n                                    <div className=\"alert alert-info mt-2 mb-0 w-100\">\n                                        <strong>Info!</strong> Not found.\n                                    </div> :\n                                    <div className={`table-responsive table-hover table-bordered`}>\n                                        <table className={`table mb-0`}>\n                                            <thead>\n                                                <tr>\n                                                    <th>Id</th>\n                                                    <th>Description</th>\n                                                    <th className={`text-center`}>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.state.user_specialities.map((item, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td>{i + 1}</td>\n                                                                <td>{item.description}</td>\n                                                                <td className={`text-center`}>\n                                                                    <IconButton color=\"red\" icon=\"icon-cross\" onClick={() => this.delete_item(i, 'user_specialities')}>\n                                                                    </IconButton>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                            }\n                        </div>\n\n                        <hr />\n                        <div className={`d-flex justify-content-between`}>\n                            <h5 className={`font-weight-bold`}>Degree's</h5>\n                            <Button icon=\"icon-plus3\" color=\"black\" disabled={this.state.addNewDoctorModalLoading} onClick={() => this.toggle_modal('addNewDegreeModalVisibility')}>Degree</Button>\n                        </div>\n                        <div className={`row mt-2`}>\n                            {\n                                this.state.user_degrees.length === 0 ?\n                                    <div className=\"alert alert-info mt-2 w-100\" >\n                                        <strong>Info!</strong> Not found.\n                                    </div> :\n                                    <div className={`table-responsive table-hover table-bordered`}>\n                                        <table className={`table mb-0`}>\n                                            <thead>\n                                                <tr>\n                                                    <th>Id</th>\n                                                    <th>Description</th>\n                                                    <th className={`text-center`}>Actions</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {\n                                                    this.state.user_degrees.map((item, i) => {\n                                                        return (\n                                                            <tr>\n                                                                <td>{i + 1}</td>\n                                                                <td>{item.description}</td>\n                                                                <td className={`text-center`}>\n                                                                    <IconButton color=\"red\" icon=\"icon-cross\" onClick={() => this.delete_item(i, 'user_degrees')}>\n                                                                    </IconButton>\n                                                                </td>\n                                                            </tr>\n                                                        )\n                                                    })\n                                                }\n                                            </tbody>\n                                        </table>\n                                    </div>\n                            }\n                        </div>\n                        <hr />\n                        <div className={`d-flex justify-content-between text-muted`}>\n                            <h5 className={`font-weight-bold`}>Schedule</h5>\n                            <span>Coming soon</span>\n                            <Button icon=\"icon-plus3\" color=\"black\" disabled>Add schedule</Button>\n                        </div>\n                        <hr />\n                        <div className={``}>\n                            <h5 className={`font-weight-bold`}>Status</h5>\n                            <div className={`d-flex`}>\n\n                                <div className=\"form-check mr-2\">\n                                    <label className=\"form-check-label\">\n                                        <div className=\"uniform-checker\">\n                                            <span className={this.state.user_is_active.value ? 'checked' : ''}>\n                                                <input type=\"checkbox\"\n                                                    name=\"is_active\"\n                                                    id=\"user_is_active\"\n                                                    // defaultChecked={this.state.user_is_active.value}\n                                                    // value={this.state.user_is_active.value}\n                                                    onChange={() => this.setState({ user_is_active: { value: true, error: false } })}\n                                                    className=\"form-input-styled\" />\n                                            </span>\n                                        </div>\n                                    Is Active\n                                </label>\n                                </div>\n                                <div className=\"form-check mb-0\">\n                                    <label className=\"form-check-label\">\n                                        <div className=\"uniform-checker\">\n                                            <span className={this.state.user_is_active.value ? '' : 'checked'}>\n                                                <input type=\"checkbox\"\n                                                    name=\"is_active\"\n                                                    id=\"user_is_active\"\n                                                    // defaultChecked={!this.state.user_is_active.value}\n                                                    // value={!this.state.user_is_active.value}\n                                                    onChange={() => this.setState({ user_is_active: { value: false, error: false } })}\n                                                    className=\"form-input-styled\" />\n                                            </span>\n                                        </div>\n                                    Is Deactivated\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`modal-footer`}>\n                        <Button icon=\"icon-plus3\" disabled={this.state.addNewDoctorModalLoading} onClick={e => this.on_submit(e)}>{this.state.mode === 'create'? 'Create Doctor': 'Update doctor'}</Button>\n                        <Button icon=\"icon-cross\" color=\"red\" onClick={e => this.reset_state()}>Cancel</Button>\n                    </div>\n                </Modal>\n                {/* \n                * Speciality modal\n                */}\n                <Modal visible={this.state.addNewSpecialityModalVisibility} onClickBackdrop={() => this.toggle_modal('addNewSpecialityModalVisibility')}>\n                    <div className={`modal-header bg-teal-400`}>\n                        <h5 className={`mb-0`}>Add Speciality</h5>\n                    </div>\n                    <div className={`modal-body`}>\n                        <Inputfield\n                            id=\"speciality_description\"\n                            heading=\"Description\"\n                            placeholder=\"Enter description\"\n                            value={this.state.speciality_description.value}\n                            error={this.state.speciality_description.error}\n                            onChange={this.on_text_field_change}\n                        />\n                    </div>\n                    <div className={`modal-footer`}>\n                        <Button icon=\"icon-plus3\" onClick={() => this.add_item(this.state.speciality_description.value, 'user_specialities')}>Add</Button>\n                    </div>\n                </Modal>\n                {/* \n                * Degree modal\n                */}\n                <Modal visible={this.state.addNewDegreeModalVisibility} onClickBackdrop={() => this.toggle_modal('addNewDegreeModalVisibility')}>\n                    <div className={`modal-header bg-teal-400`}>\n                        <h5 className={`mb-0`}>Add Degree</h5>\n                    </div>\n                    <div className={`modal-body`}>\n                        <Inputfield\n                            id=\"degree_description\"\n                            heading=\"Description\"\n                            placeholder=\"Enter description\"\n                            value={this.state.degree_description.value}\n                            error={this.state.degree_description.error}\n                            onChange={this.on_text_field_change}\n                        />\n                    </div>\n                    <div className={`modal-footer`}>\n                        <Button icon=\"icon-plus3\" onClick={() => this.add_item(this.state.degree_description.value, 'user_degrees')}>Add</Button>\n                    </div>\n                </Modal>\n            </Fragment>\n        )\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_page: state.active_page,\n        active_user: state.active_user,\n    }\n}\nexport default connect(map_state_to_props, { set_active_page })(SearchDoctors);","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport NO_PICTURE from '../../resources/images/placeholder.jpg'\nimport { connect } from \"react-redux\";\nimport { LOGIN_URL, BASE_URL } from '../../router/constants';\nimport { set_active_user, set_active_page } from '../../redux/actions'\nimport Inputfield from '../../components/inputfield';\nimport 'styles/animations/animations.css'\nimport moment from 'moment';\nimport { BLOOD_GROUPS_OPTIONS, CITIES, COUTRIES, GENDER_OPTIONS } from '../../utils/constant_data';\nimport Loading from '../../components/loading';\nimport { Ucfirst } from '../../utils/functions';\nimport { UserSearchByToken, UserUpdate } from '../../services/queries';\nimport notify from 'notify'\n\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            first_name: { value: '', error: false },\n            last_name: { value: '', error: false },\n            email: { value: '', error: false },\n            gender: { value: '', error: false },\n            date_of_birth: { value: '', error: false },\n            register_date: { value: '', error: false },\n            blood_group: { value: '', error: false },\n            role: { value: '', error: false },\n            phone_number: { value: '', error: false },\n            cnic: { value: '', error: false },\n            city: { value: '', error: false },\n            country: { value: 'Pakistan', error: false },\n            address: { value: '', error: false },\n\n            loading_status: false,\n            previous_payload: null,\n        };\n    }\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                        Home\n                    </Link>, <span className=\"breadcrumb-item active\">Profile</span>]\n        this.props.set_active_page(routes)\n        if (localStorage.user) {\n            this.setState({ loading_status: true }, () => {\n                UserSearchByToken(localStorage.getItem('user'))\n                    .then(res => {\n                        this.props.set_active_user(res.data['payload'])\n                        this.setState({\n                            first_name: { value: Ucfirst(res.data.payload.first_name), error: false },\n                            last_name: { value: Ucfirst(res.data.payload.last_name), error: false },\n                            email: { value: res.data.payload.email, error: false },\n                            cnic: { value: res.data.payload.cnic, error: false },\n                            phone_number: { value: res.data.payload.phone_number, error: false },\n                            city: { value: res.data.payload.city, error: false },\n                            address: { value: res.data.payload.address, error: false },\n                            date_of_birth: {\n                                value: res.data.payload.date_of_birth === null || res.data.payload.date_of_birth === '' ?\n                                    '' : moment(res.data.payload.date_of_birth).format('ll'), error: false\n                            },\n                            register_date: { value: moment(res.data.payload.register_date).format('lll'), error: false },\n                            blood_group: { value: res.data.payload.blood_group, error: false },\n                            gender: { value: res.data.payload.gender, error: false },\n\n                            loading_status: false\n\n                        })\n                    }).catch(err => {\n                        if (err) {\n                            console.log(err.response)\n                            if (err.response.status >= 500) {\n                                notify('error', '', `No response`)\n                                this.setState({ loading_status: false })\n                            }\n                            else if (err.response.status >= 400 && err.response.status < 500) {\n                                notify('info', '', `${err.response.status}. Please refresh the page.`)\n                                this.setState({ loading_status: false })\n                            }\n                        }\n                    })\n            })\n\n        }\n        else {\n            this.props.history.push(LOGIN_URL)\n        }\n    }\n\n    request_update = (data) => {\n        this.setState({ loading_status: true }, () => {\n            UserUpdate(data)\n                .then(res => {\n                    this.setState({ loading_status: false })\n                    notify('success', '', res.data.message)\n                }).catch(err => {\n                    console.log('request error', err)\n                    this.setState({ loading_status: false })\n                    if (err.response) {\n                        notify('error', '', err.response['message'])\n                    }\n            })\n        })\n\n    }\n\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required && input === '') {\n            return true;\n        }\n        if (only_alpha && !input.match(alphabets)) {\n            return true;\n        }\n        if (only_numbers && !input.match(numbers)) {\n            return true;\n        }\n    }\n\n    on_click_update = () => {\n        let status = false;\n        if (this.check_input(this.state.first_name.value, true, true, false)) {\n            this.setState({ first_name: { value: this.state.first_name.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.last_name.value, true, true, false)) {\n            this.setState({ last_name: { value: this.state.last_name.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.email.value, true, false, false)) {\n            this.setState({ email: { value: this.state.email.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.phone_number.value, true, false, true)) {\n            this.setState({ phone_number: { value: this.state.phone_number.value, error: true } })\n            status = true\n        }\n\n        if (this.check_input(this.state.cnic.value, true, false, true)) {\n            this.setState({ cnic: { value: this.state.cnic.value, error: true } })\n            status = true\n        }\n\n        if (status === true) {\n            notify('error', '', 'Invalid input')\n            return\n        }\n        const payload = {\n            first_name: this.state.first_name.value,\n            last_name: this.state.last_name.value,\n            email: this.state.email.value,\n            gender: this.state.gender.value,\n            date_of_birth: this.state.date_of_birth.value,\n            register_date: this.state.register_date.value,\n            blood_group: this.state.blood_group.value,\n            phone_number: this.state.phone_number.value,\n            cnic: this.state.cnic.value,\n            address: this.state.address.value,\n            city: this.state.city.value,\n        }\n        this.request_update(payload)\n    }\n\n    on_text_changed = (e) => {\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } })\n    }\n\n    on_selected_changed = (e, actor) => {\n        this.setState({ [e === null ? actor : e.id]: { value: e === null ? '' : e.label } })\n    }\n\n    on_user_date_of_birth_change = (e) => {\n        console.log(e)\n        if (e === '')\n            this.setState({ date_of_birth: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_of_birth: { value: configured_date, error: false } })\n            }\n        }\n    }\n    render() {\n        const view = <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className={`col-lg-2 col-sm-0 `}></div>\n                <div className=\"col-lg-8 col-sm-12\">\n                    <div className={`d-flex align-items-center mb-3`}>\n                        <div className=\"card-img-actions d-inline-block \">\n                            <img className=\"img-fluid rounded-circle\" src={NO_PICTURE} style={{ width: 100, height: 100 }} alt=\"\" />\n                            <div className=\"card-img-actions-overlay card-img rounded-circle\">\n                                <Link to={\"#\"} className=\"btn btn-outline bg-white text-white border-white border-2 btn-icon rounded-round\">\n                                    <i className=\"icon-plus3\"></i>\n                                </Link>\n                            </div>\n                        </div>\n                        <div className={`d-flex flex-column ml-2`}>\n                            <span className={`h4 mb-0 font-weight-bold`}>{Ucfirst(this.state.first_name.value)} {Ucfirst(this.state.last_name.value)}</span>\n                            <span className={`mb-0 text-muted`}>{this.state.email.value}</span>\n                        </div>\n                    </div>\n\n                    <div className={`row`}>\n                        <div className={`col-lg-6`}>\n                            <Inputfield\n                                id=\"first_name\"\n                                heading=\"First Name\"\n                                placeholder=\"Enter your first name\"\n                                value={this.state.first_name.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.first_name.error}\n                            />\n                        </div>\n                        <div className={`col-lg-6`}>\n                            <Inputfield\n                                id=\"last_name\"\n                                heading=\"Last Name\"\n                                placeholder=\"Enter your last name\"\n                                type=\"email\"\n                                value={this.state.last_name.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.last_name.error}\n                            />\n\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-6`}>\n                            <Inputfield\n                                id=\"phone_number\"\n                                heading=\"Phone number\"\n                                placeholder=\"Enter phone number\"\n                                value={this.state.phone_number.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.phone_number.error}\n                            />\n\n                        </div>\n                        <div className={`col-lg-6`}>\n\n                            <Inputfield\n                                id=\"cnic\"\n                                heading=\"CNIC\"\n                                placeholder=\"Enter CNIC\"\n                                value={this.state.cnic.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.cnic.error}\n                            />\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-4`}>\n                            <Inputfield\n                                field_type=\"select\"\n                                id=\"blood_group_selection\"\n                                heading=\"Blood Group\"\n                                placeholder={'Select blood group'}\n                                error={this.state.cnic.error}\n                                isClearable\n                                name=\"color\"\n                                options={BLOOD_GROUPS_OPTIONS}\n                                menuPosition=\"auto\"\n                                onChange={e => this.on_selected_changed(e, 'blood_group_selection')}\n                                value={[{ id: 'blood_group_selection', label: this.state.blood_group.value }]}\n                            />\n                        </div>\n                        <div className={`col-lg-4`}>\n\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"Gender\"\n                                isClearable\n                                name=\"color\"\n                                options={GENDER_OPTIONS}\n                                placeholder={'Select gender'}\n                                menuPosition=\"auto\"\n                                id=\"gender_selection\"\n                                onChange={e => this.on_selected_changed(e, 'gender_selection')}\n                                value={[{ id: 'gender_selection', label: this.state.gender.value }]}\n                            />\n                        </div>\n                        <div className={`col-lg-4`}>\n                            <Inputfield\n                                id=\"user_dob\"\n                                onChange={this.on_user_date_of_birth_change}\n                                className=\"clock_datatime_picker form-control\"\n                                placeholder=\"Enter your date of birth\"\n                                heading=\"Date of birth\"\n                                field_type=\"date-time\"\n                                input={true}\n                                dateFormat={'ll'}\n                                timeFormat={false}\n                                closeOnSelect={true}\n                                value={this.state.date_of_birth.value}\n                            />\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-6`}>\n\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"Country\"\n                                isClearable\n                                options={COUTRIES}\n                                placeholder=\"Select country\"\n                                menuPosition=\"auto\"\n                                id=\"country_selection\"\n                                isDisabled\n                                onChange={e => this.on_selected_changed(e, 'country_selection')}\n                                value={[{ id: 'country_selection', label: this.state.country.value }]}\n                            />\n                        </div>\n                        <div className={`col-lg-6`}>\n\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"City\"\n                                isClearable\n                                options={CITIES}\n                                placeholder=\"Select city\"\n                                menuPosition=\"auto\"\n                                id=\"city_selection\"\n                                onChange={e => this.on_selected_changed(e, 'city_selection')}\n                                value={[{ id: 'city_selection', label: this.state.city.value }]}\n                            />\n                        </div>\n                    </div>\n                    <div className={`row`}>\n                        <div className={`col-lg-12`}>\n\n                            <Inputfield\n                                id=\"address\"\n                                heading=\"Address\"\n                                placeholder=\"Address\"\n                                icon_class=\"icon-home\"\n                                field_type=\"text-area\"\n                                value={this.state.address.value}\n                                onChange={this.on_text_changed}\n                                error={this.state.address.error}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"d-flex justify-content-between\">\n                        <span className={`text-muted`}>Registered: {this.state.register_date.value}</span>\n                        <div className={``}>\n                            <button\n                                className={`btn bg-dark btn-labeled btn-labeled-right pr-5 float-right ml-2`}\n                                onClick={() => this.props.history.push(BASE_URL)}>\n                                <b><i className={`icon-cross`}></i></b>\n                                Leave\n                            </button>\n                            <button className={`btn bg-teal-400 btn-labeled btn-labeled-right pr-5 float-right`}\n                                onClick={this.on_click_update}>\n                                <b><i className={`icon-floppy-disk`}></i></b>\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        return (\n            // <Container container_type=\"home\">\n                <div className=\"card border-top-info\">\n                    <div className=\"card-body\">\n                        {this.state.loading_status ? <Loading size={150} /> : view}\n                    </div>\n                </div>\n            // </Container>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        notify: state.notify,\n\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, notify, set_active_page })(withRouter(Profile));","import React, { Component, Fragment } from 'react';\nimport { connect } from \"react-redux\";\nimport { set_active_user, set_active_page } from '../../redux/actions';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/lib/echarts'\nimport { Link } from 'react-router-dom';\nimport { BASE_URL, SEARCH_DOCTORS } from '../../router/constants';\nimport * as rc from '../../services/rest_end_points';\nimport socketIOClient from \"socket.io-client\";\nimport Loading from '../../components/loading';\nimport './home.css';\nimport moment from 'moment';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            doctors: 0,\n            patient_left: 0,\n            patient_attended: 0,\n            total_attended: 0,\n            total_appointments: 0,\n            checkout_percentage: 100,\n\n            loading_status: true,\n\n            patients_per_day: [],\n\n            current_date_time: moment(new Date()).format(\"LLLL\"),\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-home2 mr-2\"></i>\n                            Home\n                        </Link>, <span className=\"breadcrumb-item active\">Dashboard</span>]\n        this.props.set_active_page(routes)\n        this.socket = socketIOClient(rc.ROOT_URL, { path: rc.SOCKET_URL })\n        console.log('socket', this.socket)\n        this.socket.on(\"FromAPI\", data => this.order_data(data));\n        \n        // const token = localStorage.getItem('user')\n        \n        // UsersSearchByToken(token).then(res => {\n        //     // this.props.set_active_user(res.data['payload'])\n            \n        // }).catch(err => {\n        //     console.log(err)\n        // })\n    }\n\n    compare_dates(a, b) {\n        const dateA = new Date(a.date), dateB = new Date(b.date);\n        return dateA - dateB;\n    }\n\n    order_data = (data) => {\n        console.log('socket data', data)\n        const patients_per_day_raw_data = data.patients_per_day;\n        const temp = []\n        if (patients_per_day_raw_data.length > 0) {\n            for (let i = 0; i < patients_per_day_raw_data.length; ++i) {\n                const current_patient = patients_per_day_raw_data[i]\n                temp.push({\n                    date: moment(`${current_patient._id.month}/${current_patient._id.day}/${current_patient._id.year}`).format('LL'),\n                    count: current_patient.count\n                })\n                if (i === patients_per_day_raw_data.length - 1) {\n                    const numenator = data.patient_attended\n                    const denomenator = data.patient_left + data.patient_attended\n\n                    this.setState({\n                        doctors: data.doctors,\n                        patient_left: data.patient_left,\n                        patient_attended: data.patient_attended,\n                        total_attended: data.total_patients_attended,\n                        total_appointments: data.total_patients_appointments_registered,\n                        checkout_percentage: Math.ceil((numenator / (denomenator === 0 ? 1 : denomenator)) * 100),\n                        current_date_time: moment(new Date()).format(\"LLLL\"),\n                        loading_status: false,\n                        patients_per_day: temp.sort(this.compare_dates),\n\n                    })\n                }\n            }\n        }\n        else {\n            const numenator = data.patient_attended\n            const denomenator = data.patient_left + data.patient_attended\n\n            this.setState({\n                doctors: data.doctors,\n                patient_left: data.patient_left,\n                patient_attended: data.patient_attended,\n                total_attended: data.total_patients_attended,\n                total_appointments: data.total_patients_appointments_registered,\n                checkout_percentage: Math.ceil((numenator / (denomenator === 0 ? 1 : denomenator)) * 100),\n                current_date_time: moment(new Date()).format(\"LLLL\"),\n                loading_status: false,\n                patients_per_day: [],\n\n            })\n        }\n\n    }\n\n    componentWillUnmount() {\n        this.socket.disconnect()\n    }\n    render() {\n        // console.log('response', this.state)\n        const option_patients_per_doctor = {\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                }\n            },\n            legend: {\n                data: ['Total', 'Attended']\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            xAxis: {\n                type: 'value',\n                boundaryGap: [0, 0.01]\n            },\n            yAxis: {\n                type: 'category',\n                data: ['Dr. Yasir', 'Dr. Hamad', 'Dr. Shiza', 'Dr. Farukh', 'Dr. Baig']\n            },\n            series: [\n                {\n                    name: 'Total',\n                    type: 'bar',\n                    data: [14, 5, 8, 2, 1]\n                },\n                {\n                    name: 'Attended',\n                    type: 'bar',\n                    data: [6, 3, 4, 2, 0]\n                }\n            ]\n        };\n\n        const option_patients_attended_percentage = {\n            tooltip: {\n                formatter: '{a} <br/>{b} : {c}%'\n            },\n            series: [\n                {\n                    type: 'gauge',\n                    detail: { formatter: '{value}%' },\n                    data: [{ value: this.state.checkout_percentage }]\n                }\n            ]\n        };\n\n        const option_patients_attended_history = {\n            tooltip: {\n                trigger: 'axis',\n                position: function (pt) {\n                    return [pt[0], '10%'];\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: this.state.patients_per_day.map(function (a) { return a.date })\n            },\n            yAxis: {\n                type: 'value',\n                boundaryGap: [0, '100%']\n            },\n            dataZoom: [{\n                type: 'inside',\n                start: 0,\n                end: 100\n            }, {\n                start: 0,\n                end: 10,\n                handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n                handleSize: '80%',\n                handleStyle: {\n                    color: '#fff',\n                    shadowBlur: 3,\n                    shadowColor: 'rgba(0, 0, 0, 0.6)',\n                    shadowOffsetX: 2,\n                    shadowOffsetY: 2\n                }\n            }],\n            series: [\n                {\n                    name: 'Patients',\n                    type: 'line',\n                    symbol: 'none',\n                    itemStyle: {\n                        color: '#00338D'\n                    },\n                    areaStyle: {\n                        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                            offset: 0,\n                            color: '#015BF9'\n                        }, {\n                            offset: 1,\n                            color: '#6198F7'\n                        }])\n                    },\n                    data: this.state.patients_per_day.map(function (a) { return a.count })\n                }\n            ]\n        };\n\n        const option_procedures = {\n            tooltip: {\n                trigger: 'item',\n                formatter: '{a} <br/>{b}: {c} ({d}%)'\n            },\n            legend: {\n                orient: 'horizontal',\n                left: 10,\n                data: ['Attended', 'Waiting']\n            },\n            series: [\n                {\n                    name: 'Patients Attended history',\n                    type: 'pie',\n                    radius: ['50%', '70%'],\n                    avoidLabelOverlap: false,\n                    label: {\n                        normal: {\n                            show: false,\n                            position: 'center'\n                        },\n                        emphasis: {\n                            show: true,\n                            textStyle: {\n                                fontSize: '30',\n                                fontWeight: 'bold'\n                            }\n                        }\n                    },\n                    labelLine: {\n                        normal: {\n                            show: false\n                        }\n                    },\n                    data: [\n                        { value: this.state.total_attended, name: 'Attended' },\n                        { value: this.state.total_appointments - this.state.total_attended, name: 'Waiting' },\n                    ]\n                }\n            ]\n        };\n        return (\n            // <Container container_type={'home'}>\n            <Fragment>\n                <div className=\"row\">\n                    <div className=\"col-lg-4 d-flex align-items-stretch \" >\n                        <div \n                            className=\"card w-100 border-left-3 border-top-0 border-bottom-0 border-right-0 border-info \" >\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#5bc0de' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-info\">\n                                                {this.state.doctors}\n                                            </h1>\n                                    }\n                                    <Link className={`h5 text-dark`} to={SEARCH_DOCTORS}>Doctors</Link>\n                                </div>\n                                <i className=\"fa fa-stethoscope fa-5x text-info\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8\" >\n\n                        <div className=\"card border-left-3 border-top-0 border-bottom-0 border-right-0 border-info \">\n                            <div className={`card-header pb-0`}>\n                                <div className=\"h6 mb-0 d-flex w-100  justify-content-center\">\n                                    <div className={`heading`}>\n                                        <span className={`filter font-weight-bold `}>\n                                            Patients Today\n                                        </span>\n                                    </div>\n                                    {/* <div className={`badge badge-dark d-block`}>\n                                        {this.state.current_date_time}\n                                    </div> */}\n                                </div>\n                            </div>\n                            <div className=\"card-body d-flex justify-content-around align-items-center py-1\">\n                                <div className=\"\">\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#d9534f' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-danger\">\n                                                {this.state.patient_left}\n                                            </h1>\n                                    }\n                                    <h5>Waiting</h5>\n                                </div>\n                                <i className=\"fa fa-heartbeat fa-5x text-danger\" />\n                                <div className=\"border-left mx-3\"></div>\n                                <div >\n                                    {\n                                        this.state.loading_status ?\n                                            <Loading size={55} custom={{ color: '#5cb85c' }} /> :\n                                            <h1 className=\"font-weight-bold text-center values-text mb-0 text-success\">\n                                                {this.state.patient_attended}\n                                            </h1>\n                                    }\n                                    <h5>Checked out</h5>\n                                </div>\n                                <i className=\"fa fa-heartbeat fa-5x text-success\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-lg-8\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients per doctor</h5>\n\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_patients_per_doctor}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-4\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attended</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_patients_attended_percentage}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={`row`}>\n                    <div className=\"col-lg-4\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attended history</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts option={option_procedures}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-lg-8\" >\n                        <div className=\"card\">\n                            <div className=\"card-header header-elements-inline\">\n                                <h5 className=\"card-title\" style={{ fontSize: '20px' }}>Patients Attendence History</h5>\n                            </div>\n\n                            <div className=\"card-body\">\n                                <div className=\"chart-container\">\n                                    <ReactEcharts\n                                        option={option_patients_attended_history}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n            // </Container >\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        active_page: state.active_page,\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, set_active_page })(Home);\n\n\n\n\n\n\n\n\n// var base = +new Date(2020, 1, 1);\n// var oneDay = 24 * 3600 * 1000;\n// var date = [];\n\n// var data = [10];\n\n// for (var i = 1; i < 60; i++) {\n//     var now = new Date(base += oneDay);\n//     date.push([now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/'));\n//     data.push(Math.round(Math.random() * 20) + 10);\n// }\n\n// var option_patients_attended_history = {\n//     tooltip: {\n//         trigger: 'axis',\n//         position: function (pt) {\n//             return [pt[0], '10%'];\n//         }\n//     },\n//     xAxis: {\n//         type: 'category',\n//         boundaryGap: false,\n//         data: date\n//     },\n//     yAxis: {\n//         type: 'value',\n//         boundaryGap: [0, '100%']\n//     },\n//     dataZoom: [{\n//         type: 'inside',\n//         start: 0,\n//         end: 10\n//     }, {\n//         start: 0,\n//         end: 10,\n//         handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',\n//         handleSize: '80%',\n//         handleStyle: {\n//             color: '#fff',\n//             shadowBlur: 3,\n//             shadowColor: 'rgba(0, 0, 0, 0.6)',\n//             shadowOffsetX: 2,\n//             shadowOffsetY: 2\n//         }\n//     }],\n//     series: [\n//         {\n//             name: 'Patients',\n//             type: 'line',\n//             symbol: 'none',\n//             itemStyle: {\n//                 color: '#00338D'\n//             },\n//             areaStyle: {\n//                 color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n//                     offset: 0,\n//                     color: '#015BF9'\n//                 }, {\n//                     offset: 1,\n//                     color: '#6198F7'\n//                 }])\n//             },\n//             data: data\n//         }\n//     ]\n//};\n\n\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport CustomTable from '../../../shared/customs/CustomTable';\r\nimport Button from '../../../components/button';\r\nimport IconButton from '../../../components/icon-button';\r\nimport moment from 'moment';\r\nimport { load_todays_appointments, set_active_page } from '../../../redux/actions';\r\nimport { Ucfirst } from '../../../utils/functions';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport Inputfield from '../../../components/inputfield';\r\n// import UserPreviewModal from '../../../shared/modals/userpreviewmodal';\r\nimport { Collapse } from 'reactstrap';\r\nimport { AppointmentsSearchToday, CreateNewPaymentLog, GetUserById, ProcedureSearch } from '../../../services/queries';\r\nimport notify from 'notify'\r\nimport { BASE_URL } from 'router/constants';\r\n\r\nconst headCells = [\r\n    { id: 'doctor_name', numeric: false, disablePadding: false, label: 'Doctor (Appointments)' },\r\n    { id: 'consultancy_fee', numeric: true, disablePadding: false, label: 'C-Fee' },\r\n    { id: 'c_doctor_share', numeric: true, disablePadding: false, label: 'Dr. Share' },\r\n    { id: 'c_hospital_share', numeric: true, disablePadding: false, label: 'H. Share' },\r\n    { id: 'procedures_fee', numeric: true, disablePadding: false, label: 'P-Fee' },\r\n    { id: 'p_doctor_share', numeric: true, disablePadding: false, label: 'Dr. Share' },\r\n    { id: 'p_hospital_share', numeric: true, disablePadding: false, label: 'H. Share' },\r\n    { id: 'balance', numeric: true, disablePadding: false, label: 'Bal' },\r\n    { id: 'actions', numeric: true, disablePadding: false, label: 'Actions' },\r\n];\r\n\r\nclass Payments extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            modalLoading: false,\r\n            data: [],\r\n            rawData: [],\r\n            featuredData: {},\r\n            searchDate: moment(new Date()).format('ll'),\r\n            queryInterval: null,\r\n            checkoutModalVisibility: false,\r\n            userPreviewModalVisibility: false,\r\n            showAppointments: false,\r\n            currentCheckout: {\r\n                id: '',\r\n                doctor_name: '',\r\n                appointment_count: 0,\r\n                total_consultancy_fee: 0,\r\n                total_procedures_fee: 0,\r\n                total_amount: 0,\r\n                consultancy_share: 0,\r\n                procedures_share: 0,\r\n                balance: 0,\r\n                appointments: [],\r\n                procedures: [],\r\n            },\r\n            paid_text_input: { value: '', error: false },\r\n            mode: 'checkout',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\r\n            <i className=\"icon-home2 mr-2\"></i>\r\n                            Pricing\r\n                        </Link>, <span className=\"breadcrumb-item active\">Payments</span>]\r\n        this.props.set_active_page(routes)\r\n        this.loadData(this.state.searchDate);\r\n    }\r\n\r\n    onCheckoutToggle = (doctor_id, type) => {\r\n\r\n        // console.log('data', doctor_id, this.state.data)\r\n        // console.log('featured', this.state.featuredData);\r\n        // console.log('raw', this.state.rawData)\r\n\r\n        this.setState({ checkoutModalVisibility: true }, () => {\r\n            const selected_doctor_appointments = this.state.rawData.filter(doc => doc.doctor.id === doctor_id);\r\n            // console.log('selected doctor', this.state.featuredData[doctor_id])\r\n            const payload = {\r\n                id: doctor_id,\r\n                doctor_name: this.state.featuredData[doctor_id].doctor_name,\r\n                appointment_count: parseInt(this.state.featuredData[doctor_id].doctor_name.substring(this.state.featuredData[doctor_id].doctor_name.indexOf(\"(\") + 1, this.state.featuredData[doctor_id].doctor_name.length - 1)),\r\n                total_consultancy_fee: this.state.featuredData[doctor_id].consultancy_fee,\r\n                total_procedures_fee: this.state.featuredData[doctor_id].procedures_fee,\r\n                total_amount: this.state.featuredData[doctor_id].consultancy_fee + this.state.featuredData[doctor_id].procedures_fee,\r\n                consultancy_share: this.state.featuredData[doctor_id].c_doctor_share,\r\n                procedures_share: this.state.featuredData[doctor_id].p_doctor_share,\r\n                balance: this.state.featuredData[doctor_id].balance,\r\n                appointments: selected_doctor_appointments,\r\n                procedures: []\r\n            }\r\n            this.setState({ currentCheckout: payload, mode: type });\r\n            // console.log('payload', payload);\r\n        })\r\n\r\n    }\r\n\r\n    query = (date) => {\r\n        const that = this;\r\n        AppointmentsSearchToday(date, 'checkout')\r\n            .then(async res => {\r\n                // console.log('search', res.data)\r\n                if (res.data.payload && res.data.payload.length > 0) {\r\n                    const records = {};\r\n                    const data = res.data.payload;\r\n                    let counter = 0;\r\n\r\n                    // console.log('data length', data.length)\r\n                    while (true)  {\r\n                        const element = data[counter];\r\n                                \r\n                        await ProcedureSearch(element._id, element.doctor.id, new Date())\r\n                            .then(async _procedures => {\r\n\r\n                                /**\r\n                                 * consultancy fee + follow up - discount = charges\r\n                                 */\r\n                                const total = Number(element.appointment_charges.consultancy) + Number(element.appointment_charges.follow_up) - Number(element.appointment_charges.discount);\r\n                                /**\r\n                                 * doctor_share = (charges / 100) * percentage\r\n                                 */\r\n                                const total_c_doctor_share = (total / 100) * Number(element.doctor.consultancy_percentage)\r\n\r\n                                const total_procedures_fee = _procedures.data.payload.reduce((a, b) => a + (b['fee'] || 0), 0) - _procedures.data.payload.reduce((a, b) => a + (b['discount'] || 0), 0);\r\n                                const total_p_dr_share = _procedures.data.payload.reduce((a, b) => a + (b['dr_share'] || 0), 0);\r\n\r\n                                // console.log('check', element.doctor.id, records[element.doctor.id])\r\n                                if (records[element.doctor.id]) {\r\n                                    const name = records[element.doctor.id].doctor_name;\r\n                                    let a_count = parseInt(name.substring(name.indexOf(\"(\") + 1, name.length - 1));\r\n                                    ++a_count;\r\n                                    /**\r\n                                     * hopital share = total - doctor shares\r\n                                     */\r\n                                    records[element.doctor.id].doctor_name = `${name.substring(0, name.indexOf(\"(\") - 1)} (${a_count})`;\r\n                                    records[element.doctor.id].consultancy_fee += total;\r\n                                    records[element.doctor.id].c_doctor_share += total_c_doctor_share;\r\n                                    records[element.doctor.id].c_hospital_share += total - total_c_doctor_share;\r\n                                    records[element.doctor.id].procedures_fee += total_procedures_fee;\r\n                                    records[element.doctor.id].p_doctor_share += (total_procedures_fee * total_p_dr_share) / 100.00;\r\n                                    records[element.doctor.id].p_hospital_share += total_procedures_fee - ((total_procedures_fee * total_p_dr_share) / 100.00);\r\n                                } else {\r\n                                    await GetUserById(element.doctor.id)\r\n                                        .then(async _doctor => {\r\n                                            // console.log('appointments', element);\r\n                                            \r\n                                            records[element.doctor.id] = {\r\n                                                doctor_name: `Dr. ${Ucfirst(element.doctor.first_name)} ${Ucfirst(element.doctor.last_name)} (${1})`,\r\n                                                // appointment_count: 1,\r\n                                                consultancy_fee: total,\r\n                                                c_doctor_share: total_c_doctor_share,\r\n                                                c_hospital_share: total - total_c_doctor_share,\r\n                                                procedures_fee: total_procedures_fee,\r\n                                                p_doctor_share: (total_procedures_fee * total_p_dr_share) / 100.00,\r\n                                                p_hospital_share: total_procedures_fee - ((total_procedures_fee * total_p_dr_share) / 100.00),\r\n                                                balance: _doctor.data.payload.details.payments_balance,\r\n                                                actions: element.is_paid_to_doctor ?\r\n                                                    <IconButton\r\n                                                        className={`btn-sm`}\r\n                                                        color=\"black\"\r\n                                                        onClick={() => that.onCheckoutToggle(element.doctor.id, 'view')}\r\n                                                        icon=\"icon-eye\" /> :\r\n                                                    <IconButton\r\n                                                        className={`btn-sm`}\r\n                                                        onClick={() => that.onCheckoutToggle(element.doctor.id, 'checkout')}\r\n                                                        icon=\"icon-exit3\" />,\r\n                                            };\r\n                                        })\r\n                                }\r\n                            })\r\n                            counter++;\r\n\r\n                        if (counter === data.length) {\r\n                            this.setState({\r\n                                featuredData: records,\r\n                                data: Object.keys(records).map(item => { return records[item] }),\r\n                                rawData: res.data.payload,\r\n                                loading: false\r\n                            });\r\n                            break;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    this.setState({ featuredData: {}, data: [], rawData: [], loading: false })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error', err);\r\n            })\r\n    }\r\n\r\n    loadData = (date) => {\r\n        const app_date = new Date(date);\r\n        this.query(app_date);\r\n        const interval = setInterval(() => this.query(app_date), 15000)\r\n        this.setState({ queryInterval: interval })\r\n    }\r\n\r\n    showDoctor = (id) => {\r\n        // this.setState({\r\n        //     userPreviewModalVisibility: true\r\n        // }, () => {\r\n        //     Axios.post(USERS_SEARCH_BY_ID, { user_id: id }).then(res => {\r\n        //         this.setState({ user_modal_props: res.data.payload.user })\r\n        //     }).catch(err => {\r\n        //         console.log('failed to fetch user', err)\r\n        //     })\r\n        // })\r\n    }\r\n\r\n    onConfirmCheckout = () => {\r\n        this.setState({ modalLoading: true }, () => {\r\n            //this step is to delete the appointments from currentCheckout payload\r\n            const details = {\r\n                ...this.state.currentCheckout,\r\n                appointments: undefined\r\n            }\r\n            CreateNewPaymentLog({\r\n                doctor_id: this.state.currentCheckout.id,\r\n                branch_id: \"5e86609dc45b265690b8a25d\",\r\n                details: details,\r\n                paid_amount: Number(this.state.paid_text_input.value),\r\n                balance: (this.state.currentCheckout.consultancy_share + \r\n                            this.state.currentCheckout.procedures_share + \r\n                            this.state.currentCheckout.balance) - \r\n                            Number(this.state.paid_text_input.value),\r\n                appointments_ids: this.state.currentCheckout.appointments.map(item => { return item._id }),\r\n            }).then(res => {\r\n                this.setState({ \r\n                    modalLoading: false, \r\n                    checkoutModalVisibility: false, \r\n                    paid_text_input: { value: \"\", error: false } }, () => {\r\n                    notify('success', '', res.data.message);\r\n                })\r\n            }).catch(err => {\r\n                this.setState({ modalLoading: false }, () => {\r\n                    notify('error', '', err.toString());\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.queryInterval);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <CustomTable\r\n                    rows={this.state.data}\r\n                    headCells={headCells}\r\n                    loading={this.state.loading}\r\n                    heading={'Doctors'}\r\n                />\r\n                <Modal\r\n                    visible={this.state.checkoutModalVisibility}\r\n                    dialogClassName=\"modal-lg\"\r\n                    onClickBackdrop={() => this.setState({ checkoutModalVisibility: false })}>\r\n                    <div className={`modal-header bg-teal-400`}>\r\n                        <h5>Checkout <span className=\"h3 mb-0\">\r\n                            {this.state.currentCheckout.doctor_name}\r\n                            <Link to={\"#\"}\r\n                                onClick={() => this.showDoctor(this.state.currentCheckout.doctor_id)}>\r\n                                <i className={`ml-2 mb-1 icon-new-tab text-white`} />\r\n                            </Link>\r\n                        </span>\r\n                        </h5>\r\n                    </div>\r\n                    <div className={`modal-body`}>\r\n                        <div className={`row`}>\r\n                            <div className={`col-md-12`}>\r\n                                <div className={`table-responsive`}>\r\n\r\n                                    <table className={`table table-sm table-hover table-bordered mb-0`}>\r\n                                        <thead></thead>\r\n                                        <tbody>\r\n                                            {/* <tr>\r\n                                                <td>Share of {this.state.currentCheckout.doctor_name} (current)</td>\r\n                                                <td>{this.state.currentCheckout.curre}%</td>\r\n                                            </tr> */}\r\n                                            <tr>\r\n                                                <td>Appointments count</td>\r\n                                                <td>{this.state.currentCheckout.appointment_count}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Total Consultancy Fee</td>\r\n                                                <td>Rs. {this.state.currentCheckout.total_consultancy_fee}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Consultancy Dr. share</td>\r\n                                                <td>Rs. {this.state.currentCheckout.consultancy_share}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Total Procedures Fee</td>\r\n                                                <td>Rs. {this.state.currentCheckout.total_procedures_fee}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Procedures Dr. share</td>\r\n                                                <td>Rs. {this.state.currentCheckout.procedures_share}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Balance</td>\r\n                                                <td>Rs. {this.state.currentCheckout.balance}/-</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className={`font-weight-bold h5`}>To be paid</td>\r\n                                                <td>Rs. {this.state.currentCheckout.consultancy_share + this.state.currentCheckout.procedures_share}/- <span className={`text-muted`}>(out of {this.state.currentCheckout.total_amount})</span></td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={`row mt-2 ${this.state.mode === 'view' ? 'd-none':''}`}>\r\n                            <div className={`col-md-${this.state.mode === 'view' ? 12:6}`}>\r\n                                <pre className={`w-100 text-center mb-0`}>\r\n                                    <h4 className={`mb-0`}>Total: Rs. {this.state.mode === \"view\" ? \r\n                                                    this.state.currentCheckout.paid_amount : \r\n                                                    (this.state.currentCheckout.consultancy_share + \r\n                                                        this.state.currentCheckout.procedures_share + \r\n                                                        this.state.currentCheckout.balance)}/-</h4>\r\n                                </pre>                                \r\n                            </div>\r\n                            <div className={`col-md-${this.state.mode === 'view' ? 0:3} d-flex align-items-end`}>\r\n                                {\r\n                                    this.state.mode === 'view' ? '' : <Inputfield\r\n                                        id=\"paid_text_input\"\r\n                                        heading=\"Paid amount\"\r\n                                        placeholder=\"Enter the paid amount\"\r\n                                        parent_classes=\"mb-0 mb-auto w-100\"\r\n                                        className=\"w-100\"\r\n                                        value={this.state.paid_text_input.value}\r\n                                        // error={this.state.paid_text_input.error}\r\n                                        onChange={e => this.setState({ paid_text_input: { value: e.target.value, error: false } })}\r\n                                    />\r\n                                }\r\n                                \r\n                            </div>\r\n                            <div className={`col-md-${this.state.mode === 'view' ? 0:3} d-flex align-items-end`}>\r\n                                {\r\n                                    this.state.mode === 'view' ? '' :\r\n                                        <Button\r\n                                            className={`btn-block py-2`}\r\n                                            icon=\"icon-exit3\"\r\n                                            disabled={this.state.modalLoading}\r\n                                            onClick={() => this.onConfirmCheckout()}>\r\n                                            Checkout\r\n                                        </Button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className={`btn btn-block text-left`} onClick={() => this.setState({ showAppointments: !this.state.showAppointments })}>\r\n                            <i className={`${this.state.showAppointments ? 'icon-subtract' : 'icon-add'}`} /> View Appointments ({moment(new Date(), \"YYYY-MM-DDThh:mm:ss\").format('ll')})\r\n                        </div>\r\n                        {/* <Link to className={`text-dark`} onClick={() => this.setState({ showAppointments: !this.state.showAppointments })}>\r\n                            <i className={`${this.state.showAppointments? 'icon-subtract':'icon-add'}`} /> Appointments\r\n                        </Link> */}\r\n                        <Collapse isOpen={this.state.showAppointments}>\r\n                            <div className={`table-responsive`}>\r\n                                <table className={`table table-hover table-bordered table-sm mb-0`}>\r\n                                    <thead className={`bg-dark`}>\r\n                                        <tr>\r\n                                            <th>Appointment Time</th>\r\n                                            <th>Consultancy</th>\r\n                                            <th>Follow up</th>\r\n                                            <th>Discount</th>\r\n                                            <th>Total</th>\r\n                                            <th>Consultancy Share</th>\r\n                                            <th>Payment Time</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            this.state.currentCheckout.appointments.map((item, i) => {\r\n                                                return (\r\n                                                    <tr key={i}>\r\n                                                        <td>{moment(item.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LT')}</td>\r\n                                                        <td>Rs. {item.appointment_charges.consultancy}/-</td>\r\n                                                        <td>Rs. {item.appointment_charges.follow_up}/-</td>\r\n                                                        <td>Rs. {item.appointment_charges.discount}/-</td>\r\n                                                        <td>Rs. {(\r\n                                                            Number(item.appointment_charges.consultancy) +\r\n                                                            Number(item.appointment_charges.follow_up) -\r\n                                                            Number(item.appointment_charges.discount))}/-</td>\r\n                                                        <td>Rs. {\r\n                                                            ((\r\n                                                                Number(item.appointment_charges.consultancy) +\r\n                                                                Number(item.appointment_charges.follow_up) -\r\n                                                                Number(item.appointment_charges.discount)) / 100) * item.doctor.consultancy_percentage\r\n                                                        }/- ({item.doctor.consultancy_percentage}%)</td>\r\n                                                        <td>{moment(new Date(item.appointment_charges.time), \"YYYY-MM-DDThh:mm:ss\").format('LT')}</td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </Collapse>\r\n                    </div>\r\n                </Modal>\r\n                {/* <UserPreviewModal\r\n                    visibility={this.state.userPreviewModalVisibility}\r\n                    modal_props={this.state.user_modal_props}\r\n                    on_click_back_drop={() => this.setState({ userPreviewModalVisibility: false, user_modal_props: null })}\r\n                    on_click_cancel={() => this.setState({ userPreviewModalVisibility: false, user_modal_props: null })} /> */}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        todays_patient: state.todays_patient\r\n    }\r\n}\r\nexport default connect(map_state_to_props, { load_todays_appointments, notify, set_active_page })(withRouter(Payments));","\n// class Container extends Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             authenticated: false,\n//             loading: true,\n//         }\n//     }\n\n//     componentDidMount(){\n//         // console.log('location container', window.location.pathname)\n//         const token = localStorage.getItem('user');\n//         if (token) {\n//             UsersSearchByToken(token).then(res => {\n//                 this.props.set_active_user(res.data.payload);\n//                 this.props.fetch_doctors();\n//                 this.props.fetch_procedures_list();\n//                 this.setState({ loading: false, authenticated: true });\n//             }).catch(err => {\n//                 console.log(err)\n//                 localStorage.clear()\n//                 localStorage.setItem('cached-path', window.location.pathname)\n//                 this.props.set_active_user({})\n//                 this.setState({ loading: false });\n//             })\n//         }\n//         else {\n//             this.setState({ loading: false, authenticated: false })\n//         }\n//     }\n//     render() {\n\n//         console.log('container type', this.props.container_type, 'authenticated', this.state.authenticated)\n//         if (this.state.loading){\n//             return (\n//                 <Skeletons />\n//             )\n//         }\n//         return (\n//             this.props.container_type && !_.isEmpty(this.props.active_user)? \n\n//                 <div className={`virtual-body navbar-top ${this.props.left_sidebar ? (window.innerWidth >= 500 ? 'sidebar-xs' : 'sidebar-mobile-main') : ''}`}\n//                 // style={{backgroundImage: `url(${BACKGROUND})`, backgroundRepeat: 'no-repeat', backgroundSize: 'cover', backgroundPosition:'center'}}\n//                 >\n//                     <Header />\n//                     <div className=\"page-content\">\n\n//                         <Leftsidebar />\n\n//                         <div className=\"content-wrapper\">\n\n//                             {/* {page_header? <Pageheader /> : ''} */}\n\n//                             <div className={`content`}>\n//                                 {\n//                                     this.props.children\n//                                 }\n//                             </div>\n//                             <Footer />\n//                         </div>\n//                     </div>\n//                 </div> :\n\n//                 <div className={`virtual-body d-flex justify-content-center align-items-center background_custom`}>\n//                 {\n//                     this.props.children\n//                 }\n//             </div>\n//         );\n//     }\n// }\n\nimport React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Drawer, AppBar, Toolbar, CssBaseline, Typography, Divider, IconButton, Menu, MenuItem, Backdrop, CircularProgress } from '@material-ui/core';\nimport { Menu as MenuIcon, ChevronLeft as ChevronLeftIcon, ChevronRight as ChevronRightIcon, AccountCircleRounded, PersonRounded } from '@material-ui/icons';\nimport { LeftSideBar, Skeletons } from 'components';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport { set_active_user, fetch_doctors, fetch_procedures_list } from '../../redux/actions';\nimport './container.css'\nimport 'styles/animations/animations.css'\nimport { LogoutRequest, UsersSearchByToken } from 'services/queries';\nimport _ from 'lodash'\nimport { Ucfirst } from 'utils/functions';\nimport { LOGIN_URL, PROFILE, SETTINGS } from 'router/constants';\nimport notify from 'notify';\n\nconst drawerWidth = 260;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        // background: '#292b2c'\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nfunction Container(props) {\n\n    const { set_active_user, fetch_doctors, fetch_procedures_list } = props;\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(true);\n    const [loading, setLoading] = React.useState(true);\n    const [logoutLoading, setLogoutLoading] = React.useState(false);\n    const [authenticated, setAuthenticated] = React.useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n  \n    const openMenu = Boolean(anchorEl);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = (e) => {\n        console.log('e',e.target.id)\n        setAnchorEl(null);\n        const { id } = e.target;\n        if (id === \"1\") {\n            // profile\n            console.log('route profile')\n            props.history.push(PROFILE)\n        }\n        else if (id === \"2\") {\n            // settings\n            props.history.push(SETTINGS)\n        }\n        else if (id === \"3\") {\n            //logout\n            onLogoutClick();\n        }\n    };\n\n    useEffect(() => {\n        const token = localStorage.getItem('user');\n        if (token) {\n            UsersSearchByToken(token).then(res => {\n                console.log('fetching data')\n                set_active_user(res.data.payload);\n                fetch_doctors();\n                fetch_procedures_list();\n                setLoading(false);\n                setAuthenticated(true);\n            }).catch(err => {\n                console.log(err)\n                localStorage.clear()\n                localStorage.setItem('cached-path', window.location.pathname)\n                set_active_user({})\n                setLoading(false);\n            })\n        }\n        else {\n            setLoading(false);\n            setAuthenticated(false);\n        }\n    }, [set_active_user, fetch_doctors, fetch_procedures_list])\n\n    \n    const onLogoutClick = () => {\n        setLogoutLoading(true);\n        LogoutRequest().then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                notify('success', '', res.data.message)\n                setTimeout(() => {\n                    setLogoutLoading(false);\n                    props.history.push(LOGIN_URL)\n                }, 1000);\n            }\n            else {\n                setLogoutLoading(false);\n                notify('error', '', res.data.message)\n            }\n\n        }).catch(err => {\n            setLogoutLoading(false);\n            notify('error', '', err)\n        })\n\n\n    }\n\n    console.log('authenticated', authenticated);\n\n    if (loading) {\n        return (\n            <Skeletons />\n        )\n    } else {\n        if (props.container_type && !_.isEmpty(props.active_user)) {\n            return (\n                <div className={classes.root}>\n                    <CssBaseline />\n                    <AppBar\n                        position=\"fixed\"\n                        className={`${clsx(classes.appBar, { [classes.appBarShift]: open })} bg-dark`}\n                    >\n                        <Toolbar>\n                            <IconButton\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={handleDrawerOpen}\n                                edge=\"start\"\n                                className={clsx(classes.menuButton, { [classes.hide]: open, })}\n                            >\n                                <MenuIcon />\n                            </IconButton>\n                            <Typography variant=\"h6\" noWrap style={{flexGrow: 1}}>\n                                Code medicine\n                            </Typography>\n                            <div>\n                                <IconButton\n                                    aria-label=\"account of current user\"\n                                    aria-controls=\"menu-appbar\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleMenu}\n                                    color=\"inherit\"\n                                >\n                                    <AccountCircleRounded />\n                                </IconButton>\n                                {/* <Chip \n                                    color=\"inherit\"\n                                    avatar={<Avatar><AccountCircleRounded /></Avatar>} \n                                    label={Ucfirst(props.active_user.first_name)}\n                                    onClick={handleMenu}\n                                /> */}\n                                <Menu\n                                    id=\"menu-appbar\"\n                                    anchorEl={anchorEl}\n                                    anchorOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    keepMounted\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'right',\n                                    }}\n                                    open={openMenu}\n                                    onClose={handleMenuClose}\n                                >\n                                    <MenuItem onClick={handleMenuClose} disabled >\n                                        <div className={`d-flex justify-conent-end mr-3`}>\n                                            <PersonRounded fontSize=\"small\" className={`mr-2`} />\n                                            <Typography variant=\"subtitle2\">{Ucfirst(props.active_user.first_name)}</Typography>\n                                        </div>\n                                    </MenuItem>\n                                    <Divider />\n                                    <MenuItem id={1} onClick={handleMenuClose}>Profile</MenuItem>\n                                    <MenuItem id={2} onClick={handleMenuClose}>Settings</MenuItem>\n                                    <Divider />\n                                    <MenuItem id={3} onClick={handleMenuClose}>Logout</MenuItem>\n                                </Menu>\n                            </div>\n                        </Toolbar>\n                    </AppBar>\n                    <Drawer\n                        variant=\"permanent\"\n                        className={clsx(classes.drawer, { [classes.drawerOpen]: open, [classes.drawerClose]: !open })}\n                        classes={{\n                            paper: `${clsx({ [classes.drawerOpen]: open, [classes.drawerClose]: !open })} bg-dark`,\n                        }}\n                    >\n                        <div className={classes.toolbar}>\n                            <IconButton onClick={handleDrawerClose} className={`text-white`}>\n                                {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                            </IconButton>\n                        </div>\n                        <Divider />\n                        <LeftSideBar open={open} />\n                    </Drawer>\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        {\n                            props.children\n                        }\n                    </main>\n                    <Backdrop className={classes.backdrop} open={logoutLoading} onClick={() => console.log('loading please wait...')}>\n                        <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n                </div>\n            );\n        } else {\n            return (\n                <div className={`virtual-body d-flex justify-content-center align-items-center background_custom`}>\n                    {\n                        props.children\n                    }\n                </div>\n            )\n        }\n    }\n}\n\nfunction map_state_to_props(state) {\n    return {\n        left_sidebar: state.left_sidebar,\n        active_user: state.active_user,\n        \n    }\n}\nexport default connect(map_state_to_props, {\n    set_active_user,\n    fetch_doctors,\n    fetch_procedures_list,\n})(withRouter(Container));","import React, { Component, Fragment } from 'react';\nimport { LOGIN_URL, PROFILE } from '../../router/constants';\nimport { connect } from \"react-redux\";\nimport { left_sidebar_controls, set_active_user } from '../../redux/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { Ucfirst } from '../../utils/functions';\nimport notify from 'notify';\nimport { LogoutRequest } from 'services/queries';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showDropDown: false,\n            collapseMenu: false,\n        };\n    }\n\n    on_sidebar_control_button_click = () => {\n        if (this.props.left_sidebar === true) {\n            this.props.left_sidebar_controls(false)\n        }\n        else {\n            this.props.left_sidebar_controls(true)\n        }\n    }\n\n    on_logout_button_click = () => {\n\n        LogoutRequest().then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                notify('success', '', res.data.message)\n                this.props.history.push(LOGIN_URL)\n                // this.props.set_active_user({})\n            }\n            else {\n                notify('error', '', res.data.message)\n            }\n\n        })\n            .catch(err => {\n                notify('error', '', err)\n            })\n\n\n    }\n\n    on_click_drop_down = () => {\n        this.setState({ showDropDown: !this.state.showDropDown })\n    }\n\n    on_click_collapse_menu = () => {\n        this.setState({ collapseMenu: !this.state.collapseMenu })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleClickOutside, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClickOutside, true);\n    }\n\n    handleClickOutside = event => {\n        const domNode = ReactDOM.findDOMNode(this);\n\n        if (!domNode || !domNode.contains(event.target)) {\n            this.setState({ showDropDown: false });\n        }\n    }\n\n    render() {\n        return (\n\n            <div className=\"navbar navbar-expand-md navbar-dark fixed-top\">\n                <div className=\"navbar-brand\">\n                    <Link onClick={this.on_sidebar_control_button_click} to={\"#\"}\n                        className=\"d-inline py-3 text-white\">\n                        <i className=\"icon-paragraph-justify2\"></i>\n                    </Link>\n                </div>\n\n                <div className=\"d-md-none\">\n                    <button\n                        className={`btn bg-teal-400 btn-labeled-left rounded-round`}\n                        onClick={() => this.on_click_drop_down()}\n                    >\n                        <i className={`icon-reading`} />\n                    </button>\n                    <div\n                        className={`dropdown-menu dropdown-menu-right ${this.state.showDropDown ? 'show' : ''}`}\n                        x-placement=\"bottom-end\"\n                        style={{ position: 'absolute', willChange: 'transform', top: '0px', right: '0px', transform: 'translate3d(-38px, 36px, 0px)' }}\n                    >\n                        <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link onClick={() => this.on_logout_button_click()} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                    </div>\n                </div>\n\n                <div className={`collapse navbar-collapse d-none d-md-none d-lg-flex justify-content-between align-items-center ${this.state.collapseMenu ? '' : 'show'}`} id=\"navbar-mobile\">\n                    <p className={`mb-0`}>\n                        {\n                            this.props.active_page !== null ? this.props.active_page.map((item, i) => {\n                                return <Fragment key={i}>{item}</Fragment>\n                            }) : ''\n                        }\n                    </p>\n                    <div className={`text-white d-flex align-items-center`}>\n                        <Link to={\"#\"} onClick={() => alert(\"Please mail us on codemedicine29@gmail.com\")} className=\"breadcrumb-elements-item mr-2\">\n                            <i className=\"icon-comment-discussion mr-2\"></i>\n                            Support\n                        </Link>\n                        <button\n                            className={`btn bg-teal-400 btn-labeled btn-labeled-left rounded-round dropdown-toggle pl-5`}\n                            onClick={() => this.on_click_drop_down()}\n                        >\n                            <b>\n                                <i className={`icon-reading`} />\n                            </b>\n                            {Ucfirst(this.props.active_user.first_name)}\n                        </button>\n                    </div>\n\n                    <div\n                        className={`dropdown-menu dropdown-menu-right ${this.state.showDropDown ? 'show' : ''}`}\n                        x-placement=\"bottom-end\"\n                        style={{ position: 'absolute', willChange: 'transform', top: '0px', right: '0px', transform: 'translate3d(-38px, 36px, 0px)' }}\n                    >\n                        <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                        <div className=\"dropdown-divider\"></div>\n                        <Link onClick={() => this.on_logout_button_click()} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        left_sidebar: state.left_sidebar,\n        active_user: state.active_user,\n        active_page: state.active_page\n\n    }\n}\nexport default connect(map_state_to_props, { left_sidebar_controls, set_active_user })(withRouter(Header));","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <footer className=\" bg-dark p-2\">\n                <span>Developed by <Link to=\"/\">code-medicine</Link></span>\n            </footer>\n        );\n    }\n}\nexport default Footer;","import React from 'react';\r\nimport { AccountBalanceRounded, ArrowRightRounded, HomeRounded, ImportContactsRounded, SearchRounded, SettingsRounded } from '@material-ui/icons';\r\nimport * as RC from 'router/constants';\r\n\r\n\r\nconst nested_items_icon = <ArrowRightRounded />\r\n\r\nconst LIST = {\r\n    Dashboard: {\r\n        title: 'Home',\r\n        nested: false,\r\n        icon_class: <HomeRounded />,\r\n        url: RC.BASE_URL,\r\n        active: true,\r\n    },\r\n    Search: {\r\n        title: 'Search',\r\n        nested: true,\r\n        icon_class: <SearchRounded />,\r\n        url: '#',\r\n        open: false,\r\n        active: true,\r\n        routes: [\r\n            {\r\n                title: 'Patients',\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false,\r\n            },\r\n            {\r\n                title: 'Doctors',\r\n                url: RC.SEARCH_DOCTORS,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            }\r\n        ]\r\n    },\r\n    Reception: {\r\n        title: 'Reception',\r\n        nested: true,\r\n        icon_class: <ImportContactsRounded /> ,\r\n        url: '#',\r\n        open: false,\r\n        active: true,\r\n        routes: [\r\n            {\r\n                title: `Today's Patients`,\r\n                url: RC.RECEPTION_TODAYSPATIIENT,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            {\r\n                title: 'All Appointments',\r\n                url: RC.RECEPTION_VISITS,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            {\r\n                title: 'Procedures',\r\n                url: RC.RECEPTION_PROCEDURES,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            \r\n            {\r\n                title: `Emergency`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n            {\r\n                title: `Admissions`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n            {\r\n                title: `Requests`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n        ]\r\n    },\r\n    Accounts: {\r\n        title: 'Accounts',\r\n        nested: true,\r\n        icon_class: <AccountBalanceRounded />,\r\n        url: '#',\r\n        open: false,\r\n        active: true,\r\n        routes: [\r\n            {\r\n                title: `Day to day`,\r\n                url: RC.PAYMENTS,\r\n                icon_class: nested_items_icon,\r\n                active: true,\r\n            },\r\n            {\r\n                title: `My Payments`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n            {\r\n                title: `History`,\r\n                url: RC.BASE_URL,\r\n                icon_class: nested_items_icon,\r\n                active: false\r\n            },\r\n        ]\r\n    },\r\n    Settings: {\r\n        title: 'Settings',\r\n        nested: false,\r\n        icon_class: <SettingsRounded />,\r\n        url: RC.SETTINGS,\r\n        active: true,\r\n    },\r\n}\r\n\r\nexport default LIST;","import { SETTINGS_UPDATE_LEFTSIDEBAR_LIST } from \"../constants\";\r\nimport _ from 'lodash';\r\n\r\nconst INITIAL_SETTINGS = {\r\n    left_sidebar_collapsed: true,\r\n\r\n}\r\n\r\nexport default function (state = INITIAL_SETTINGS, action) {\r\n    switch (action.type) {\r\n        case SETTINGS_UPDATE_LEFTSIDEBAR_LIST:\r\n            const new_state = _.cloneDeep(state);\r\n            new_state.left_sidebar_collapsed = !state.left_sidebar_collapsed\r\n            return new_state;\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux';\nimport Notify from './reducer_notify';\nimport Left_sidebar from './reducer_sidebar_controls';\nimport Active_user from './reducer_active_user';\nimport Active_page from './reducer_active_page';\nimport Todays_patient from './reducer_todays_patients';\nimport Settings from './reducer_settings';\nimport Doctors from './reducer_doctors';\nimport ProceduresList from './reducer_procedure_list';\n\nconst root_reducer = combineReducers({\n    notify: Notify,\n    left_sidebar: Left_sidebar,\n    active_user: Active_user,\n    active_page: Active_page,\n    todays_patient: Todays_patient,\n    settings: Settings,\n    doctors: Doctors,\n    proceduresList: ProceduresList,\n    \n});\n\nexport default root_reducer","import { NOTIFY } from \"../constants\";\nimport { toast } from 'react-toastify';\n\n\nexport default function(state={},action){\n    switch (action.type){\n        case NOTIFY:\n            const options = {\n                position: toast.POSITION.TOP_RIGHT,\n                pauseOnFocusLoss: true\n            }\n            switch (action.payload['type']) {\n                case 'success':\n                    toast.success(action.payload['message'], options);\n                    break;\n                case 'error':\n                    toast.error(action.payload['message'], options);\n                    break;\n                case 'warning':\n                    toast.warn(action.payload['message'], options);\n                    break;\n                case 'info':\n                    toast.info(action.payload['message'], options);\n                    break;\n                default:\n                    toast(action.payload['message'], options);\n            }\n            return action.payload\n        default:\n            return state\n    }\n}","import { LEFT_SIDEBAR } from \"../constants\";\n\nexport default function (state=false,action){\n    switch(action.type){\n        case LEFT_SIDEBAR:\n            return action.payload\n        default:\n            return state\n    }\n}","import { ACTIVE_USER } from \"../constants\";\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case ACTIVE_USER:\n            return action.payload;\n        default:\n            return state\n    }\n}","import { ACTIVE_PAGE } from \"../constants\";\r\n\r\nexport default function(state=[],action){\r\n    switch(action.type){\r\n        case ACTIVE_PAGE:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}","import { TODAYS_PATIENT, TODAYS_PATIENT_CLEAR, TODAYS_PATIENT_APPOINTMENT_UPDATE } from \"../constants\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case TODAYS_PATIENT:\r\n            console.log('todays patients', action.payload)\r\n            if (action.payload.status === 200)\r\n                return { \r\n                    loading: action.loading, \r\n                    data: action.payload.data.payload\r\n                }\r\n            else\r\n                return { \r\n                    loading: action.loading, \r\n                    data: action.payload \r\n                }\r\n        case TODAYS_PATIENT_CLEAR:\r\n            return { loading: true, data: [] }\r\n        case TODAYS_PATIENT_APPOINTMENT_UPDATE:\r\n            if (action.payload.new_item !== undefined){\r\n                return state.data.map((item,i) => {\r\n                    if (item._id !== action.payload.id) {\r\n                        // This isn't the item we care about - keep it as-is\r\n                        return item\r\n                    }\r\n                    return {\r\n                        ...item,\r\n                        ...action.payload.new_item\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                return state.data\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { FETCH_DOCTORS } from \"redux/constants\";\r\n\r\nexport default function (state={},action){\r\n    switch (action.type) {\r\n        case FETCH_DOCTORS:\r\n            return action.payload;    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_PROCEDURE_LIST } from \"redux/constants\";\r\n\r\nexport default function (state={}, action) {\r\n    switch (action.type) {\r\n        case FETCH_PROCEDURE_LIST:\r\n            return action.payload;    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport reducers from './reducers';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport promise from 'redux-promise';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst store = createStore((reducers), composeWithDevTools(applyMiddleware(promise, thunk)));\r\n\r\nexport default store;","\n// class Left_sidebar extends Component {\n\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             search_toggle: '',\n//             chat_toggle: '',\n//             reception_toggle: '',\n//             procedures_toggle: '',\n//             pricing_toggle: '',\n//             current_page: 'Home',\n\n//             list: LIST\n//         }\n//     }\n//     componentDidMount() {\n//         // console.log('my user',this.props.active_user);\n\n//     }\n\n//     on_item_click = (item) => {\n//         if (this.state.list[item].nested) {\n//             const routes_list = this.state.list;\n//             routes_list[item].open = !routes_list[item].open;\n//             this.setState({ list: routes_list })\n//         }\n//     } //this.setState({ [e.target.id]: this.state[e.target.id] === '' ? 'nav-item-open' : '' });\n\n//     render() {\n//         const first_name_first_letter = this.props.active_user.first_name.charAt(0).toUpperCase()\n//         const first_name_rest = this.props.active_user.first_name.length > 1 ? this.props.active_user.first_name.substring(1) : ''\n//         const last_name_first_letter = this.props.active_user.last_name.charAt(0).toUpperCase()\n//         const last_name_rest = this.props.active_user.last_name.length > 1 ? this.props.active_user.last_name.substring(1) : ''\n\n//         return (\n//             <div className=\"sidebar sidebar-dark sidebar-main sidebar-fixed sidebar-expand-md\" >\n\n//                 <div className=\"sidebar-mobile-toggler text-center\">\n//                     <Link to={\"#\"} onClick={() => this.props.left_sidebar_controls(false)} className=\"sidebar-mobile-main-toggle\">\n//                         <i className=\"icon-arrow-left8\"></i>\n//                     </Link>\n//                     Menu\n//                     <Link to={RC.BASE_URL} className=\"sidebar-mobile-expand\">\n//                         <i className=\"icon-screen-full\"></i>\n//                         <i className=\"icon-screen-normal\"></i>\n//                     </Link>\n//                 </div>\n\n//                 <div className=\"sidebar-content\">\n//                     <div className=\"sidebar-user background_custom_left_side_bar d-flex align-items-center\" style={{ height: '25vh' }}>\n//                         <div className=\"card-body\">\n//                             <div className=\"media d-flex align-items-center\">\n//                                 {this.props.left_sidebar ? <Logo width=\"0.5in\" height=\"0.5in\" /> : ''}\n//                                 <div className=\"media-body d-flex flex-column justify-content-center align-items-center\">\n//                                     <Avatar\n//                                         className={`text-info bg-white h3 p-3 btn btn-light`}\n//                                         style={{ height: '80px', width: '80px' }}\n//                                         component=\"button\"\n//                                         onClick={() => this.props.history.push(RC.PROFILE)}>\n//                                         {first_name_first_letter}{last_name_first_letter}\n//                                     </Avatar>\n//                                     <div className={``}>\n//                                         <Link className={`text-shadow text-white`} to={RC.PROFILE}>\n//                                             {first_name_first_letter}{first_name_rest} {last_name_first_letter}{last_name_rest}\n//                                         </Link>\n//                                     </div>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     </div>\n\n//                     <div className=\"card card-sidebar-mobile\">\n//                         <ul className=\"nav nav-sidebar\">\n\n//                             {\n//                                 this.props.settings.left_sidebar_collapsed ?\n//                                     Object.keys(this.state.list).map((item, i) => {\n//                                         const elem = this.state.list[item];\n//                                         return <li className={`nav-item ${elem.nested ? `nav-item-submenu ${elem.open ? 'nav-item-open' : ''}` : ''}`} key={i}>\n//                                             <Link to={elem.url} className=\"nav-link bounceInLeft animated\" onClick={() => this.on_item_click(item)}>\n//                                                 <i className={elem.icon_class}></i>\n//                                                 <span>{elem.title}</span>\n//                                             </Link>\n//                                             {\n//                                                 elem.nested ?\n//                                                     <ul className=\"nav nav-group-sub\" data-submenu-title={item} style={{ display: elem.open ? 'block' : 'none' }}>\n//                                                         {\n//                                                             elem.routes.map((nitem, ni) => {\n//                                                                 return <li className=\"nav-item\" key={ni}>\n//                                                                     <Link to={nitem.url} className={`nav-link ${nitem.active ? '' : 'disabled'}`}>\n//                                                                         {nitem.title}\n//                                                                         {\n//                                                                             nitem.active ?\n//                                                                                 '' :\n//                                                                                 <span className=\"badge bg-transparent align-self-center ml-auto\">\n//                                                                                     Coming soon\n//                                                                             </span>\n//                                                                         }\n\n//                                                                     </Link>\n//                                                                 </li>\n//                                                             })\n//                                                         }\n//                                                     </ul> : ''\n//                                             }\n//                                         </li>\n//                                     }) :\n//                                     Object.keys(this.state.list).map((item, i) => {\n//                                         const elem = this.state.list[item];\n//                                         return <Fragment key={i}>\n//                                             <li className={`nav-item-header`}>\n//                                                 {elem.title}\n//                                             </li>\n//                                             {\n//                                                 elem.nested ?\n//                                                     elem.routes.map((nitem, ni) => {\n//                                                         return <li className={`nav-item`} key={ni}>\n//                                                             <Link to={nitem.url} className={`nav-link ${nitem.active ? '' : 'disabled'}`}>\n//                                                                 <i className={nitem.icon_class}></i>\n//                                                                 {nitem.title}\n//                                                                 {nitem.active ? '' : <span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span>}\n//                                                             </Link>\n//                                                         </li>\n//                                                     }) :\n//                                                     <li className=\"nav-item\">\n//                                                         <Link to={elem.url} className={`nav-link ${elem.active ? '' : 'disabled'}`}>\n//                                                             <i className={elem.icon_class} />\n//                                                             {elem.title}\n//                                                             {elem.active ? '' : <span className=\"badge bg-transparent align-self-center ml-auto\">Coming soon</span>}\n//                                                         </Link>\n//                                                     </li>\n//                                             }\n//                                         </Fragment>\n//                                     })\n//                             }\n//                         </ul>\n//                     </div>\n\n\n//                 </div>\n//                 <button className={`btn `} onClick={() => console.log('STORE', store.getState())}>\n//                     Store\n//                 </button>\n\n//             </div >\n//         );\n//     }\n// }\n// function map_state_to_props(state) {\n//     return {\n//         active_user: state.active_user,\n//         left_sidebar: state.left_sidebar,\n//         settings: state.settings,\n//     }\n// }\n// export default connect(map_state_to_props, {\n//         set_active_user,\n//         left_sidebar_controls,\n//         toggle_sidebar_menu_collapse\n//     }\n// )(withRouter(Left_sidebar));\n\n\nimport React from 'react'\nimport { List, ListItem, ListItemIcon, ListItemText, Divider, Avatar, Collapse, Button } from '@material-ui/core';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport * as RC from 'router/constants';\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from 'react-router-dom';\nimport { set_active_user, left_sidebar_controls, toggle_sidebar_menu_collapse } from 'redux/actions';\nimport 'styles/animations/animations.css';\nimport './left_sidebar.css'\nimport LIST from './menu-list';\nimport store from 'redux/store';\n\n\nfunction LeftSideBar(props) {\n    const [list, setList] = React.useState(LIST);\n\n    const onItemClick = (item) => {\n        if (list[item].nested) {\n            const routes_list = { ...list };\n            routes_list[item].open = !routes_list[item].open;\n            setList(routes_list)\n        }\n    }\n\n\n    const first_name_first_letter = props.active_user.first_name.charAt(0).toUpperCase();\n    const first_name_rest = props.active_user.first_name.length > 1 ? props.active_user.first_name.substring(1) : '';\n    const last_name_first_letter = props.active_user.last_name.charAt(0).toUpperCase();\n    const last_name_rest = props.active_user.last_name.length > 1 ? props.active_user.last_name.substring(1) : '';\n\n    const avatar_size = props.open ? '80px' : '40px';\n    return (\n        <div>\n            <div className={`background_custom_left_side_bar d-flex justify-content-center align-items-center flex-column`} style={{ height: '25vh' }}>\n                <Avatar\n                    className={`text-info bg-white h3 p-3 btn btn-light ${props.open ? 'zoomIn animated' : 'fadeInDownBig animated'}`}\n                    style={{ height: avatar_size, width: avatar_size }}\n                    component=\"button\"\n                    onClick={() => props.history.push(RC.PROFILE)}>\n                    {first_name_first_letter}{last_name_first_letter}\n                </Avatar>\n                {\n                    <div className={props.open ? 'zoomIn animated' : 'zoomOut animated'}>\n                        <Link className={`text-shadow text-white`} to={RC.PROFILE}>\n                            {first_name_first_letter}{first_name_rest} {last_name_first_letter}{last_name_rest}\n                        </Link>\n                    </div>\n                }\n            </div>\n\n            <List className={`zoomIn animated`}>\n                {\n                    props.settings.left_sidebar_collapsed ?\n                        Object.keys(list).map((item, i) => {\n                            const elem = list[item];\n                            return <div key={i}>\n                                <ListItem button className={`text-white`} selected={window.location.pathname === elem.url} component={Link} to={elem.url} onClick={() => onItemClick(item)}>\n                                    <ListItemIcon className={`text-white`}>{elem.icon_class}</ListItemIcon>\n                                    <ListItemText primary={elem.title} primaryTypographyProps={{ variant: 'body2' }} />\n                                    {elem.nested ? (elem.open ? <ExpandLess /> : <ExpandMore />) : ''}\n                                </ListItem>\n                                {\n                                    elem.nested ?\n                                        <Collapse in={elem.open} timeout=\"auto\" unmountOnExit>\n                                            <Divider />\n                                            <List component=\"div\" className={`bg-slate-800`} disablePadding>\n                                                {\n                                                    elem.routes.map((nitem, ni) => {\n                                                        return <ListItem key={ni * i} button disabled={!nitem.active} selected={window.location.pathname === nitem.url} className={`text-white`} component={Link} to={nitem.url}>\n                                                            <ListItemIcon className={`text-white`}>{nitem.icon_class}</ListItemIcon>\n                                                            <ListItemText primary={nitem.title} primaryTypographyProps={{ variant: 'body2' }} />\n                                                        </ListItem>\n                                                    })\n                                                }\n                                            </List>\n                                            <Divider />\n                                        </Collapse> : ''\n                                }\n                            </div>\n                        }) : ''\n                }\n            </List>\n            <Button color=\"secondary\" endIcon={<ExpandLess />} onClick={() => console.log('STORE', store.getState())}>\n                Store\n            </Button>\n        </div>\n    )\n}\n\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        left_sidebar: state.left_sidebar,\n        settings: state.settings,\n    }\n}\nexport default connect(map_state_to_props, {\n    set_active_user,\n    left_sidebar_controls,\n    toggle_sidebar_menu_collapse\n}\n)(withRouter(LeftSideBar));","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { BASE_URL, PROFILE, LOGIN_URL } from 'router/constants'\nimport NOPICTURE from 'resources/images/placeholder.jpg'\nimport { set_active_user } from \"redux/actions\";\nimport { connect } from \"react-redux\";\nimport Axios from 'axios';\nimport { LOGOUT_USER_REQUEST } from 'services/rest_end_points'\nimport notify from 'notify'\n\n\n\nclass Page_header extends Component {\n\n    on_logout_button_click = () => {\n\n        Axios.post(LOGOUT_USER_REQUEST, {\n            token: localStorage.getItem('user')\n        }, {\n            headers: { 'code-medicine': localStorage.getItem('user') }\n        }).then(res => {\n            if (res.data.status === true) {\n                localStorage.clear()\n                this.props.set_active_user({})\n                this.props.history.push(LOGIN_URL)\n\n                notify('success', '', res.data.message)\n            }\n            else {\n                notify('error', '', res.data.message)\n            }\n\n        })\n            .catch(err => {\n                notify('error', '', err)\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div className=\"page-header page-header-light\">\n                {/* <div className=\"page-header-content header-elements-md-inline\">\n                    <div className=\"page-title d-flex\">\n                        <h4>\n                            <i className=\"icon-arrow-left52 mr-2\"></i> \n                            <span className=\"font-weight-semibold\">Home</span> - Dashboard\n                        </h4>\n                        <Link to={BASE_URL} className=\"header-elements-toggle text-default d-md-none\">\n                            <i className=\"icon-more\"></i>\n                        </Link>\n                    </div>\n\n                    <div className=\"header-elements d-none\">\n                        <div className=\"d-flex justify-content-center\">\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-bars-alt text-primary\"></i>\n                                <span>Statistics</span>\n                            </Link>\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-calculator text-primary\"></i> \n                                <span>Invoices</span>\n                            </Link>\n                            <Link to={BASE_URL} className=\"btn btn-link btn-float text-default\">\n                                <i className=\"icon-calendar5 text-primary\"></i> \n                                <span>Schedule</span>\n                            </Link>\n                        </div>\n                    </div>\n                </div> */}\n\n                <div className=\"breadcrumb-line breadcrumb-line-light header-elements-md-inline\">\n                    <div className=\"d-flex\">\n                        <div className=\"breadcrumb py-0\">\n                            {this.props.active_page !== null ? this.props.active_page.map((item, i) => {\n                                return <Fragment key={i}>{item}</Fragment>\n                            }) : ''}\n                            {/* <Link to=\"index.html\" className=\"breadcrumb-item\">\n                                <i className=\"icon-home2 mr-2\"></i> \n                                Home\n                            </Link>\n                            <span className=\"breadcrumb-item active\">Dashboard</span> */}\n                        </div>\n\n                        <Link to={BASE_URL} className=\"header-elements-toggle text-default d-md-none\">\n                            <i className=\"icon-more\"></i>\n                        </Link>\n                    </div>\n\n                    <div className=\"header-elements d-none\">\n                        <div className=\"breadcrumb justify-content-center py-0\">\n                            <Link to={\"#\"} onClick={() => {\n                                alert(\"Please mail us on codemedicine29@gmail.com\");\n                            }} className=\"breadcrumb-elements-item\">\n                                <i className=\"icon-comment-discussion mr-2\"></i>\n                                Support\n                            </Link>\n\n                            <div className=\"breadcrumb-elements-item dropdown p-0\">\n                                <Link to={`#`} className=\"breadcrumb-elements-item dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <img src={NOPICTURE} style={{ height: 30, width: 30 }} className=\"rounded-circle mr-2\" alt=\"\" />\n                                    <span className={``}>{this.props.active_user.first_name}</span>\n                                </Link>\n\n                                <div className=\"dropdown-menu dropdown-menu-right\">\n                                    <Link to={PROFILE} className=\"dropdown-item\"><i className=\"icon-user-plus\"></i> My profile</Link>\n                                    {/* <Link to={`#`} className=\"dropdown-item\"><i className=\"icon-comment-discussion\"></i> Messages <span className=\"badge badge-pill bg-blue ml-auto\">58</span></Link> */}\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link onClick={this.on_logout_button_click} to={\"#\"} className=\"dropdown-item\"><i className=\"icon-switch2\"></i> Logout</Link>\n                                </div>\n                            </div>\n                            {/* <div className=\"breadcrumb-elements-item dropdown p-0\">\n                                <Link to={BASE_URL} className=\"breadcrumb-elements-item dropdown-toggle\" data-toggle=\"dropdown\">\n                                    <i className=\"icon-gear mr-2\"></i>\n                                    Settings\n                                </Link>\n\n                                <div className=\"dropdown-menu dropdown-menu-right\">\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-user-lock\"></i> \n                                        Account security\n                                    </Link>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-statistics\"></i> \n                                        Analytics\n                                    </Link>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-accessibility\"></i> \n                                        Accessibility\n                                    </Link>\n                                    <div className=\"dropdown-divider\"></div>\n                                    <Link to={BASE_URL} className=\"dropdown-item\">\n                                        <i className=\"icon-gear\"></i> \n                                        All settings\n                                    </Link>\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        active_user: state.active_user,\n        active_page: state.active_page\n    }\n}\nexport default connect(map_state_to_props, { set_active_user, notify })(withRouter(Page_header));","import { Button, IconButton, InputField } from 'components';\r\nimport React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport TimeKeeper from 'react-timekeeper';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { convert_object_array_to_string, Ucfirst } from 'utils/functions';\r\nimport { ProcedureCreate, UserSearchByCredentials } from 'services/queries';\r\nimport Notify from 'notify';\r\n\r\nclass CreateProcedure extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date_input: { value: moment().format('ll'), error: false },\r\n            procedure_type_input: { value: '', label: '', error: false },\r\n            patient_input: { value: '', label: '', error: false },\r\n            doctor_input: { value: '', label: '-', error: false },\r\n            reference_input: { value: '', error: false },\r\n            fee_input: { value: '', error: false },\r\n            discount_input: { value: '', error: false },\r\n            dr_share_input: { value: '', error: false },\r\n            comments_input: { value: '', error: false },\r\n            time_input: { value: moment().format('LT'), error: false },\r\n            paid_amount_input: { value: \"\", error: false },\r\n\r\n            loading: false,\r\n            doctors: [],\r\n            patients: [],\r\n            procedures_list: [],\r\n            pateints_options_loading: false,\r\n        }\r\n        this.search_patient_trigger_timmer = null;\r\n    }\r\n\r\n    populate_doctors = (doctors) => {\r\n        const temp_users = []\r\n        for (let i = 0; i < doctors.length; ++i) {\r\n            const t_user = doctors[i]\r\n\r\n            temp_users.push({\r\n                id: 'doctor_selection',\r\n                value: t_user.doctor._id,\r\n                label: `Dr. ${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${convert_object_array_to_string(t_user.details.specialities, 'description')}`\r\n            })\r\n            if (i === doctors.length - 1) {\r\n                this.setState({ doctors: temp_users });\r\n            }\r\n        }\r\n    }\r\n\r\n    populate_procedures_list = (procedures_list) => {\r\n        const temp = []\r\n        for (let i = 0; i < procedures_list.length; ++i) {\r\n            const t = procedures_list[i]\r\n\r\n            temp.push({\r\n                id: 'procedure_selection',\r\n                value: t._id,\r\n                label: `${Ucfirst(t.name)} | ${Ucfirst(t.department)} `\r\n            })\r\n            if (i === procedures_list.length - 1) {\r\n                this.setState({ procedures_list: temp });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        // console.log('cwrp', new_props)\r\n        if (new_props.doctors)\r\n            this.populate_doctors(new_props.doctors);\r\n        if (new_props.procedures_list)\r\n            this.populate_procedures_list(new_props.procedures_list);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.doctors) {\r\n            this.populate_doctors(this.props.doctors);\r\n        }\r\n        if (this.props.procedures_list) {\r\n            this.populate_procedures_list(this.props.procedures_list);\r\n        }\r\n\r\n        const { data } = this.props;\r\n        if (this.props.data){\r\n            this.setState(state => {\r\n                state.date_input.value = moment(data.time_stamp.operate).format('ll');\r\n                state.procedure_type_input.label = `${data.procedure_type.name} | ${data.procedure_type.department}`;\r\n                state.procedure_type_input.value = data.procedures_list_id\r\n                state.patient_input.label = `${data.patient.mrn} | ${Ucfirst(data.patient.first_name)} ${Ucfirst(data.patient.last_name)}`;\r\n                state.patient_input.value = data.patient_id;\r\n                state.doctor_input.label =  `Dr. ${Ucfirst(data.doctor.first_name)} ${Ucfirst(data.doctor.last_name)}`;\r\n                state.doctor_input.value = data.doctor_id;\r\n                state.reference_input.value = data.reference;\r\n                state.fee_input.value = data.fee;\r\n                state.discount_input.value = data.discount;\r\n                state.dr_share_input.value = data.dr_share;\r\n                state.comments_input.value = data.description;\r\n                state.time_input.value = moment(data.time_stamp.operate).format('LT');\r\n                state.paid_amount_input.value = data.paid_amount;\r\n                return state;\r\n            })\r\n        }\r\n    }\r\n\r\n    onCreateProcedure = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true }, () => {\r\n            try {\r\n                const operate_time = `${moment(this.state.date_input.value).format('YYYY-MM-DD')}T${moment(this.state.time_input.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`\r\n                const payload = {\r\n                    patient_id: this.state.patient_input.value.trim(),\r\n                    doctor_id: this.state.doctor_input.value.trim(),\r\n                    appointment_id: this.props.appointment_id || null,\r\n                    procedure_list_id: this.state.procedure_type_input.value.trim(),\r\n                    reference: this.state.reference_input.value.trim(),\r\n                    fee: this.state.fee_input.value,\r\n                    discount: this.state.discount_input.value.trim(),\r\n                    dr_share: this.state.dr_share_input.value.trim(),\r\n                    description: this.state.comments_input.value.trim(),\r\n                    paid_amount: this.state.paid_amount_input.value,\r\n                    time_stamp: {\r\n                        operate: operate_time,\r\n                        report: operate_time,\r\n                    }\r\n                }\r\n                if (this.props.data){\r\n                    payload._id = this.props.data._id;\r\n                    console.log('update payload', payload)\r\n                    \r\n                }\r\n                else {\r\n                    console.log('create payload', payload)\r\n                    ProcedureCreate(payload).then(_res => {\r\n                        Notify('success', '', _res.data.message);\r\n                        this.setState({ loading: false });\r\n                        setTimeout(() => {\r\n                            this.props.handleClose(true);//close modal with true to indicate that procedures should be loaded again                            \r\n                        }, 1000);\r\n                    }).catch(error => {\r\n                        Notify('error', '', error.toString());\r\n                        this.setState({ loading: false });\r\n                    })\r\n                }\r\n                \r\n            } catch (e) {\r\n                // console.log('error', e)\r\n                Notify('info', '', e.toString());\r\n                this.setState({ loading: false });\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } });\r\n    }\r\n\r\n    onSelectChange = (e, id) => {\r\n        console.log('e', e, id)\r\n        if (id === 'procedure_type_input' && e){\r\n            const respective_item = this.props.procedures_list.find(item => item._id === e.value);\r\n            this.setState({ [id]: { value: e.value, label: e.label, error: false }, fee_input: { value: respective_item.operation_charges, error: false } });\r\n        }\r\n        else {\r\n            this.setState({ [id]: { value: e ? e.value : '', label: e ? e.label : '', error: false } });\r\n        }\r\n    }\r\n\r\n    populate_patients = (str) => {\r\n        clearTimeout(this.search_patient_trigger_timmer);\r\n        if (str.length >= 2) {\r\n            this.setState({ pateints_options_loading: true }, () => {\r\n                this.search_patient_trigger_timmer = setTimeout(() => {\r\n                    UserSearchByCredentials(str, 'Patient').then(_res => {\r\n                        console.log('response ', _res.data);\r\n                        const temp = []\r\n                        if (_res.data.payload.users.length > 0){\r\n                            for (let i = 0; i < _res.data.payload.users.length; ++i) {\r\n                                const t = _res.data.payload.users[i]\r\n        \r\n                                temp.push({\r\n                                    id: 'patient_selection',\r\n                                    value: t._id,\r\n                                    label: `${t.mrn} | ${Ucfirst(t.first_name)} ${Ucfirst(t.last_name)} `\r\n                                })\r\n                                if (i === _res.data.payload.users.length - 1) {\r\n                                    this.setState({ patients: temp, pateints_options_loading: false });\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.setState({ patients: [], pateints_options_loading: false });\r\n                        }\r\n                    })\r\n                }, 1000)\r\n                \r\n            })\r\n        }\r\n        else {\r\n            this.setState({ patients: [], pateints_options_loading: false });\r\n        }\r\n    }\r\n\r\n    procedureDateInputChange = (e) => {\r\n        if (e === '') {\r\n            this.setState({ date_input: { value: '', error: true } })\r\n        }\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n                // this.props.clear_todays_appointments()\r\n                // this.props.load_todays_appointments(configured_date)\r\n                localStorage.setItem('Gh65$p3a008#2G', configured_date)\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ date_input: { value: configured_date, error: configured_date === '' ? true : false } })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal visible={this.props.visibility} dialogClassName=\"modal-lg\" onClickBackdrop={() => this.props.handleClose()}>\r\n                <form method=\"post\" onSubmit={this.onCreateProcedure}>\r\n                    <div className={`modal-header ${this.props.data ? 'bg-slate' : 'bg-teal-400'}`}>\r\n                        <h5>{this.props.data? `Update Procedure`:`Create New Procedure`}</h5>\r\n                        <div className={`w-25`}>\r\n                            <DateTimePicker id=\"date_input\"\r\n                                onChange={(e) => this.procedureDateInputChange(e)}\r\n                                className=\"clock_datatime_picker text-teal-400\"\r\n                                inputProps={{\r\n                                    placeholder: 'Select Date',\r\n                                    width: '100%',\r\n                                    className: `form-control ${this.state.date_input.error ? 'border-danger' : ''}`,\r\n                                    disabled: this.state.loading\r\n                                }}\r\n                                input={true}\r\n                                dateFormat={'ll'}\r\n                                timeFormat={false}\r\n                                closeOnSelect={true}\r\n                                value={this.state.date_input.value}\r\n\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={`modal-body`}>\r\n                        <div className={`container-fluid`}>\r\n\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-8`}>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-12`}>\r\n                                            <InputField\r\n                                                heading=\"What procedure to do?\"\r\n                                                field_type=\"select\"\r\n                                                required\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                options={this.state.procedures_list}\r\n                                                className={`Select-option`}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Search for procedure\"\r\n                                                id=\"procedure_type_input\"\r\n                                                isDisabled={this.state.loading}\r\n                                                onChange={e => this.onSelectChange(e, 'procedure_type_input')}\r\n                                                // value={{ id: 'blood_group_selection', label: this.state.user_blood_group.value }}\r\n                                                value={{ id: 'procedure_type_input', value: this.state.procedure_type_input.value, label: this.state.procedure_type_input.label }}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.procedure_type_input.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-10`}>\r\n                                            <InputField\r\n                                                heading=\"Select Patient\"\r\n                                                field_type=\"select\"\r\n                                                required\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                isLoading={this.state.pateints_options_loading}\r\n                                                options={this.state.patients}\r\n                                                noOptionsMessage={(e) => \"Type to Search\"}\r\n                                                className={`Select-option`}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Search Patients\"\r\n                                                isDisabled={this.state.loading}\r\n                                                onChange={e => this.onSelectChange(e, 'patient_input')}\r\n                                                onInputChange={e => this.populate_patients(e)}\r\n                                                value={{ id: 'patient_input', value: this.state.patient_input.value, label: this.state.patient_input.label }}\r\n                                                // defaultValue={{ id: 'patient_input', value: this.state.patient_input.value, label: this.state.patient_input.label }}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.patient_input.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-md-2 d-flex align-items-end`}>\r\n                                            <Popup\r\n                                                trigger={\r\n                                                    <IconButton\r\n                                                        icon=\"icon-plus3\"\r\n                                                        size=\"lg\"\r\n                                                        className={`btn-block`}\r\n                                                        color=\"gray\"\r\n                                                        variant=\"filled\"\r\n                                                        onClick={() => console.log('call the new user modal')}\r\n                                                    />\r\n                                                }\r\n                                                flowing\r\n                                                // hoverable\r\n                                                content={\r\n                                                    <div className={`card card-body bg-dark text-white shadow ml-1 py-1 mt-4`}>\r\n                                                        Add new Patient\r\n                                                </div>\r\n                                                }\r\n                                                position='top center'\r\n                                                style={{ zIndex: 15000 }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-8`}>\r\n                                            <InputField\r\n                                                heading=\"Select doctor\"\r\n                                                field_type=\"select\"\r\n                                                required\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                options={this.state.doctors}\r\n                                                className={`Select-option`}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Search Doctor\"\r\n                                                id=\"doctor_input\"\r\n                                                isDisabled={this.state.loading}\r\n                                                onChange={e => this.onSelectChange(e, 'doctor_input')}\r\n                                                value={{ id: 'doctor_input', label: this.state.doctor_input.label, value: this.state.doctor_input.value }}\r\n                                                // defaultValue={{ id: 'doctor_input', label: this.state.doctor_input.label }}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.doctor_input.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"reference_input\"\r\n                                                heading=\"Refered by\"\r\n                                                className=\"form-control\"\r\n                                                value={this.state.reference_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Reference of a doctor\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"fee_input\"\r\n                                                heading=\"Fee\"\r\n                                                className=\"form-control\"\r\n                                                required\r\n                                                value={this.state.fee_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Enter Fee\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"discount_input\"\r\n                                                heading=\"Discount\"\r\n                                                className=\"form-control\"\r\n                                                value={this.state.discount_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Enter Discount\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <InputField\r\n                                                id=\"dr_share_input\"\r\n                                                heading=\"Dr. share (%)\"\r\n                                                className=\"form-control\"\r\n                                                min=\"0\"\r\n                                                max=\"100\"\r\n                                                type=\"number\"\r\n                                                required\r\n                                                value={this.state.dr_share_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                placeholder=\"Enter Doctor share\"\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`row`}>\r\n                                        <div className={`col-lg-8`}>\r\n                                            <InputField\r\n                                                id=\"comments_input\"\r\n                                                heading=\"Comments if any\"\r\n                                                placeholder=\"Write specific description if need to be addressed\"\r\n                                                icon_class=\"icon-home\"\r\n                                                field_type=\"text-area\"\r\n                                                value={this.state.comments_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                disabled={this.state.loading}\r\n                                                // error={this.state.comments_input.error}\r\n                                            />\r\n                                        </div>\r\n                                        <div className={`col-lg-4`}>\r\n                                            <div className={``}>\r\n                                            <InputField\r\n                                                id=\"paid_amount_input\"\r\n                                                heading=\"Paid Amount\"\r\n                                                placeholder=\"Enter amount\"\r\n                                                value={this.state.paid_amount_input.value}\r\n                                                onChange={e => this.onTextChange(e)}\r\n                                                // error={this.state.paid_amount_input.error}\r\n                                                disabled={this.state.loading}\r\n                                            />\r\n                                            </div>\r\n                                            <div className={`h4`}>\r\n                                                <span className={`font-weight-bold`}>Balance: </span>{(parseInt(this.state.paid_amount_input.value) || 0) - ((parseInt(this.state.fee_input.value) || 0) - (parseInt(this.state.discount_input.value) || 0))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-4`}>\r\n                                    <label>Specify the time of procedure</label>\r\n                                    <TimeKeeper\r\n                                        time={this.state.time_input.value}\r\n                                        onChange={(new_time) => this.setState({ time_input: { value: new_time.formatted12, error: false } })}\r\n                                        // onDoneClick={() => console.log('time set')}\r\n                                        coarseMinutes={5}\r\n                                        forceCoarseMinutes\r\n                                        switchToMinuteOnHourSelect={true}\r\n                                    />\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`modal-footer`}>\r\n                        <div className=\"mr-auto d-flex\">\r\n                            <span className=\"badge badge-light badge-striped badge-striped-left border-left-teal-400\" >\r\n                                <span className=\"h6 font-weight-bold mr-1\">Total: {(parseInt(this.state.fee_input.value) || 0) - (parseInt(this.state.discount_input.value) || 0)}</span>\r\n                            </span>\r\n                            <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                                <span className=\"h6 font-weight-bold mr-1\">Discount: {parseInt(this.state.discount_input.value) || 0}</span>\r\n                            </span>\r\n                            <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                                <span className=\"h6 font-weight-bold mr-1\">Dr. Share: {(((parseInt(this.state.fee_input.value) || 0) - (parseInt(this.state.discount_input.value) || 0)) * (parseInt(this.state.dr_share_input.value) || 0)) / 100}</span>\r\n                            </span>\r\n                        </div>\r\n                        <Button icon=\"icon-plus3\" type=\"submit\">\r\n                            {this.props.data ? `Update` : `Create`}\r\n                        </Button>\r\n                        <Button icon=\"icon-cross\" color=\"red\" type=\"button\" onClick={() => this.props.handleClose()}>\r\n                            Cancel\r\n                    </Button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        doctors: state.doctors.payload,\r\n        procedures_list: state.proceduresList.payload,\r\n    }\r\n}\r\nexport default connect(map_state_to_props)(CreateProcedure);","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport { InputField, Button } from 'components'\r\nimport { connect } from 'react-redux';\r\nimport { convert_object_array_to_string, Ucfirst } from 'utils/functions';\r\nimport { CreateNewProcedureItem } from 'services/queries';\r\nimport Notify from 'notify';\r\n\r\nclass CreateProcedureList extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            doctors: [],\r\n\r\n            name_input: { value: '', error: false },\r\n            department_input: { value: '', error: false },\r\n            description_input: { value: '', error: false },\r\n            operation_risk_input: { value: '', error: false },\r\n            operation_efficacy_input: { value: '', error: false },\r\n            operation_alternative_input: { value: '', error: false },\r\n            operation_time_input: { value: '', error: false },\r\n            operation_doctors_input: { value: [], error: false },\r\n            operation_charges_input: { value: '', error: false },\r\n\r\n        }\r\n    }\r\n\r\n    populate_doctors = (props) => {\r\n        const temp_users = []\r\n        for (let i = 0; i < props.doctors.length; ++i) {\r\n            const t_user = props.doctors[i]\r\n\r\n            temp_users.push({\r\n                id: 'doctor_selection',\r\n                value: t_user.doctor._id,\r\n                label: `Dr. ${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${convert_object_array_to_string(t_user.details.specialities, 'description')}`\r\n            })\r\n            if (i === props.doctors.length - 1) {\r\n                this.setState({ doctors: temp_users });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        // console.log('cwrp', new_props)\r\n        this.populate_doctors(new_props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.doctors) {\r\n            this.populate_doctors(this.props);\r\n        }\r\n    }\r\n\r\n    onTextChange = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } });\r\n    }\r\n\r\n    onDoctorsSelectChange = (e) => {\r\n        console.log('select', e)\r\n        this.setState({ operation_doctors_input: { value: e, error: false } })\r\n    }\r\n\r\n    onCreateProcedureList = (e) => {\r\n        e.preventDefault();\r\n        console.log('state', this.state)\r\n        /**\r\n         *  -department_input: {value: \"hahahah\", error: false}\r\n            -description_input: {value: \"hahahaha\", error: false}\r\n            doctors: (8) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]\r\n            loading: false\r\n            -name_input: {value: \"hahaha\", error: false}\r\n            -operation_alternative_input: {value: \"none\", error: false}\r\n            -operation_charges_input: {value: \"123\", error: false}\r\n            -operation_doctors_input:\r\n                error: false\r\n                value: Array(2)\r\n                    0: {id: \"doctor_selection\", value: \"6005efaeec7d8958bdac3b58\", label: \"Dr. Ashvin Patel | \"}\r\n                    1: {id: \"doctor_selection\", value: \"6005e6c0ec7d8958bdac3b3b\", label: \"Dr. Farrukh Shahid | \"}\r\n                length: 2\r\n                __proto__: Array(0)\r\n                __proto__: Object\r\n            -operation_efficacy_input: {value: \"none\", error: false}\r\n            -operation_risk_input: {value: \"none\", error: false}\r\n            -operation_time_input: {value: \"56\", error: false}\r\n         */\r\n        try {\r\n            const payload = {\r\n                name: this.state.name_input.value.trim(),\r\n                department: this.state.department_input.value.trim(),\r\n                description: this.state.description_input.value.trim(),\r\n                operation_alternative: this.state.operation_alternative_input.value.trim(),\r\n                operation_charges: this.state.operation_charges_input.value.trim(),\r\n                operation_doctors: this.state.operation_doctors_input.value.map(item => item.value),\r\n                operation_efficacy: this.state.operation_efficacy_input.value.trim(),\r\n                operation_risk: this.state.operation_risk_input.value.trim(),\r\n                operation_time: parseInt(this.state.operation_time_input.value.trim())\r\n            }\r\n            console.log('payload', payload);\r\n            CreateNewProcedureItem(payload).then(_res => {\r\n                console.log('response', _res.data)\r\n                Notify('success', '', _res.data.message);\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                Notify('error', '', err.toString());\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log('error', err);\r\n            Notify('error', '', err.toString());\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Modal visible={this.props.visibility} dialogClassName=\"modal-lg\" onClickBackdrop={() => this.props.handleClose()}>\r\n                <form method=\"post\" onSubmit={this.onCreateProcedureList}>\r\n                    <div className={`modal-header bg-teal-400`}>\r\n                        <h5>Add New Procedure To List</h5>\r\n                    </div>\r\n                    <div className={`modal-body`}>\r\n                        <div className={`container-fluid`}>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-6`}>\r\n                                    <InputField\r\n                                        id=\"name_input\"\r\n                                        heading=\"Procedure name\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.name_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter name of the procedure\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={`col-lg-6`}>\r\n                                    <InputField\r\n                                        id=\"department_input\"\r\n                                        heading=\"Department Name\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.department_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter name of the department\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"description_input\"\r\n                                        heading=\"Description\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.description_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter description of procedure\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-3`}>\r\n                                    <InputField\r\n                                        id=\"operation_charges_input\"\r\n                                        heading=\"Fee\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_charges_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter default fee\"\r\n                                        helper=\"Only for default value\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={`col-lg-3`}>\r\n                                    <InputField\r\n                                        id=\"operation_time_input\"\r\n                                        heading=\"Operation time (minutes)\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_time_input.value}\r\n                                        helper=\"Number of minutes\"\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter Time of operation in minutes\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                                <div className={`col-lg-6`}>\r\n                                    <InputField\r\n                                        heading=\"Select doctor\"\r\n                                        field_type=\"select\"\r\n                                        required\r\n                                        isClearable\r\n                                        closeMenuOnSelect={false}\r\n                                        menuPlacement=\"auto\"\r\n                                        options={this.state.doctors}\r\n                                        className={`Select-option`}\r\n                                        classNamePrefix={`form-control`}\r\n                                        placeholder=\"Select doctors for this procedure\"\r\n                                        id=\"doctor_input\"\r\n                                        isMulti\r\n                                        isDisabled={this.state.loading}\r\n                                        onChange={_doctors => this.setState({ operation_doctors_input: { value: _doctors, error: false } })}\r\n                                        // value={{ id: 'blood_group_selection', label: this.state.user_blood_group.value }}\r\n                                        // defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\r\n                                        styles={{\r\n                                            container: base => ({\r\n                                                ...base,\r\n                                                backgroundColor: this.state.operation_doctors_input.error ? '#FF0000' : '',\r\n                                                padding: 1,\r\n                                                borderRadius: 5\r\n                                            }),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"operation_risk_input\"\r\n                                        heading=\"Operation Risk\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_risk_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter the risk involved in the procedure (none if not)\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"operation_efficacy_input\"\r\n                                        heading=\"Efficacy\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_efficacy_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter the effictiveness of the procedure\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={`row`}>\r\n                                <div className={`col-lg-12`}>\r\n                                    <InputField\r\n                                        id=\"operation_alternative_input\"\r\n                                        heading=\"Alternative\"\r\n                                        className=\"form-control\"\r\n                                        required\r\n                                        value={this.state.operation_alternative_input.value}\r\n                                        onChange={e => this.onTextChange(e)}\r\n                                        placeholder=\"Enter the alternative of this procedure (none if not)\"\r\n                                        disabled={this.state.loading}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={`modal-footer`}>\r\n                        <Button icon=\"icon-plus3\" type=\"submit\">\r\n                            Create\r\n                        </Button>\r\n                        <Button icon=\"icon-cross\" color=\"red\" onClick={() => this.props.handleClose()}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        doctors: state.doctors.payload\r\n    }\r\n}\r\nexport default connect(map_state_to_props)(CreateProcedureList);","import React from 'react'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\n\r\nfunction TodaysPatientRowLoading(props) {\r\n    return (\r\n        <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n            <div className={`container-fluid mt-2 bg-light`} >\r\n                {/* {this.props.reference} */}\r\n                <div className={`row`}>\r\n                    {/* Patient name and phone number */}\r\n                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 `}>\r\n                        <Skeleton className=\"my-1\" count={1} height={120}/>\r\n                    </div>\r\n                    {/* Appointment Time column */}\r\n                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0`} >\r\n                        <Skeleton className=\"my-1\" count={1} height={120} />\r\n                    </div>\r\n                    {/* appointment details */}\r\n                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                        {/* Appointment date and time */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 font-weight-bold h6\">\r\n                                <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                <span className=\"text-muted float-lg-right float-md-right float-left\">\r\n                                    <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Reason */}\r\n                        <div className={`row`}>\r\n                            <div className={`col-12 h6`}>\r\n                                <span className=\"font-weight-bold\">\r\n                                    <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                </span>\r\n                                <span className={`float-right`}>\r\n                                    <Skeleton className=\"my-1\" count={1} height={15} />\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Actions */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <Skeleton className=\"my-1\" count={1} height={35}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SkeletonTheme>\r\n    )\r\n}\r\nexport default TodaysPatientRowLoading;","import { IconButton } from 'components'\r\nimport React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Select, { components } from 'react-select'\r\nimport { Popup } from 'semantic-ui-react';\r\nimport { PATIENT_VISIT_STATUSES } from 'utils/constant_data';\r\nimport { convert_object_array_to_string, Ucfirst } from 'utils/functions';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment'\r\nimport CreateProcedure from './create-procedure';\r\nimport CreateProcedureList from './create-procedure-list';\r\nimport { GetProcedures } from 'services/queries';\r\nimport { Link } from 'react-router-dom';\r\nimport TodaysPatientRowLoading from '../todays_patient/todays_patient_row_loading';\r\n\r\nconst Menu = props => {\r\n    return (\r\n        <components.Menu {...props} >\r\n            <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\r\n                {props.children}\r\n            </div>\r\n        </components.Menu>\r\n    );\r\n};\r\n\r\nclass Procedures extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            doctors: [],\r\n            patients: [],\r\n            search_date: { value: moment(new Date()).format('ll') },\r\n            create_procedure_modal_visibility: { visibility: false, data: null, type: 0 },//0 for create, 1 for update\r\n            create_procedure_list_modal_visibility: { visibility: false, data: null, type: 0 },//0 for create, 1 for update\r\n            procedures: [],\r\n            procedures_copy: [],\r\n            loading: true,\r\n\r\n            doctors_input: { value: '', label: '', error: false },\r\n            patients_input: { value: '', label: '', error: false },\r\n            status_selection: { value: '', label: '', error: false },\r\n        }\r\n    }\r\n\r\n    populate_doctors = (props) => {\r\n        const temp_users = []\r\n        for (let i = 0; i < props.doctors.length; ++i) {\r\n            const t_user = props.doctors[i]\r\n\r\n            temp_users.push({\r\n                id: `doctor_selection`,\r\n                value: t_user.doctor._id,\r\n                label: `Dr. ${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${convert_object_array_to_string(t_user.details.specialities, 'description')}`\r\n            })\r\n            if (i === props.doctors.length - 1) {\r\n                this.setState({ doctors: temp_users });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        this.populate_doctors(new_props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.doctors) {\r\n            this.populate_doctors(this.props);\r\n        }\r\n        if (localStorage.getItem('Gh65$p3a008#3B')){\r\n            this.setState({ search_date: { value: localStorage.getItem('Gh65$p3a008#3B') } }, () => this.load_procedures())\r\n        }\r\n        else {\r\n            this.load_procedures()\r\n        }\r\n    }\r\n\r\n    load_procedures = () => {\r\n        !this.state.loading && this.setState({ loading: true })\r\n        GetProcedures(this.state.search_date.value).then(_procedures => {\r\n            console.log('procedures', _procedures.data)\r\n            this.setState({ procedures: _procedures.data.payload, loading: false })\r\n        }).catch(err => console.log('error', err))\r\n    }\r\n\r\n    todays_date_change = (e) => {\r\n        if (e === '') {\r\n            this.setState({ search_date: { value: '' } })\r\n        }\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n                localStorage.setItem('Gh65$p3a008#3B', configured_date)\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ search_date: { value: configured_date } }, () => this.load_procedures())\r\n            }\r\n        }\r\n    }\r\n\r\n    filter_records = () => {\r\n        // this.state.procedures.find(item => item.)\r\n        return this.state.procedures.filter(item => \r\n            (this.state.doctors_input.value === \"\" ? true : item.doctor_id === this.state.doctors_input.value) &&\r\n            (this.state.patients_input.value === \"\" ? true : item.patient_id === this.state.patients_input.value) &&\r\n            (this.state.status_selection.label === \"\" ? true : item.procedure_status === this.state.status_selection.label))\r\n    }\r\n\r\n    onSelectChange = (e, id) => {\r\n        console.log('e', e, id)\r\n        this.setState({ [id]: { value: e ? e.value : '', label: e ? e.label : '', error: false } });\r\n    }\r\n\r\n\r\n    render() {\r\n        // console.log('doctors', this.props.doctors, 'state', this.state.doctors)\r\n        const records = this.filter_records();\r\n        return (\r\n            <Fragment>\r\n                <div className={`container-fluid`}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-10\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"font-weight-semibold\">Doctors</label>\r\n                                        <Select\r\n                                            isClearable\r\n                                            components={{ Menu }}\r\n                                            menuPlacement=\"auto\"\r\n                                            options={this.state.doctors}\r\n                                            classNamePrefix={`form-control`}\r\n                                            placeholder=\"Search Doctor\"\r\n                                            onChange={e => this.onSelectChange(e, \"doctors_input\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"font-weight-semibold\">Patients</label>\r\n                                        <Select\r\n                                            id=\"patient_selection\"\r\n                                            isClearable\r\n                                            components={{ Menu }}\r\n                                            menuPlacement=\"auto\"\r\n                                            options={[]}\r\n                                            classNamePrefix={`form-control`}\r\n                                            placeholder=\"Search Patient\"\r\n                                        // onInputChange={e => this.populate_patient(e)}\r\n                                            onChange={e => this.onSelectChange(e, \"patients_input\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={`col-md-4`}>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label className=\"font-weight-semibold\">Status</label>\r\n                                        <Select\r\n                                            isClearable\r\n                                            options={PATIENT_VISIT_STATUSES}\r\n                                            placeholder=\"Status\"\r\n                                            onChange={e => this.onSelectChange(e, \"status_selection\")}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-2 d-flex justify-content-center align-items-end mb-2 pb-2\">\r\n\r\n                            <Popup\r\n                                trigger={\r\n                                    <IconButton\r\n                                        icon=\"icon-filter4\"\r\n                                        variant=\"filled\"\r\n                                        color=\"black\"\r\n                                        size=\"lg\"\r\n                                        className={`mx-1`}\r\n                                    // onClick={this.set_filters}\r\n                                    />\r\n                                }\r\n                                content={\r\n                                    <div className={`card card-body bg-dark text-white shadow mb-1 py-1`}>\r\n                                        Filter records\r\n                                    </div>\r\n                                }\r\n                                flowing\r\n                                // hoverable\r\n                                position='top center'\r\n                            />\r\n\r\n                            <Popup\r\n                                trigger={\r\n                                    <IconButton\r\n                                        icon=\"icon-add-to-list\"\r\n                                        variant=\"filled\"\r\n                                        size=\"lg\"\r\n                                        className={`mx-1`}\r\n                                        onClick={() => this.setState({ create_procedure_list_modal_visibility: { visibility: true, data: null, type: 0 } })}\r\n                                    />\r\n                                }\r\n                                content={\r\n                                    <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                        New Procedure Item\r\n                                    </div>\r\n                                }\r\n                                flowing\r\n                                // hoverable\r\n                                position='top center'\r\n                            />\r\n\r\n                            <Popup\r\n                                trigger={\r\n                                    <IconButton\r\n                                        icon=\"icon-plus3\"\r\n                                        variant=\"filled\"\r\n                                        size=\"lg\"\r\n                                        className={`mx-1`}\r\n                                        onClick={() => this.setState({ create_procedure_modal_visibility: { visibility: true, data: null, type: 0 } })}\r\n                                    />\r\n                                }\r\n                                content={\r\n                                    <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\r\n                                        New Procedure\r\n                                </div>\r\n                                }\r\n                                flowing\r\n                                // hoverable\r\n                                position='top center'\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"table-header-background shadow-sw\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 col-md-6 col-12 d-flex align-items-center\">\r\n                                <span className=\"text-white\">Procedure list for date</span>\r\n                                <span className=\"badge badge-secondary ml-2 d-none d-lg-block\">\r\n                                    {this.state.search_date.value}\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-lg-3 d-none d-lg-block col-0\"></div>\r\n                            <div className=\"col-lg-3 col-md-6 col-12 d-flex\">\r\n                                <DateTimePicker id=\"dob_text_input\"\r\n                                    onChange={this.todays_date_change}\r\n                                    className=\"clock_datatime_picker \"\r\n                                    inputProps={{\r\n                                        placeholder: 'Select Date',\r\n                                        width: '100%',\r\n                                        className: `form-control bg-teal-400 border-teal-400`\r\n                                    }}\r\n                                    input={true}\r\n                                    dateFormat={'ll'}\r\n                                    timeFormat={false}\r\n                                    closeOnSelect={true}\r\n                                    value={this.state.search_date.value}\r\n\r\n                                    onClick={() => console.log('date select', this.state.search_date.value)}\r\n                                />\r\n                                <button className=\"btn bg-teal-400 border-teal-400 text-teal-400 btn-sm ml-2\" onClick={() => {\r\n                                    // this.props.clear_todays_appointments()\r\n                                    // this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\r\n                                }}>\r\n                                    <i className=\"icon-search4\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={`table-responsive mt-2 card mb-0 pb-0`}>\r\n                        <table className={`table table-hover mb-0`}>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.loading ?\r\n                                        <div className={``}>\r\n                                            <div className={``}><TodaysPatientRowLoading /></div>\r\n                                            <div className={``}><TodaysPatientRowLoading /></div>\r\n                                        </div> :\r\n                                        records.length === 0 ?\r\n                                            <div className=\"alert alert-info mb-0\">\r\n                                                <strong>Info!</strong> No Procedures found.\r\n                                            </div> :\r\n                                            records.map((item, i) => {\r\n                                                return (\r\n                                                    <tr key={i}>\r\n                                                        <td>\r\n                                                            <div className={`container-fluid`} >\r\n                                                                <div className={`row`}>\r\n                                                                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-left-teal-400 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                                                                        <div className={`btn btn-outline bg-teal-400 text-teal-400 btn-block jackInTheBox animated`}>\r\n                                                                            <span className={`rounded-circle text-white bg-teal-400 h3 p-2`}>{item.patient.first_name.charAt(0).toUpperCase()}{item.patient.last_name.charAt(0).toUpperCase()}</span>\r\n                                                                            <h4 className={`mt-2`}>{Ucfirst(item.patient.first_name)} {Ucfirst(item.patient.last_name)}</h4>\r\n                                                                            <span><i className=\"icon-phone-wave mr-1\"></i> {item.patient.phone_number}</span>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-bottom-sm-2 border-left-teal-400 border-right-teal-400 border-right-2 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                                                                        <div className={`h-100 d-flex flex-column justify-content-center jackInTheBox animated text-teal-400 btn-block text-center`}>\r\n                                                                            <h1>{moment(item.time_stamp.operate, \"YYYY-MM-DDThh:mm:ss\").format('hh:mm a')}</h1>\r\n                                                                            <p>{moment(item.time_stamp.operate).fromNow()}</p>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                                                                        <div className={`font-weight-bold`}>{item.procedure_type.name.toUpperCase()} | {item.procedure_type.department.toUpperCase()}</div>\r\n                                                                        <div className={``}>\r\n                                                                            {item.appointment_id ? <Link className={`text-teal-400`}>Appointment </Link> : 'Appointment '}\r\n                                                                                with<Link className=\"text-teal-400 font-weight-bold ml-1\" to={\"#\"}>\r\n                                                                                Dr. {Ucfirst(item.doctor.first_name)} {Ucfirst(item.doctor.last_name)}\r\n                                                                                <i className=\"icon-user-tie ml-1\"></i>\r\n                                                                            </Link>\r\n                                                                            <span className={`badge badge-${'waiting' === 'checked out' ? 'primary' : 'danger'} float-right`}>\r\n                                                                                {item.procedure_status}\r\n                                                                            </span>\r\n                                                                        </div>\r\n                                                                        <div className={`row`}>\r\n                                                                            <div className={`col-lg-12`}>\r\n                                                                                <span className={`font-weight-bold`}>Report Time: </span>{moment(item.time_stamp.report).format('LLL')}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className={`row`}>\r\n                                                                            <div className={`col-lg-12`}>\r\n                                                                                <span className={`font-weight-bold`}>Fee:</span> Rs {item.fee}/-  <span className={`font-weight-bold`}>Discount:</span> Rs {item.discount || 0}/- {item.discount_purpose && item.discount_purpose !== \"\" ? `(${item.discount_purpose})` : '(standard)'}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div className={`row`}>\r\n                                                                            <div className={`col-lg-12`}>\r\n                                                                                <IconButton\r\n                                                                                    icon=\"icon-pencil\"\r\n                                                                                    color=\"default\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    onClick={() => this.setState({\r\n                                                                                        create_procedure_modal_visibility: {\r\n                                                                                            visibility: true,\r\n                                                                                            data: item,\r\n                                                                                            type: 1\r\n                                                                                        }\r\n                                                                                    })}\r\n                                                                                    />\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.create_procedure_modal_visibility.visibility &&\r\n                    <CreateProcedure\r\n                        visibility={this.state.create_procedure_modal_visibility.visibility}\r\n                        handleClose={(load_procedures) => {\r\n                                this.setState({ create_procedure_modal_visibility: { visibility: false, data: null, type: 0 } })\r\n                                if (load_procedures) this.load_procedures();\r\n                            }\r\n                        }\r\n                        data={this.state.create_procedure_modal_visibility.data}\r\n                    />\r\n                }\r\n                {\r\n                    this.state.create_procedure_list_modal_visibility.visibility &&\r\n                    <CreateProcedureList\r\n                        visibility={this.state.create_procedure_list_modal_visibility.visibility}\r\n                        handleClose={() => this.setState({ create_procedure_list_modal_visibility: { visibility: false, data: null, type: 0 } })}\r\n                    />\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        doctors: state.doctors.payload,\r\n    }\r\n}\r\nexport default connect(map_state_to_props)(Procedures);","import React, { Component } from 'react';\r\nimport Loading from 'components/loading';\r\nimport { ProcedureCreate, ProcedureDelete, ProcedureUpdate } from 'services/queries';\r\nimport notify from 'notify'\r\n\r\nclass ProcedureItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            description_text_input: { value: this.props.data.procedure_description, error: false },\r\n            charges_text_input: { value: this.props.data.procedure_fee, error: false },\r\n            discount_text_input: { value: this.props.data.procedure_discount, error: false },\r\n            dr_share_text_input: { value: this.props.data.procedure_dr_share, error: false },\r\n\r\n            prev_description: this.props.data.procedure_description,\r\n            prev_fee: this.props.data.procedure_fee,\r\n            prev_discount: this.props.data.procedure_discount,\r\n            prev_dr_share: this.props.data.procedure_dr_share,\r\n\r\n            edited: false,\r\n            save_click_loading: false,\r\n        }\r\n    }\r\n\r\n    handle_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => {\r\n            if (this.state.description_text_input.value !== this.state.prev_description ||\r\n                parseInt(this.state.charges_text_input.value) !== this.state.prev_fee ||\r\n                parseInt(this.state.discount_text_input.value) !== this.state.prev_discount ||\r\n                parseInt(this.state.dr_share_text_input.value) !== this.state.prev_dr_share) {\r\n                /**\r\n                 * If data loaded is edited\r\n                 */\r\n                this.setState({ edited: true })\r\n            }\r\n            else {\r\n                this.setState({ edited: false })\r\n            }\r\n        })\r\n    }\r\n\r\n    on_save_click = () => {\r\n        /**\r\n         * create request for procedures\r\n         * fee\r\n         * discount\r\n         * description\r\n         */\r\n        this.setState({ save_click_loading: true })\r\n        if (this.props.data.type === 'new') {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id,\r\n                // doctor_id: \r\n                fee: parseInt(this.state.charges_text_input.value),\r\n                discount: parseInt(this.state.discount_text_input.value),\r\n                dr_share: parseInt(this.state.dr_share_text_input.value),\r\n                description: this.state.description_text_input.value,                \r\n            }\r\n            // console.log('payload', payload)\r\n            // return ;\r\n            ProcedureCreate(payload).then(res => {\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('success', '', res.data.message)\r\n                this.props.save_opp(this.props.index, {\r\n                    id: res.data.payload._id, // this.props.data.id,\r\n                    fee: res.data.payload.fee, // parseInt(this.state.charges_text_input.value), \r\n                    discount: res.data.payload.discount, // parseInt(this.state.discount_text_input.value),\r\n                    dr_share: res.data.payload.dr_share, // parseInt(this.state.dr_share_text_input.value),\r\n                    description: res.data.payload.description, // this.state.description_text_input.value \r\n                })\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('error', '', 'Network error')\r\n            })\r\n        }\r\n        else if (this.props.data.type === 'previous') {\r\n            const payload = {\r\n                appointment_id: this.props.appointment_id,\r\n                procedure_id: this.props.data.id,\r\n                fee: parseInt(this.state.charges_text_input.value),\r\n                discount: parseInt(this.state.discount_text_input.value),\r\n                dr_share: parseInt(this.state.dr_share_text_input.value),\r\n                description: this.state.description_text_input.value\r\n            }\r\n            ProcedureUpdate(payload).then(res => {\r\n                console.log('success');\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('success', '', res.data.message)\r\n                this.props.save_opp(this.props.index, {\r\n                    id: this.props.data.id,\r\n                    fee: parseInt(this.state.charges_text_input.value),\r\n                    discount: parseInt(this.state.discount_text_input.value),\r\n                    dr_share: parseInt(this.state.dr_share_text_input.value),\r\n                    description: this.state.description_text_input.value\r\n                })\r\n\r\n                // console.log('error');\r\n                // this.setState({ save_click_loading: false, edited: false })\r\n                // notify('error', '', res.data.message)\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('error', '', 'Network error')\r\n            })\r\n        }\r\n    }\r\n\r\n    on_delete_click = () => {\r\n        /**\r\n         * delete request for procedures\r\n         * appointment id\r\n         * procedure id\r\n         */\r\n        if (this.props.data.type !== 'new') {\r\n            this.props.delete_opp(this.props.index)\r\n            ProcedureDelete(this.props.data.id).then(res => {\r\n                this.setState({ save_click_loading: false, edited: false });\r\n                notify('success', '', res.data.message);\r\n            }).catch(err => {\r\n                console.log('error', err)\r\n                this.setState({ save_click_loading: false, edited: false })\r\n                notify('error', '', 'Network error' + err.toString())\r\n            })\r\n        }\r\n        else {\r\n            this.props.delete_opp(-1)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('procedure item props', this.props)\r\n        const save_button_classes = `btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon mx-1 ${this.state.save_click_loading ? 'p-0' : ''}`;\r\n        const update_button_classes = `btn btn-outline-dark btn-sm secondary btn-icon mx-1 ${this.state.save_click_loading ? 'p-0' : ''}`;\r\n        const delete_button_classes = `btn btn-outline btn-sm bg-danger border-danger text-danger secondary btn-icon`;\r\n        return (\r\n            <tr>\r\n                <td className=\"p-0\" style={{ width: '50%' }}>\r\n                    <input\r\n                        id={`description_text_input`}\r\n                        placeholder=\"Enter Reason\"\r\n                        disabled={this.state.save_click_loading}\r\n                        input_type={'text'}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.description_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.description_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"p-0\" style={{ width: '10%' }}>\r\n                    <input\r\n                        id={`charges_text_input`}\r\n                        placeholder=\"Charges\"\r\n                        input_type={'text'}\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.charges_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.charges_text_input.error}`\r\n                    />\r\n                </td>\r\n                <td className=\"p-0\" style={{ width: '10%' }}>\r\n                    <input\r\n                        id={`discount_text_input`}\r\n                        placeholder=\"Discount\"\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.discount_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.discount_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"p-0\" style={{ width: '10%' }}>\r\n                    <input\r\n                        id={`dr_share_text_input`}\r\n                        placeholder=\"Dr Share %\"\r\n                        disabled={this.state.save_click_loading}\r\n                        className=\"form-control form-control-lg\"\r\n                        onChange={e => this.handle_change(e)}\r\n                        defaultValue={this.state.dr_share_text_input.value}\r\n                        style={{ border: 0 }}\r\n                    // error={this.state.discount_text_input.error}\r\n                    />\r\n                </td>\r\n                <td className=\"d-flex align-items-end justify-content-center border-0\" style={{ padding: '3px' }}>\r\n                    <button className={delete_button_classes}\r\n                        onClick={this.on_delete_click}>\r\n                        <i className=\"icon-cross\" onClick={this.on_delete_click} />\r\n                    </button>\r\n                    {this.state.edited ?\r\n                        <button className={this.props.data.type === 'new' ? save_button_classes : update_button_classes}\r\n                            onClick={this.on_save_click}>\r\n                            {this.state.save_click_loading ? <Loading size=\"30\" /> : <i className=\"icon-floppy-disk\" />}\r\n                        </button> : ''}\r\n                </td>\r\n            </tr>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default ProcedureItem","import React from 'react'\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\n\r\n\r\n\r\nfunction ProcedureLoading(props) {\r\n    return (\r\n        <div>\r\n            <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n                <div className={`row`}>\r\n                    <div className={`col-lg-4`}>\r\n                        <Skeleton className=\"my-2\" count={3} height={40} />\r\n                    </div>\r\n                    <div className={`col-lg-4`}>\r\n                        <Skeleton className=\"my-2\" count={3} height={40} />\r\n                    </div>\r\n                    <div className={`col-lg-4`}>\r\n                        <Skeleton className=\"my-2\" count={3} height={40} />\r\n                    </div>\r\n                </div>\r\n            </SkeletonTheme>\r\n        </div>\r\n    )\r\n}\r\nexport default ProcedureLoading;","import React, { Component, Fragment } from 'react';\r\nimport ProcedureItem from './procedure_item';\r\nimport Modal from \"react-bootstrap4-modal\";\r\nimport { connect } from 'react-redux';\r\nimport { update_appointment, load_todays_appointments, clear_todays_appointments } from '../../../../redux/actions';\r\nimport ReactToPrint from 'react-to-print';\r\nimport LOGO from '../../../../resources/images/LOGO.png';\r\nimport { get_utc_date, Ucfirst } from '../../../../utils/functions';\r\nimport moment from 'moment';\r\nimport Inputfield from '../../../../components/inputfield';\r\nimport ProcedureLoading from './procedure_loading';\r\nimport { AppointmentCharges, AppointmentCheckout, AppointmentSearchById, AppointmentUpdateCharges, ProcedureCreate, ProcedureSearchByAppointmentId, ProcedureUpdate } from '../../../../services/queries';\r\nimport _ from 'lodash';\r\nimport notify from 'notify'\r\n\r\nclass ProcedureModal extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            consultancy_fee_text_input: { value: \"\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n            paid_amount_copy: 0,\r\n            total: 0,\r\n            discount: 0,\r\n            minimum_payable: 0,\r\n            procedures_list: [],\r\n            procedures_list_copy: [],\r\n            user_data: null,\r\n            loading_status: true,\r\n            edited_items: [],\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.add_procedure({\r\n        //     procedure_fee: 0,\r\n        //     procedure_discount: 0,\r\n        //     procedure_description: '',\r\n        //     type: 'new'\r\n        // })s\r\n        this.handle_total_values();\r\n    }\r\n\r\n\r\n\r\n    save_procedure = (key, data) => {\r\n        const temp = this.state.procedures_list;\r\n        temp[key].type = 'previous';\r\n        temp[key].procedure_fee = data.fee;\r\n        temp[key].procedure_discount = data.discount;\r\n        temp[key].procedure_dr_share = data.dr_share;\r\n        temp[key].procedure_description = data.description;\r\n        temp[key].id = data.id\r\n        this.setState({ procedures_list: temp }, () => this.handle_total_values());\r\n    }\r\n\r\n    delete_procedure = (key) => {\r\n        const temp = this.state.procedures_list;\r\n        if (key === -1)\r\n            temp.pop();\r\n        else {\r\n            temp.splice(key, 1);\r\n        }\r\n        this.setState({ procedures_list: [] }, () => {\r\n            this.setState({ procedures_list: temp }, () => this.handle_total_values())\r\n        })\r\n    }\r\n\r\n    // add_procedure_click = () => {\r\n    //     if ((this.state.procedures_list.filter((data) => { return data.type === 'new' })).length === 0) {\r\n    //         this.add_procedure({\r\n    //             id: null,//Math.max.apply(Math, this.state.procedures_list.map(function(obj) { return obj.id })),\r\n    //             procedure_fee: 0,\r\n    //             procedure_discount: 0,\r\n    //             procedure_dr_share: 0,\r\n    //             procedure_description: '',\r\n    //             type: 'new',\r\n    //         })\r\n\r\n    //     }\r\n    //     else {\r\n    //         notify('info', '', 'There is an unsaved procedure. Please save it first')\r\n    //     }\r\n    // }\r\n\r\n    mount = (appointment_id) => {\r\n        ProcedureSearchByAppointmentId(appointment_id)\r\n            .then(res => {\r\n                this.setState({ procedures_list: res.data.payload, procedures_list_copy: _.cloneDeep(res.data.payload) });\r\n\r\n                AppointmentCharges(appointment_id)\r\n                    .then(res => {\r\n                        const amount = res.data.payload.paid_for_procedures === 0 ?\r\n                            \"\" :\r\n                            res.data.payload.paid_for_procedures.toString();\r\n                        this.setState({\r\n                            loading_status: false,\r\n                            paid_text_input: { value: amount, error: false },\r\n                            paid_amount_copy: amount\r\n                        }, () => this.handle_total_values())\r\n                        /**\r\n                         * Fetch appointment by id, we need patient data here\r\n                         */\r\n                        AppointmentSearchById(appointment_id)\r\n                            .then(res => this.setState({ user_data: res.data.payload, loading_status: false }))\r\n                            .catch(err => {\r\n                                notify('error', '', err.toString())\r\n                                this.setState({ loading_status: false })\r\n                            })\r\n                    }).catch(err => {\r\n                        notify('error', '', err.toString())\r\n                        this.setState({ loading_status: false })\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ procedures_list: [], loading_status: false })\r\n                if (err.response) {\r\n                    if (err.response.status === 401) {\r\n                        notify('error', '', 'Session timeout! Please Signin again');\r\n                    }\r\n                    else {\r\n                        notify('error', '', 'Server is not responding! Please try again later');\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        if (new_props.visibility && new_props.appointment_id !== null) {\r\n            this.mount(new_props.appointment_id);\r\n        }\r\n        else if (new_props.visibility && new_props.appointment_id === null) {\r\n            notify('error', '', 'Something went wrong! Please try again later');\r\n        }\r\n\r\n    }\r\n\r\n    handle_change = (e) => {\r\n        const that = this;\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => {\r\n            that.handle_total_values()\r\n        })\r\n    }\r\n\r\n    // handle_total_values = () => {\r\n    //     let procedure_total = 0;\r\n    //     let procedure_discount = 0;\r\n    //     for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n    //         procedure_total += this.state.procedures_list[i].procedure_fee;\r\n    //         procedure_discount += this.state.procedures_list[i].procedure_discount;\r\n    //     }\r\n\r\n    //     const t_total = this.state.consultancy_fee_text_input.value.length > 0 ?\r\n    //         parseInt(this.state.consultancy_fee_text_input.value) : 0;\r\n    //     const t_discount = this.state.discount_text_input.value.length > 0 ?\r\n    //         parseFloat(this.state.discount_text_input.value) : 0;\r\n    //     const t_followup = this.state.follow_up_text_input.value.length > 0 ?\r\n    //         parseFloat(this.state.follow_up_text_input.value) : 0;\r\n\r\n    //     this.setState({\r\n    //         total: ((t_total + t_followup) - t_discount) + (procedure_total - procedure_discount),\r\n    //         minimum_payable: (t_total - t_discount) + (procedure_total - procedure_discount),\r\n    //         discount: t_discount + procedure_discount\r\n    //     })\r\n    // }\r\n\r\n    show_procedures = () => {\r\n        return this.state.procedures_list.map((item, index) => {\r\n            console.log('item', item);\r\n            return <ProcedureItem\r\n                key={index}\r\n                appointment_id={this.props.appointment_id}\r\n                data={item}\r\n                index={index}\r\n                save_opp={this.save_procedure}\r\n                delete_opp={this.delete_procedure} />\r\n        })\r\n    }\r\n\r\n    handle_close_modal = () => {\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if (this.state.procedures_list[i]._id === null) {\r\n                notify('info', '', 'There are unsaved procedures. Either delete them or save them.')\r\n                return;\r\n            }\r\n        }\r\n        this.setState({\r\n            procedures_list: [],\r\n            consultancy_fee_text_input: { value: \"\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n            total: 0,\r\n            discount: 0\r\n        })\r\n        this.props.cancelProcedureModal()\r\n    }\r\n\r\n\r\n    handle_checkout_button_click = () => {\r\n        const paid = parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value)\r\n        if (paid < this.state.minimum_payable) {\r\n            notify('error', '', 'Payment is less that minimum payable amount.')\r\n            return;\r\n        }\r\n        else {\r\n            const that = this;\r\n            AppointmentCheckout(this.props.appointment_id).then(res => {\r\n                notify('info', '', res.data.message)\r\n                this.props.clear_todays_appointments();\r\n                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                setTimeout(() => {\r\n                    this.handle_close_modal();\r\n                }, 1000)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    that.props.notify('error', '', err.toString());\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.last_element.scrollIntoView({ behavior: \"smooth\" });\r\n    };\r\n\r\n    calculate_balance = () => {\r\n        if (this.state.paid_text_input.value.length > 0) {\r\n            return -1 * (this.state.total - parseInt(this.state.paid_text_input.value))\r\n        }\r\n        else {\r\n            return 0\r\n        }\r\n    }\r\n\r\n    /**\r\n     * ***********************************************************************************************************\r\n     * \r\n     * ***********************************************************************************************************\r\n     * \r\n     * ***********************************************************************************************************\r\n     */\r\n\r\n    on_text_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } })\r\n    }\r\n\r\n    on_item_text_change = (e, index) => {\r\n        console.log('e', e.target.type, e.target.value)\r\n        const prev_procedure_list = this.state.procedures_list;\r\n        prev_procedure_list[index][e.target.id] = (e.target.type === 'number' ? \r\n                                                    (e.target.value === \"\" ? 0 : parseInt(e.target.value)) : \r\n                                                    e.target.value);\r\n        this.setState({ procedures_list: prev_procedure_list }, () => {\r\n            this.handle_total_values();\r\n            this.compare_changes(index);\r\n        });\r\n    }\r\n\r\n    on_item_delete_click = (e, index) => {\r\n        if (this.state.procedures_list[index]._id && this.state.procedures_list[index]._id !== \"\") {\r\n            // previous procedure delete\r\n            const prev_procedure_list = this.state.procedures_list;\r\n            prev_procedure_list[index]['is_deleted'] = !prev_procedure_list[index]['is_deleted'];\r\n            \r\n            this.setState({ \r\n                procedures_list: prev_procedure_list, \r\n                edited_items: prev_procedure_list[index]['is_deleted'] ? \r\n                    [...this.state.edited_items, index] : \r\n                    this.state.edited_items.filter(x => x !== index) \r\n                }, () => this.handle_total_values());\r\n\r\n        }\r\n        else {\r\n            // new procedure delete\r\n            const prev_procedure_list = this.state.procedures_list;\r\n            prev_procedure_list.splice(index, 1);\r\n            this.setState({ procedures_list: prev_procedure_list }, () => this.handle_total_values());\r\n        }\r\n\r\n    }\r\n\r\n    handle_total_values = () => {\r\n        let procedure_total = 0;\r\n        let procedure_discount = 0;\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if (!this.state.procedures_list[i].is_deleted && this.state.procedures_list[i].is_active) {\r\n                procedure_total += this.state.procedures_list[i].fee;\r\n                procedure_discount += this.state.procedures_list[i].discount;\r\n            }\r\n        }\r\n        this.setState({\r\n            total: procedure_total - procedure_discount,\r\n            minimum_payable: procedure_total - procedure_discount,\r\n            discount: procedure_discount\r\n        })\r\n    }\r\n\r\n    compare_changes = (index) => {\r\n        // check only the old ones\r\n        if (index < this.state.procedures_list_copy.length) {\r\n            let changes = false;\r\n            if (this.state.procedures_list_copy[index].description !== this.state.procedures_list[index].description) changes = true;\r\n            if (this.state.procedures_list_copy[index].fee !== this.state.procedures_list[index].fee) changes = true;\r\n            if (this.state.procedures_list_copy[index].discount !== this.state.procedures_list[index].discount) changes = true;\r\n            if (this.state.procedures_list_copy[index].dr_share !== this.state.procedures_list[index].dr_share) changes = true;\r\n            if (this.state.procedures_list_copy[index].is_deleted !== this.state.procedures_list[index].is_deleted) changes = true;\r\n\r\n            this.setState({\r\n                edited_items: changes ?\r\n                    (this.state.edited_items.indexOf(index) === -1 ?\r\n                        [...this.state.edited_items, index] :\r\n                        this.state.edited_items) :\r\n                    (this.state.edited_items.length === 0 ? [] :\r\n                        this.state.edited_items.filter(x => x !== index))\r\n            });\r\n        }\r\n    }\r\n\r\n    add_procedure(item) {\r\n        this.setState({ procedures_list: [...this.state.procedures_list, item] }, () => {\r\n            this.scrollToBottom()\r\n        });\r\n    };\r\n\r\n    add_procedure_click = () => {\r\n        const obj = {\r\n            _id: null,\r\n            description: \"\",\r\n            fee: 0,\r\n            discount: 0,\r\n            dr_share: 0,\r\n            is_deleted: false,\r\n            is_active: true,\r\n            doctor_id: \"\",\r\n            appointment_id: this.props.appointment_id,\r\n            time_stamp: {\r\n                created: new Date(),\r\n                operate: new Date(),\r\n                report: new Date(),\r\n                last_updated: new Date(),\r\n            }\r\n        }\r\n        this.add_procedure(obj);\r\n    }\r\n\r\n    on_save_changes_click = async () => {\r\n\r\n        let error = false;\r\n        for (let i = 0; i < this.state.procedures_list.length; ++i) {\r\n            if ((this.state.procedures_list[i].discount) > this.state.procedures_list[i].fee) {\r\n                notify('error', '', `Discount cannot be more than the charges in procedure number ${i + 1}`);\r\n                error = true;\r\n            }\r\n            else if (this.state.procedures_list[i].dr_share > 100) {\r\n                notify('error', '', 'Doctor share cannot be more than 100%');\r\n                error = true;\r\n            }\r\n        }\r\n        if (error) {\r\n            return;\r\n        }\r\n        this.setState({ loading_status: true });\r\n\r\n        let procedures_to_create = this.state.procedures_list.filter(procedure => { return procedure._id === null });\r\n        let procedures_to_update = this.state.procedures_list.filter(procedure => { return procedure._id !== null });\r\n\r\n        procedures_to_update = procedures_to_update.filter((o, i) => this.state.edited_items.indexOf(i) > -1);\r\n\r\n        if (procedures_to_create.length > 0) {\r\n            await ProcedureCreate(procedures_to_create).then(res => {\r\n                notify('success', '', res.data.message)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    notify('error', '', err.toString());\r\n                }\r\n            });\r\n        }\r\n        if (procedures_to_update.length > 0) {\r\n            await ProcedureUpdate(procedures_to_update).then(res => {\r\n                notify('success', '', res.data.message)\r\n                this.setState({ edited_items: [] });\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    notify('error', '', err.toString());\r\n                }\r\n            });\r\n        }\r\n        // this.setState({ loading_status: false });\r\n        this.mount(this.props.appointment_id);\r\n    }\r\n\r\n    on_save_payment_click = () => {\r\n\r\n        if (parseInt(this.state.paid_text_input.value) < this.state.total) {\r\n            notify('info', '', 'Paid amount is insufficient');\r\n            return;\r\n        }\r\n\r\n        const payload = {\r\n            appointment_id: this.props.appointment_id,\r\n            procedures: this.state.total,\r\n            paid_for_procedures: parseInt(this.state.paid_text_input.value),\r\n        }\r\n        AppointmentUpdateCharges(payload).then(res => {\r\n            notify('success', '', res.data.message);\r\n        }).catch(err => {\r\n            notify('error', '', 'Changes could not be saved! ' + err.toString());\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log('edited items', this.state.edited_items)\r\n        // this.handle_total_values();\r\n        console.log('procedure modal', this.state.paid_amount_copy, parseInt(this.state.paid_text_input.value));\r\n\r\n        const undo_button_classes = `btn btn-outline btn-sm bg-teal-400 btn-block text-teal-400`;\r\n        // const update_button_classes = `btn btn-outline-dark btn-sm secondary btn-icon mx-1 ${this.state.save_click_loading ? 'p-0' : ''}`;\r\n        const delete_button_classes = `btn btn-outline btn-sm bg-danger btn-block text-danger`;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal\r\n                    visible={this.props.visibility}\r\n                    onClickBackdrop={this.props.procedure_backDrop}\r\n                    fade={true}\r\n                    dialogClassName={`modal-dialog modal-lg `}\r\n                >\r\n                    <div className=\"modal-header d-flex flex-lg-row flex-column bg-teal-400\">\r\n                        <h5 className=\"modal-title\">Procedures</h5>\r\n                        <div className=\"\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn bg-dark btn-sm btn-labeled btn-labeled-right pr-5 mr-1\"\r\n                                style={{ textTransform: \"inherit\" }}\r\n                                disabled={this.state.loading_status}\r\n                                onClick={this.add_procedure_click}>\r\n                                <b><i className=\"icon-plus3\" /></b>\r\n                                New Procedure\r\n                            </button>\r\n                            <ReactToPrint\r\n                                trigger={() => <button\r\n                                    type=\"button\"\r\n                                    className=\"btn bg-secondary btn-labeled btn-labeled-right btn-sm pr-5\"\r\n                                    style={{ textTransform: \"inherit\" }}\r\n                                    disabled={this.state.loading_status}\r\n                                >\r\n                                    <b><i className=\"icon-printer2\" /></b>Print</button>}\r\n                                content={() => this.componentRef}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-body pt-1 bg-light\" style={{ height: '60vh', overflowY: 'auto', overflowX: 'hidden' }}>\r\n                        {\r\n                            this.state.loading_status ?\r\n                                <ProcedureLoading /> :\r\n                                (\r\n                                    this.state.procedures_list.length === 0 ?\r\n                                        <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\r\n                                            <strong>Info!</strong> No Procedures found.\r\n                                        </div> :\r\n                                        <div className=\"table-responsive px-1\">\r\n                                            <table className=\"table table-bordered w-100\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className={`border-0`} style={{ width: '50%' }}>Procedure reason</th>\r\n                                                        <th className={`border-0`} style={{ width: '12%' }}>Charges</th>\r\n                                                        <th className={`border-0`} style={{ width: '12%' }}>Discount</th>\r\n                                                        <th className={`border-0`} style={{ width: '12%' }}>Dr. Share</th>\r\n                                                        <th className={`border-0 text-center`} >Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        this.state.procedures_list.map((item, i) => {\r\n                                                            return (\r\n                                                                <Fragment >\r\n                                                                    <tr>\r\n                                                                        <td className={'p-0'} style={{ borderLeft: item._id? \"\":\"2px solid #26a69a\" }} colSpan=\"5\">\r\n                                                                            <div className={`d-flex flex-lg-row flex-md-column flex-column justify-content-lg-between`}>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Created: {moment(item.time_stamp.created).format(\"LLL\")}</label>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Operate: {moment(item.time_stamp.operate).format(\"LLL\")}</label>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Report: {moment(item.time_stamp.report).format(\"LLL\")}</label>\r\n                                                                                <label className={`text-muted mb-0`} style={{ fontSize: '8px' }}>Last updated: {moment(item.time_stamp.last_updated).format(\"LLL\")}</label>\r\n                                                                            </div>\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr >\r\n                                                                        <td className={'p-0'} style={{ width: '50%', borderLeft: item._id? \"\":\"2px solid #26a69a\" }}>\r\n                                                                            <input\r\n                                                                                id=\"description\"\r\n                                                                                placeholder=\"Enter Reason\"\r\n                                                                                type={'text'}\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.description}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" style={{ width: '12%' }}>\r\n                                                                            <input\r\n                                                                                id=\"fee\"\r\n                                                                                placeholder=\"Charges\"\r\n                                                                                type={'number'}\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.fee === 0 ? \"\" : item.fee}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" style={{ width: '12%' }}>\r\n                                                                            <input\r\n                                                                                id=\"discount\"\r\n                                                                                placeholder=\"Discount\"\r\n                                                                                type=\"number\"\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.discount === 0 ? \"\" : item.discount}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" style={{ width: '12%' }}>\r\n                                                                            <input\r\n                                                                                id=\"dr_share\"\r\n                                                                                placeholder=\"Dr Share %\"\r\n                                                                                type=\"number\"\r\n                                                                                disabled={item.is_deleted || this.state.loading_status}\r\n                                                                                className=\"form-control form-control-sm\"\r\n                                                                                style={{ border: 0 }}\r\n                                                                                defaultValue={item.dr_share === 0 ? \"\" : item.dr_share}\r\n                                                                                onChange={e => this.on_item_text_change(e, i)}\r\n                                                                            />\r\n                                                                        </td>\r\n                                                                        <td className=\"p-0\" >\r\n                                                                            {\r\n                                                                                item.is_deleted ?\r\n                                                                                    <button\r\n                                                                                        disabled={this.state.loading_status}\r\n                                                                                        className={undo_button_classes}\r\n                                                                                        onClick={e => this.on_item_delete_click(e, i)}>\r\n                                                                                        Undo\r\n                                                                                </button> :\r\n                                                                                    <button\r\n                                                                                        disabled={this.state.loading_status}\r\n                                                                                        className={delete_button_classes}\r\n                                                                                        onClick={e => this.on_item_delete_click(e, i)}>\r\n                                                                                        Delete\r\n                                                                                </button>\r\n                                                                            }\r\n                                                                            {/* disabled={item.is_deleted || this.state.loading_status} */}\r\n\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                </Fragment>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                )\r\n                        }\r\n\r\n\r\n                        <div style={{ float: \"left\", clear: \"both\" }}\r\n                            ref={(el) => { this.last_element = el; }}>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer d-flex flex-lg-row flex-column border border-top pt-3\">\r\n                        <div className=\"mr-auto d-flex\">\r\n                            <span className=\"badge badge-light badge-striped badge-striped-left border-left-teal-400\" >\r\n                                <span className=\"h6 font-weight-bold mr-1\">Total: {this.state.total}</span>\r\n                            </span>\r\n                            <span className=\"ml-2 badge badge-light badge-striped badge-striped-left border-left-teal-400\">\r\n                                <span className=\"h6 font-weight-bold mr-1\">Discount: {this.state.discount}</span>\r\n                            </span>\r\n                            <Inputfield\r\n                                id=\"paid_text_input\"\r\n                                // heading=\"Amount Paid\"\r\n                                icon_class=\"icon-cash3\"\r\n                                placeholder=\"Amount paid\"\r\n                                disabled={this.state.loading_status}\r\n                                value={this.state.paid_text_input.value}\r\n                                error={this.state.paid_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-dark btn-labeled btn-sm btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={\r\n                                this.state.paid_text_input.value === \"\" ||\r\n                                ((this.state.total > parseInt(this.state.paid_text_input.value)) ||\r\n                                parseInt(this.state.paid_amount_copy) === parseInt(this.state.paid_text_input.value))\r\n                            }\r\n                            onClick={this.on_save_payment_click}>\r\n                            <b><i className=\"icon-floppy-disk\" /></b>\r\n                            Save Payment\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-dark btn-labeled btn-sm btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={\r\n                                this.state.procedures_list.length === 0 ||\r\n                                (this.state.procedures_list_copy.length === this.state.procedures_list.length &&\r\n                                    this.state.edited_items.length === 0)\r\n                            }\r\n                            onClick={this.on_save_changes_click}>\r\n                            <b><i className=\"icon-floppy-disk\" /></b>\r\n                            Save Changes\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-sm btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.handle_close_modal}>\r\n                            <b><i className=\"icon-cross\" /></b>\r\n                            Cancel\r\n                        </button>\r\n                        {/* <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5 mt-1\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_checkout_button_click}\r\n                    >\r\n                        <b><i className=\"icon-checkmark2\" /></b>\r\n                        Checkout\r\n                    </button> */}\r\n                    </div>\r\n\r\n                </Modal>\r\n                <div className={`d-none`}>\r\n                    <div className={`row px-3 py-5`} ref={el => (this.componentRef = el)}>\r\n\r\n                        <div className={`col-12 row`}>\r\n\r\n                            <div className={`col-6`}>\r\n                                <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\r\n                            </div>\r\n                            <div className={`col-6`}>\r\n                                {this.state.user_data ? <div className=\"table-responsive card\">\r\n                                    <table className=\"table table-hover mb-0\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">MRN#</td>\r\n                                                <td className=\"py-1\">{this.state.user_data.patient.mrn}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Patient</td>\r\n                                                <td className=\"py-1\">{`${Ucfirst(this.state.user_data.patient.first_name)} ${Ucfirst(this.state.user_data.patient.last_name)}`}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Contact</td>\r\n                                                <td className=\"py-1\">{`${this.state.user_data.patient.phone_number}`}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Doctor</td>\r\n                                                <td className=\"py-1\">{`${Ucfirst(this.state.user_data.doctor.first_name)} ${Ucfirst(this.state.user_data.doctor.last_name)}`}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td className=\"py-1 font-weight-bold\">Date</td>\r\n                                                <td className=\"py-1\">{`${moment(get_utc_date(this.state.user_data.appointment_date), \"YYYY-MM-DDThh:mm:ss\").format('LLLL')}`}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div> : <span>Cannot fetch user data</span>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className={`table-responsive px-1 row col-12 mt-2`}>\r\n                            <h2 className={`font-weight-bold`}>Procedures</h2>\r\n                            <table className=\"table table-sm table-bordered table-hover mb-0\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className=\"py-1\">\r\n                                            <b>Description</b>\r\n                                        </th>\r\n                                        <th className=\"py-1\">\r\n                                            <b>Discount</b>\r\n                                        </th>\r\n                                        <th className=\"py-1\">\r\n                                            <b>Charges</b>\r\n                                        </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.procedures_list ?\r\n                                            this.state.procedures_list.map((item, i) => {\r\n                                                return (<tr key={i} >\r\n                                                    <td className=\"py-1\">\r\n                                                        {item.description}\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">\r\n                                                        {item.discount}\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">\r\n                                                        {item.fee}\r\n                                                    </td>\r\n                                                </tr>)\r\n\r\n                                            }) : 'No procedure found'\r\n                                    }\r\n                                    <tr>\r\n                                        <td className={`font-weight-bold`} colSpan=\"2\">Total</td>\r\n                                        <td className={`font-weight-bold`}>{this.state.total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className={`d-flex justify-content-between mt-2`}>\r\n                                <h2 className={`font-weight-bold`}>Payment</h2>\r\n                                {/* <h2 className={`font-weight-bold`}>{this.state.total}</h2>                             */}\r\n                            </div>\r\n                            <table className={`table table-sm table-bordered table-hover mb-0 mt-2`}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Paid</td>\r\n                                        <td>{this.state.paid_text_input.value}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Balance</td>\r\n                                        <td>{parseInt(this.state.paid_text_input.value) - this.state.total}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div className={`d-flex justify-content-between`}>\r\n                                <span className={`text-muted`}>- Invoice date-time {moment(new Date()).format('LLL')}</span>\r\n                                {/* <span className={`text-muted`}>{this.state.user_data.appointment_id}</span> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment >\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { update_appointment, load_todays_appointments, clear_todays_appointments })(ProcedureModal);","import React, { Component } from 'react';\nimport Modal from \"react-bootstrap4-modal\";\nimport LOGO from '../../../../resources/images/LOGO.png';\nimport Loading from '../../../../components/loading';\nimport ReactToPrint from 'react-to-print';\nimport { get_utc_date, Ucfirst } from '../../../../utils/functions';\nimport moment from 'moment'\nimport { AppointmentInvoice } from '../../../../services/queries';\n\n\nclass Invoice extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            loading: true,\n        }\n    }\n\n    componentWillReceiveProps(new_props, new_state) {\n        if (new_props.visibility === true) {\n            console.log('fetching data')\n            AppointmentInvoice(new_props.appointment_id)\n                .then(res => {\n                    console.log('fetched', res.data)\n                    this.setState({ data: res.data.payload, loading: false })\n                })\n        }\n        else {\n            this.setState({ data: null })\n        }\n    }\n\n    get_total = () => {\n        if (this.state.data !== null) {\n            const procedures = parseInt(this.state.data.appointment_charges.procedures);\n            const consultancy = parseInt(this.state.data.appointment_charges.consultancy);\n            const follow_up = parseInt(this.state.data.appointment_charges.follow_up);\n            const discount = parseInt(this.state.data.appointment_charges.discount);\n\n            return procedures + consultancy + follow_up - discount;\n        }\n        return 0;\n    }\n\n    get_balance = () => {\n        if (this.state.data !== null) {\n            const total = this.get_total();\n            const paid = parseInt(this.state.data.appointment_charges.paid);\n            const paid_for_procedures = parseInt(this.state.data.appointment_charges.paid_for_procedures);\n\n            return total - paid - paid_for_procedures;\n        }\n        return 0;\n    }\n\n    get_total_paid = () => {\n        if (this.state.data !== null) {\n            const paid = parseInt(this.state.data.appointment_charges.paid);\n            const paid_for_procedures = parseInt(this.state.data.appointment_charges.paid_for_procedures);\n            console.log('charges', this.state.data.appointment_charges)\n            return paid + paid_for_procedures;\n        }\n        return 0;\n    }\n\n    componentWillUnmount() {\n        this.setState({ data: null })\n    }\n\n    render() {\n        const table_header = <div className=\"row\">\n            <div className=\"col-lg-6\">\n                <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\n            </div>\n            {this.state.data ?\n                <div className=\"col-lg-6\">\n\n                    <div className=\"table-responsive card\">\n                        <table className=\"table table-hover mb-0\">\n                            <tbody>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">MRN# </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{this.state.data.patient.mrn}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Patient </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${Ucfirst(this.state.data.patient.first_name)} ${Ucfirst(this.state.data.patient.last_name)}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Contact</span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${this.state.data.patient.phone_number}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Doctor </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${Ucfirst(this.state.data.doctor.first_name)} ${Ucfirst(this.state.data.doctor.last_name)}`}</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className=\"py-1\">\n                                        <span className=\"font-weight-bold\">Date </span>\n                                    </td>\n                                    <td className=\"py-1\">\n                                        <span className=\"\">{`${moment(get_utc_date(this.state.data.appointment_date), \"YYYY-MM-DDThh:mm:ss\").format('LLLL')}`}</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div> : <Loading size={150} />\n            }\n        </div>\n        const procedures_table = this.state.data !== null && this.state.data.appointment_procedures.length > 0 ? <div className=\"table-responsive card\">\n            <table className=\"table table-hover mb-0\">\n                <thead>\n                    <tr>\n                        <th className=\"py-1\">\n                            <b>Description</b>\n                        </th>\n                        <th className=\"py-1\">\n                            <b>Charges</b>\n                        </th>\n                        <th className=\"py-1\">\n                            <b>Discount</b>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.data ?\n                            this.state.data.appointment_procedures.map((item, i) => {\n                                return (<tr key={i} >\n                                    <td className=\"py-1\">\n                                        {item.description}\n                                    </td>\n                                    <td className=\"py-1\">\n                                        {item.fee}\n                                    </td>\n                                    <td className=\"py-1\">\n                                        {item.discount}\n                                    </td>\n                                </tr>)\n\n                            }) : 'No procedure found'\n                    }\n                </tbody>\n            </table>\n        </div> : ''\n        const appointment_charges_table = <div className=\"table-responsive card\">\n            <table className=\"table table-hover mb-0\">\n                <tbody>\n                    <tr>\n                        <td className=\"py-1\">Procedures total fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.procedures : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Consultancy fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.consultancy : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Follow up fee</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.follow_up : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Discount on Appointment charges</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.discount : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1 h4\">Total</td>\n                        <td className=\"py-1 h4\">\n                            {this.get_total()}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        const appointment_paid_balance = <div className={`table-responsive card`}>\n            <table className={\"table table-hover mb-0\"}>\n                <tbody>\n                    <tr>\n                        <td className=\"py-1\">Paid Amount</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.paid : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Paid Amount for procedures</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.state.data.appointment_charges.paid_for_procedures : ''}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Total paid Amount</td>\n                        <td className=\"py-1\">\n                            {this.get_total_paid()}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td className=\"py-1\">Due Amount</td>\n                        <td className=\"py-1\">\n                            {this.state.data ? this.get_balance() : ''}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        return (\n            <Modal visible={this.props.visibility}\n                onClickBackdrop={this.props.close_modal}\n                fade={true}\n                dialogClassName={`modal-dialog modal-lg `}>\n                <div className=\"modal-body pb-0\" ref={el => (this.componentRef = el)}>\n                    <div className=\"container-fluid\" >\n                        {table_header}\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                {this.state.data !== null && this.state.data.appointment_procedures.length > 0 ? <h4 className=\"font-weight-bold\">Procedures</h4> : ''}\n                                {procedures_table}\n                                <h4 className=\"font-weight-bold\">Appointment Charges</h4>\n                                {appointment_charges_table}\n                                <div className={`row`}>\n                                    <div className={`col-lg-6`}>\n\n                                    </div>\n                                    <div className={`col-lg-6`}>\n                                        {appointment_paid_balance}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"modal-footer\">\n                    <ReactToPrint\n                        trigger={() => <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5\"\n                            style={{ textTransform: \"inherit\" }}\n                        >\n                            <b><i className=\"icon-printer2\" /></b>Print</button>}\n                        content={() => this.componentRef}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-danger btn-labeled btn-labeled-right btn-sm pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={this.props.close_modal}\n                    >\n                        <b><i className=\"icon-cross\" /></b>\n                        Close\n                    </button>\n\n\n                </div>\n            </Modal>\n        )\n    }\n}\nexport default Invoice","import React, { Component } from 'react';\nimport moment from 'moment'\nimport { USERS_SEARCH_BY_CREDENTIALS } from 'services/rest_end_points';\nimport Loading from 'components/loading';\nimport Select from 'react-select'\nimport Modal from 'react-bootstrap4-modal';\nimport DateTimePicker from 'react-datetime';\nimport { load_todays_appointments, clear_todays_appointments } from 'redux/actions';\nimport { connect } from \"react-redux\";\n// import Inputfield from '../../../../shared/customs/inputfield/inputfield';\nimport './styles.css'\nimport { Ucfirst } from 'utils/functions';\nimport { AppointmentUpdate, GetRequest, PostRequest } from 'services/queries';\nimport notify from 'notify'\n\nclass UpdateAppointmentModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            patients: [{\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${Ucfirst(this.props.payload.patient_ref.first_name)} ${Ucfirst(this.props.payload.patient_ref.last_name)} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            }],\n            doctors: [{\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `Dr. ${Ucfirst(this.props.payload.doctor_ref.first_name)} ${Ucfirst(this.props.payload.doctor_ref.last_name)} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            }],\n            appointment_patient: { value: this.props.payload.patient_ref.id, error: false },\n            appointment_doctor: { value: this.props.payload.doctor_ref.id, error: false },\n            // appointment_reason: { value: this.props.payload.reason, error: false },\n            appointment_comments: { value: this.props.payload.comments, error: false },\n            appointment_referee: { value: this.props.payload.referee, error: false },\n            appointment_date: { value: moment.utc(this.props.payload.date).format('ll'), error: false },\n            appointment_time: { value: this.props.payload.time, error: false },\n\n            patient_select_value: {\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${Ucfirst(this.props.payload.patient_ref.first_name)} ${Ucfirst(this.props.payload.patient_ref.last_name)} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            },\n            doctor_select_value: {\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `Dr. ${Ucfirst(this.props.payload.doctor_ref.first_name)} ${Ucfirst(this.props.payload.doctor_ref.last_name)} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            },\n        };\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                return await PostRequest(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await GetRequest(_url)\n            }\n        }\n        catch (err) {\n            notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    async render_users(string, role) {\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        const res_users = await this.request({}, query, 'get')\n        let temp_users = []\n        if (role === 'patient') {\n            temp_users.push({\n                id: 'appointment_patient_selection',\n                reference: this.props.payload.patient_ref.id,\n                label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number} | ${this.props.payload.patient_ref.email}`\n            })\n        }\n        else {\n            temp_users.push({\n                id: 'appointment_doctor_selection',\n                reference: this.props.payload.doctor_ref.id,\n                label: `${this.props.payload.doctor_ref.first_name} ${this.props.payload.doctor_ref.last_name} | ${this.props.payload.doctor_ref.phone_number} | ${this.props.payload.doctor_ref.email}`\n            })\n        }\n        if (res_users.status === 200) {\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `appointment_${role.toLowerCase()}_selection`,\n                    reference: t_user._id,\n                    label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient') {\n                this.setState({ patients: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctors: temp_users })\n            }\n        }\n    }\n\n    populate_patients = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({\n                patients: [{\n                    id: 'appointment_patient_selection',\n                    reference: this.props.payload.patient_ref.id,\n                    label: `${this.props.payload.patient_ref.first_name} ${this.props.payload.patient_ref.last_name} | ${this.props.payload.patient_ref.phone_number}`\n                }]\n            })\n\n        }\n    }\n\n    populate_doctors = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({\n                doctors: [{\n                    id: 'appointment_doctor_selection',\n                    reference: this.props.payload.doctor_ref.id,\n                    label: `Dr. ${Ucfirst(this.props.payload.doctor_ref.first_name)} ${Ucfirst(this.props.payload.doctor_ref.last_name)} | ${this.props.payload.doctor_ref.phone_number}`\n                }]\n            })\n\n        }\n    }\n\n\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n\n            switch (e.id) {\n                case 'appointment_patient_selection':\n                    const val_patient = {\n                        id: 'appointment_patient_selection',\n                        reference: e.reference,\n                        label: e.label\n                    }\n                    this.setState({ appointment_patient: { value: e.reference, error: false }, patient_select_value: val_patient })\n                    break;\n                case 'appointment_doctor_selection':\n                    const val_doctor = {\n                        id: 'appointment_doctor_selection',\n                        reference: e.reference,\n                        label: e.label\n                    }\n                    this.setState({ appointment_doctor: { value: e.reference, error: false }, doctor_select_value: val_doctor })\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'appointment_patient_selection':\n                    this.setState({ appointment_patient: { value: '', error: false }, patient_select_value: '' })\n                    break;\n                case 'appointment_doctor_selection':\n                    this.setState({ appointment_doctor: { value: '', error: false }, doctor_select_value: '' })\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'appointment_reason_text_input':\n                this.setState({ appointment_reason: { value: e.target.value, error: false } })\n                break;\n            case 'appointment_comments_text_input':\n                this.setState({ appointment_comments: { value: e.target.value, error: false }});\n                break;\n            case 'appointment_referee_text_input':\n                this.setState({ appointment_referee: { value: e.target.value, error: false }});\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_apointment_date_change = (e) => {\n        if (e === '')\n            this.setState({ appointment_date: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ appointment_date: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    on_apointment_time_change = (e) => {\n\n        if (e === '')\n            this.setState({ appointment_time: { value: '', error: false } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('LT');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ appointment_time: { value: configured_date, error: false } })\n            }\n        }\n    }\n\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\n        const alphabets = /^[A-Za-z]+$/;\n        const numbers = /^[0-9]+$/;\n        if (required && input === '') {\n            return true;\n        }\n        if (only_alpha && input !== '' && !input.match(alphabets)) {\n            return true;\n        }\n        if (only_numbers && input !== '' && !input.match(numbers)) {\n            return true;\n        }\n        return false;\n    }\n\n    on_submit = () => {\n        this.setState({ loading_status: true })\n        let error = false\n        if (this.check_input(this.state.appointment_patient.value, true)) {\n            this.setState({ appointment_patient: { value: this.state.appointment_patient.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_doctor.value, true)) {\n            this.setState({ appointment_doctor: { value: this.state.appointment_doctor.value, error: true } })\n            error = true\n        }\n        // if (this.check_input(this.state.appointment_reason.value)) {\n        //     this.setState({ appointment_reason: { value: this.state.appointment_reason.value, error: true } })\n        //     error = true\n        // }\n        if (this.check_input(this.state.appointment_comments.value, false, false, false)) {\n            this.setState({ appointment_reason: { value: this.state.appointment_comments.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_referee.value, false, false, false)) {\n            this.setState({ appointment_reason: { value: this.state.appointment_referee.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_date.value, true)) {\n            this.setState({ appointment_date: { value: this.state.appointment_date.value, error: true } })\n            error = true\n        }\n        if (this.check_input(this.state.appointment_time.value, true)) {\n            this.setState({ appointment_time: { value: this.state.appointment_time.value, error: true } })\n            error = true\n        }\n\n        if (error === true) {\n            notify('error', '', 'Invalid inputs')\n            this.setState({ loading_status: false })\n            return\n        }\n        localStorage.setItem('h7vjys8yyd12', this.props.id)\n        const data = {\n            appointment_id: this.props.payload.visit_id,\n            doctor_id: this.state.appointment_doctor.value,\n            appointment_date: `${moment(this.state.appointment_date.value).format('YYYY-MM-DD')}T${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\n            appointment_time: this.state.appointment_time.value,\n            // appointment_description: this.state.appointment_reason.value,\n            appointment_comments: this.state.appointment_comments.value,\n            appointment_referee: this.state.appointment_referee.value\n        }\n        AppointmentUpdate(data).then(res => {\n            // console.log('res', res)\n            notify('success', '', res.data.message)\n            this.setState({ \n                loading_status: false \n                \n            })\n            this.props.clear_todays_appointments()\n            this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\n            setTimeout(() => this.props.close(), 2000);\n        }).catch(err => {\n            console.log('res err', err)\n            notify('error', '', `Network error ${err.toString()}`)\n            this.setState({ loading_status: false })\n        })\n    }\n\n    render() {\n        const add_appointment_modal_body =\n            <div className=\"modal-body\">\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n                        <pre>\n                            Patient: <span className=\"h3\">{Ucfirst(this.props.payload.patient_ref.first_name)} {Ucfirst(this.props.payload.patient_ref.last_name)}</span>\n                        </pre>\n                        <div className=\"form-group d-none\">\n                            <label>Patient <span className=\"text-danger\">*</span></label>\n                            <Select\n                                id=\"appointment_patient_selection\"\n                                isClearable\n                                menuPlacement=\"auto\"\n                                isDisabled\n                                options={this.state.patients}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Select Patient\"\n                                onInputChange={e => this.populate_patients(e)}\n                                onChange={e => this.on_selected_changed(e, \"appointment_patient_selection\")}\n                                value={this.state.patient_select_value}\n                                styles={{\n                                    container: base => ({\n                                        ...base,\n                                        backgroundColor: this.state.appointment_patient.error ? '#FF0000' : '',\n                                        padding: 1,\n                                        borderRadius: 5\n                                    }),\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Doctor <span className=\"text-danger\">*</span></label>\n                            <Select\n                                id=\"appointment_doctor_selection\"\n                                isClearable\n                                options={this.state.doctors}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Select a Doctor\"\n                                menuPlacement=\"auto\"\n                                onInputChange={e => this.populate_doctors(e)}\n                                onChange={e => this.on_selected_changed(e, 'appointment_doctor_selection')}\n                                value={this.state.doctor_select_value}\n                                styles={{\n                                    container: base => ({\n                                        ...base,\n                                        backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\n                                        padding: 1,\n                                        borderRadius: 5\n                                    }),\n                                }}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Reffered by</label>\n                            <input\n                                id=\"appointment_referee_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Doctor name for reference\"\n                                value={this.state.appointment_referee.value}\n                                onChange={e => this.on_text_field_change(e)}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Comments (if any)</label>\n                            <textarea\n                                id=\"appointment_comments_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Any special comments about the patient\"\n                                rows=\"4\"\n                                value={this.state.appointment_comments.value}\n                                onChange={e => this.on_text_field_change(e)}\n                            />\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Date <span className=\"text-danger\">*</span></label>\n                                    <DateTimePicker id=\"dob_text_input\"\n                                        onChange={this.on_apointment_date_change}\n                                        className=\"clock_datatime_picker\"\n                                        inputProps={{ placeholder: 'Select Date', width: '100%', className: 'form-control' }}\n                                        input={true}\n                                        dateFormat={'ll'}\n                                        timeFormat={false}\n                                        closeOnSelect={true}\n                                        value={this.state.appointment_date.value}\n                                    />\n                                </div>\n\n\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"form-group\">\n                                    <label>Time <span className=\"text-danger\">*</span></label>\n                                    <DateTimePicker id=\"dob_text_input\"\n                                        onChange={this.on_apointment_time_change}\n                                        className=\"clock_datatime_picker\"\n                                        inputProps={{ placeholder: 'Select Time', width: '100%', className: 'form-control' }}\n                                        input={true}\n                                        dateFormat={false}\n                                        timeFormat={true}\n                                        closeOnSelect={true}\n                                        strictParsing={true}\n                                        value={this.state.appointment_time.value}\n                                    />\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        {/* <Inputfield\n                            id=\"appointment_reason_text_input\"\n                            label_tag={'What is the reason for the visit'}\n                            icon_class={'icon-user-check'}\n                            input_type={'text'}\n                            placeholder=\"Enter visit reason\"\n                            field_type=\"text-area\"\n                            on_text_change_listener={this.on_text_field_change}\n                            default_value={this.state.appointment_reason.value}\n                            error={this.state.appointment_reason.error}\n                        /> */}\n                        {/* <div className=\"form-group form-group-float\">\n                            <div className=\"form-group-float-label is-visible mb-1\">\n                                What is the reason for the visit\n                            </div>\n                            <textarea rows={5} cols={5}\n                                id=\"appointment_reason_text_input\"\n                                className=\"form-control\"\n                                placeholder=\"Reason for visit\"\n                                onChange={this.on_text_field_change}\n                                value={this.state.appointment_reason.value} />\n                        </div> */}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-md-6\">\n\n                    </div>\n\n                </div>\n            </div>\n        return (\n            <Modal\n                visible={this.props.visibility}\n                onClickBackdrop={() => this.props.close()}\n                fade={true}\n                dialogClassName={`modal-dialog-centered modal-lg`}>\n\n                <div className=\"modal-header bg-teal-400\">\n                    <h5 className=\"modal-title\">Update Appointment</h5>\n                </div>\n                {this.state.loading_status ? <Loading size={150} /> : add_appointment_modal_body}\n                <div className=\"modal-footer\">\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={this.on_submit}>\n                        <b><i className=\"icon-plus3\"></i></b>\n                        Update\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\n                        style={{ textTransform: \"inherit\" }}\n                        onClick={() => this.props.close()}>\n                        <b><i className=\"icon-cross\"></i></b>\n                        Cancel\n                    </button>\n\n                </div>\n            </Modal>\n        )\n    }\n}\nexport default connect(null, { notify, load_todays_appointments, clear_todays_appointments })(UpdateAppointmentModal);","import React, { Component, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { Popup } from \"semantic-ui-react\";\r\nimport UpdateAppointmentModal from './appointment/update_appointment_modal';\r\nimport { Ucfirst } from 'utils/functions'\r\nimport Loading from 'components/loading';\r\nimport './todays_patient_row.css'\r\nimport { connect } from 'react-redux';\r\nimport { load_todays_appointments, clear_todays_appointments } from 'redux/actions'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport { AppointmentCheckout, ProcedureSearchByAppointmentId } from 'services/queries';\r\nimport notify from 'notify'\r\nimport CreateProcedure from '../procedures/create-procedure';\r\n// import '../../../../node_modules/semantic-ui-css/semantic.min.css';\r\n\r\nclass TodaysPatientRow extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            toggle: false,\r\n            toggle_icon: 'icon-eye-plus',\r\n            row_data: this.props.row_data,\r\n            hidden_data: this.props.hidden_data,\r\n            hidden_header_elements: this.props.hidden_header_elements,\r\n            hidden_header_color: this.props.hidden_header_color,\r\n            col_span: '',\r\n            appointment_time_difference_from_now: moment(this.props.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").fromNow(),\r\n\r\n            update_appointment_modal_visibility: false,\r\n            procedure_modal_visibility: false,\r\n\r\n            procedure_loading: false,\r\n            procedures_list: []\r\n        }\r\n    }\r\n    toggle_row = () => {\r\n        if (this.state.toggle)\r\n            this.setState({ toggle: false, procedure_loading: false, toggle_icon: 'icon-eye-plus' })\r\n        else\r\n            this.setState({ toggle: true, procedure_loading: true, toggle_icon: 'icon-eye-minus' }, () => {\r\n                ProcedureSearchByAppointmentId(this.state.row_data._id)\r\n                    .then(_procedures => {\r\n                        this.setState({ procedures_list: _procedures.data.payload, procedure_loading: false })\r\n                    })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        // console.log(this.props.row_data);\r\n        // this.setState({row_data: this.props.data})\r\n        this.setState({ col_span: this.props.columns })\r\n        setInterval(() => {\r\n            this.setState({ appointment_time_difference_from_now: moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").fromNow() })\r\n        }, 60000)\r\n    }\r\n\r\n    view_user = (id) => {\r\n        this.props.toggle_user_view_modal(id)\r\n    }\r\n\r\n    handle_checkout = () => {\r\n        confirmAlert({\r\n            title: \"Checkout confirmation\",\r\n            message: 'Are you sure you want to checkout?',\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => {\r\n\r\n                        const that = this;\r\n                        AppointmentCheckout(this.state.row_data._id)\r\n                            .then(res => {\r\n                                notify('info', '', res.data.message)\r\n                                this.props.clear_todays_appointments();\r\n                                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                            }).catch(err => {\r\n                                if (err.response) {\r\n                                    if (err.response.status === 400) {\r\n                                        that.props.notify('error', '', err.response.data.message);\r\n                                    }\r\n                                    else {\r\n                                        that.props.notify('error', '', err.response.data.message);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    that.props.notify('error', '', err.toString());\r\n                                }\r\n                            })\r\n                    }\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => console.log('Not checked out')\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n    render_read_only_cols = () => {\r\n        const options = {\r\n            consultancy_charges: <Popup\r\n                trigger={\r\n                    <button className=\"btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon m-1\"\r\n                        onClick={() => this.props.toggle_consultancy_modal(this.props.row_data._id)}>\r\n                        <i className=\"icon-vcard\"></i>\r\n                    </button>}\r\n                content={<div className=\"card card-body bg-teal-400 text-white shadow mr-1 mt-3 py-1\">Payment</div>}\r\n                flowing\r\n                position='left center'\r\n            />,\r\n            procedures: <Popup\r\n                trigger={\r\n                    <button className=\"btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 secondary btn-icon m-1\"\r\n                        onClick={() => this.setState({ procedure_modal_visibility: true }, () => console.log('state', this.state))}>\r\n                            {/* this.props.toggle_procedure_modal(this.props.row_data._id)}> */}\r\n                        <i className=\"icon-add-to-list\"></i>\r\n                    </button>}\r\n                content={<div className=\"card card-body bg-teal-400 text-white shadow py-1\">Procedures</div>}\r\n                flowing\r\n                position='top center'\r\n            />,\r\n            invoice: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1`}\r\n                        onClick={() => this.props.toggle_invoice_modal(this.props.row_data._id)}>\r\n                        <i className={`icon-file-text2`}></i>\r\n                    </button>}\r\n                content={<div className={`card card-body bg-teal-400 text-white shadow py-1`}>Details</div>}\r\n                flowing\r\n                // hoverable\r\n                position='top center'\r\n            />,\r\n            edit: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1`}\r\n                        onClick={() => this.setState({ update_appointment_modal_visibility: true })}    >\r\n                        <i className={`icon-pencil3`}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={<div className={`card card-body bg-teal-400 text-white shadow py-1`}>Edit appointment</div>}\r\n                position='top center'\r\n            />,\r\n            follow_ups: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1`}\r\n                        onClick={() => alert('In progress')}    >\r\n                        <i className={`icon-loop`}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={<div className={`card card-body bg-teal-400 text-white shadow py-1`}>Follow ups</div>}\r\n                position='top center'\r\n            />,\r\n            details: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-dark border-dark text-dark btn-icon m-1`}\r\n                        onClick={this.toggle_row}>\r\n                        <i className={this.state.toggle_icon}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={\r\n                    <div className={`card card-body bg-dark text-white shadow ml-1 mt-3 py-1`}>\r\n                        Show more details\r\n                            </div>\r\n                }\r\n                position='right center'\r\n            />,\r\n            checkout: <Popup\r\n                trigger={\r\n                    <button className={`btn btn-outline btn-sm bg-teal-400 border-teal-400 text-teal-400 btn-icon m-1 float-right`}\r\n                        onClick={() => this.handle_checkout()}>\r\n                        <i className={'icon-exit'}></i>\r\n                    </button>}\r\n                flowing\r\n                // hoverable\r\n                content={\r\n                    <div className={`card card-body bg-teal-400 text-white shadow py-1 mt-3 mr-2`}>\r\n                        Checkout\r\n                    </div>\r\n                }\r\n                position='left center'\r\n            />\r\n        }\r\n\r\n        return (\r\n            // <div>{this.state.row_data}</div>\r\n            <div className={`container-fluid`} >\r\n                {/* {this.props.reference} */}\r\n                <div className={`row`}>\r\n                    {/* Patient name and phone number */}\r\n                    <div className={`col-lg-3 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-left-teal-400 btn-block d-flex align-items-center justify-content-center text-center`}>\r\n                        <div className={`btn btn-outline bg-teal-400 text-teal-400 btn-block jackInTheBox animated`}\r\n                            style={{ verticalAlign: 'center' }}\r\n                            onClick={() => this.view_user(this.state.row_data.patient['id'])}\r\n                        >\r\n                            <span className={`img-fluid rounded-circle text-white bg-teal-400 h3 p-2`} >\r\n                                {this.state.row_data.patient['first_name'].charAt(0).toUpperCase() + this.state.row_data.patient['last_name'].charAt(0).toUpperCase()}\r\n                            </span>\r\n                            <h4 className=\"mt-2\">{Ucfirst(this.state.row_data.patient['first_name']) + ' ' + Ucfirst(this.state.row_data.patient['last_name'])}</h4>\r\n                            <span><i className=\"icon-phone-wave mr-1\"></i> {this.state.row_data.patient['phone_number']}</span>\r\n                        </div>\r\n                    </div>\r\n                    {/* Appointment Time column */}\r\n                    <div className={`col-lg-2 col-md-6 col-sm-6 mt-0 text-teal-400 border-left-2 border-bottom-sm-2 border-left-teal-400 border-right-teal-400 border-right-2 btn-block d-flex align-items-center justify-content-center text-center`} >\r\n                        <div className={` jackInTheBox animated`} >\r\n                            <h1 className=\"mb-0\">{moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('hh:mm a')}</h1>\r\n                            <p>{this.state.appointment_time_difference_from_now}</p>\r\n                        </div>\r\n                    </div>\r\n                    {/* appointment details */}\r\n                    <div className={`col-lg-7 col-md-12 col-sm-12 mt-sm-2`}>\r\n                        {/* Appointment date and time */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 font-weight-bold h6\">\r\n                                Appointment with <Link className=\"text-teal-400 font-weight-bold ml-1\" to={\"#\"}\r\n                                    onClick={() => this.view_user(this.state.row_data.doctor['id'])}>\r\n                                    {Ucfirst(this.state.row_data.doctor['first_name']) + ' ' + Ucfirst(this.state.row_data.doctor['last_name'])}\r\n                                    <i className=\"icon-user-tie ml-1\"></i>\r\n                                </Link>\r\n                                <span className=\"text-muted float-lg-right float-md-right float-left\">\r\n                                    {`${moment(this.state.row_data.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LL')}`}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Reason */}\r\n                        <div className={`row`}>\r\n                            <div className={`col-12 h6`}>\r\n                                <span className=\"font-weight-bold\">Comments</span>\r\n                                <span className=\" h6 text-muted\">\r\n                                    {` ${this.state.row_data.appointment_comments.length > 25 ? this.state.row_data.appointment_comments.substring(0, 25) + '...' : this.state.row_data.appointment_comments}`}\r\n                                </span>\r\n                                <span className={`badge badge-${this.state.row_data.appointment_status.info === 'checked out' ? 'primary' : 'danger'} float-right`}>\r\n                                    {this.state.row_data.appointment_status.info}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Appointment Actions */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {!this.state.row_data.appointment_status.is_paid ?\r\n                                    <Fragment>\r\n                                        {options['consultancy_charges']}\r\n                                        {options['procedures']}\r\n                                        {options['invoice']}\r\n                                        {options['edit']}\r\n                                        {options['follow_ups']}\r\n                                        {options['details']}\r\n                                        {options['checkout']}\r\n                                    </Fragment> :\r\n                                    <Fragment>\r\n                                        {options['invoice']}\r\n                                        {options['follow_ups']}\r\n                                        {options['details']}\r\n                                    </Fragment>}\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render_hidden_elements = () => {\r\n\r\n        return (\r\n            <div className=\"\">\r\n                <h5>Comments</h5>\r\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\r\n                    <p className=\"mb-1\">\r\n                        {this.state.hidden_data.appointment_comments}\r\n                    </p>\r\n                </blockquote>\r\n                <h5 className=\"font-weight-semibold\">Procedures</h5>\r\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\r\n\r\n                    {\r\n                        this.state.procedure_loading ? <Loading size={100} /> : (\r\n                            this.state.procedures_list.length > 0 ?\r\n                                this.state.procedures_list.map((item, i) => {\r\n                                    return (\r\n                                        <div className=\"\">\r\n                                            <footer className=\"blockquote-footer text-dark\">\r\n                                                {item.description.toUpperCase()}\r\n                                            </footer>\r\n                                            {/* <span className=\"text-secondary procedureslist-secondary-text\">{'item'}</span> */}\r\n                                        </div>\r\n                                    )\r\n                                }) : <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\r\n                                    <strong>Info!</strong> No Procedures found.\r\n                                    </div>\r\n                        )\r\n                    }\r\n                </blockquote>\r\n            </div>\r\n        )\r\n    }\r\n    render_hidden_header_elements = () => {\r\n        return this.state.hidden_header_elements.map((str, i) => {\r\n            return <Fragment key={i}>{str}</Fragment>\r\n        })\r\n    }\r\n\r\n    close_update_appointment_modal = () => {\r\n        this.setState({ update_appointment_modal_visibility: false })\r\n    }\r\n\r\n    open_update_appointment_modal = () => {\r\n        this.setState({ update_appointment_modal_visibility: true })\r\n    }\r\n\r\n    call_back_update_appointment_modal = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <tr >\r\n                    <td colSpan={this.state.col_span}>\r\n                        {\r\n                            this.render_read_only_cols()\r\n                        }\r\n                    </td>\r\n\r\n                </tr>\r\n                <tr className=\"\">\r\n                    <td colSpan={`${this.state.col_span + 1}`} className={`${this.state.toggle ? '' : 'py-0'}`}>\r\n                        <Collapse isOpen={this.state.toggle} >\r\n                            <div className=\"float-right\">\r\n                                <Link onClick={this.toggle_row} to=\"#\" className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                                    <i className=\"icon-cross3 icon-2x\"></i>\r\n                                </Link>\r\n                            </div>\r\n                            {\r\n                                this.render_hidden_elements()\r\n                            }\r\n                        </Collapse>\r\n                        <UpdateAppointmentModal\r\n                            id={this.state.row_data._id}\r\n                            visibility={this.state.update_appointment_modal_visibility}\r\n                            close={this.close_update_appointment_modal}\r\n                            call_back={this.call_back_update_appointment_modal}\r\n                            state={'update'}\r\n                            payload={{\r\n                                visit_id: this.state.row_data._id,\r\n                                patient_ref: this.state.row_data.patient,\r\n                                doctor_ref: this.state.row_data.doctor,\r\n                                reason: this.state.row_data['appointment_description'],\r\n                                date: this.state.row_data.appointment_date,\r\n                                time: this.state.row_data.appointment_time,\r\n                                comments: this.state.row_data.appointment_comments,\r\n                                referee: this.state.row_data.appointment_referee,\r\n                            }} />\r\n                        {\r\n                            this.state.procedure_modal_visibility &&\r\n                            <CreateProcedure\r\n                                visibility={this.state.procedure_modal_visibility}\r\n                                handleClose={() => this.setState({ procedure_modal_visibility: false })}\r\n                                appointment_id={this.state.row_data._id}\r\n                            />\r\n                        }\r\n\r\n                    </td>\r\n\r\n                </tr>\r\n                {/* update appointment modal */}\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { notify, load_todays_appointments, clear_todays_appointments })(TodaysPatientRow)","import React, { Component } from 'react';\r\n// import NO_PICTURE from '../../resources/images/placeholder.jpg'\r\nimport moment from 'moment';\r\n// import { classNameColors } from '../constant_data';\r\n\r\nclass User extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: this.props.data,\r\n            size: this.props.size,\r\n\r\n            text_size: '',\r\n            icon_size: '',\r\n            button_size: '',\r\n            heading_size: '',\r\n\r\n        }\r\n    }\r\n\r\n    calculate_age = (dob1) => {\r\n        var today = new Date();\r\n        var birthDate = new Date(dob1);  // create a date object directly from `dob1` argument\r\n        var age_now = today.getFullYear() - birthDate.getFullYear();\r\n        var m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age_now--;\r\n        }\r\n        return age_now;\r\n    }\r\n\r\n    componentDidMount(){\r\n        switch(this.state.size){\r\n            case 'large':\r\n                this.setState({\r\n                    text_size: 'h3',\r\n                    icon_size: '',\r\n                    button_size: 'btn-lg',\r\n                    heading_size: 'h1 font-weight-bold'\r\n                })\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n    }\r\n    render(){\r\n\r\n        const store = this.state.data\r\n        const name = store['first_name'] + ' ' + store['last_name']\r\n        const gender = store['gender']\r\n        const date_of_birth = store['date_of_birth']\r\n        const email = store['email']\r\n        const phone = store['phone_number']\r\n\r\n        const icon = this.state.icon_size\r\n        const text = this.state.text_size\r\n        return(\r\n            <div className=\"media\">\r\n                <div className=\"mr-3\">\r\n                    <div className={`img-fluid rounded-circle text-white bg-teal-400 h3 d-flex justify-content-center align-items-center p-2`} \r\n                        style={{height: '50px', width: '50px'}}// src={NO_PICTURE} \r\n                        >\r\n                        {store['first_name'].charAt(0) + store['last_name'].charAt(0)}\r\n                    </div>\r\n                </div>\r\n                <div className=\"media-body\">\r\n                    <h5 className={`mb-0 ${this.state.heading_size}`}>{name} {gender === 'Male'? \r\n                                            <span className=\"badge badge-primary\">\r\n                                                <small>Male</small>\r\n                                            </span>:\r\n                                            <span className=\"badge bg-pink-400\">\r\n                                               <small>Female</small>\r\n                                            </span>}</h5>\r\n                    <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <span className={`${text}`}><i className={`icon-person ${icon}`}></i> {this.calculate_age(date_of_birth)} years old</span>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                        <span className={`mt-1 ${text}`}><i className={`icon-calendar3 mr-2 ${icon}`}></i> {moment(new Date(date_of_birth).toString()).format('MMM Do YY')}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-1\">\r\n                        <div className=\"col-md-6 col-sm-12\">  \r\n                            <span className={`mt-1 ${text}`}><i className={`icon-phone-wave mr-2 ${icon}`}></i>{phone}</span>\r\n                        </div>\r\n                        <div className=\"col-md-6 col-sm-12\">\r\n                            <span className={`mt-1 ${text}`}><i className={`icon-envelop5 mr-2 ${icon}`}></i>{email}</span>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default User","import React from 'react'\r\nimport Modal from \"react-bootstrap4-modal\";\r\nimport Loading from \"../../components/loading\";\r\nimport User from '../customs/user/user';\r\nimport { Link } from 'react-router-dom';\r\nimport 'styles/animations/animations.css'\r\n\r\nfunction UserPreviewModal(props) {\r\n\r\n\r\n    function handle_on_click_back_drop() {\r\n        props.on_click_back_drop()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal visible={props.visibility} \r\n                onClickBackdrop={() => handle_on_click_back_drop()}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog-centered modal-lg `}\r\n                >\r\n                \r\n                <div className=\"modal-body\">\r\n                    <div className=\"float-right\">\r\n                        <Link onClick={() => handle_on_click_back_drop()} \r\n                            to=\"#\" \r\n                            className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                            <i className=\"icon-cross3 icon-2x\"></i>\r\n                        </Link>\r\n                    </div>\r\n                    {\r\n                        props.modal_props === null? <Loading size={150} />: <User data={props.modal_props} size=\"large\"/> \r\n                    }\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                \r\n                </div>\r\n                \r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\nexport default UserPreviewModal;\r\n","import React, { Component } from 'react';\r\nimport { BLOOD_GROUPS_OPTIONS, GENDER_OPTIONS, CITIES, COUTRIES } from '../../utils/constant_data';\r\nimport { ADMIN_CREATE_PATIENT } from '../../services/rest_end_points';\r\nimport Axios from 'axios';\r\nimport Loading from '../../components/loading';\r\nimport Inputfield from '../../components/inputfield';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport moment from 'moment'\r\nimport notify from 'notify'\r\n\r\nclass NewUserModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading_status: false,\r\n\r\n            user_first_name: { value: '', error: false },\r\n            user_last_name: { value: '', error: false },\r\n            user_phone_number: { value: '', error: false },\r\n            user_dob: { value: '', error: false },\r\n            user_age: { value: '', error: false },\r\n            \r\n            user_cnic: { value: '', error: false },\r\n            user_email: { value: '', error: false },\r\n\r\n            user_country: { value: 'Pakistan', error: false },\r\n            user_city: { value: 'Lahore', error: false },\r\n            user_address: { value: '', error: false },\r\n\r\n            user_gender: { value: 'Male', error: false },\r\n            user_blood_group: { value: 'Unknown', error: false },\r\n            user_role: { value: 'Patient', error: false },\r\n        }\r\n    }\r\n\r\n    on_text_field_change = (e) => {\r\n        if (e.target.id === 'user_age') {\r\n            const dob = e.target.value === '' ? '' : moment(moment().subtract(parseInt(e.target.value), 'years').calendar()).format('ll');\r\n            this.setState({ user_age: { value: e.target.value, error: false }, user_dob: { value: dob, error: false } });\r\n        } \r\n        else {\r\n            this.setState({ [e.target.id]: { value: e.target.value, error: false }})\r\n        }\r\n    }\r\n    \r\n    on_selected_changed = (e, actor) => {\r\n        if (e !== null) {\r\n            this.setState({ [e.id]: { value: e.label, error: false } })\r\n        }\r\n        else {\r\n            this.setState({ [actor]: { value: '', error: false } })\r\n        }\r\n    }\r\n    \r\n    on_user_date_of_birth_change = (e) => {\r\n        if (e === '')\r\n            this.setState({ user_dob: { value: '', error: false } })\r\n        else {\r\n            let configured_date = null;\r\n            let configured_age = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n                configured_age = e.fromNow();\r\n                if (configured_age.includes('years')){\r\n                    configured_age = configured_age.split(' ');\r\n                    configured_age = configured_age[0];\r\n                }\r\n                else {\r\n                    configured_age = \"0\"\r\n                }\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n                configured_age = ''\r\n            }\r\n            finally {\r\n                this.setState({ \r\n                    user_dob: { value: configured_date, error: false }, \r\n                    user_age: { value: configured_age, error: false } \r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\r\n        const alphabets = /^[A-Za-z]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (required && input === '') {\r\n            return true;\r\n        }\r\n        if (only_alpha && input !== '' && !input.match(alphabets)) {\r\n            return true;\r\n        }\r\n        if (only_numbers && input !== '' && !input.match(numbers)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    check_hard_constraints = (input, include = \"\", length_check = \"default\", val = -1) => {\r\n        if (!input.includes(include)) { return true; }\r\n        switch (length_check) {\r\n            case 'eq':\r\n                if (input.length !== val) { return true }\r\n                break;\r\n            case 'min':\r\n                if (input.length < val) { return true }\r\n                break;\r\n            case 'max':\r\n                if (input.length > val) { return true }\r\n                break;\r\n            default:\r\n                break\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_submit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading_status: true })\r\n        const data = {\r\n            admin_id: this.props.active_user._id,\r\n            patient: {\r\n                first_name: this.state.user_first_name.value.trim(),\r\n                last_name: this.state.user_last_name.value.trim(),\r\n                phone_number: this.state.user_phone_number.value.trim(),\r\n                date_of_birth: this.state.user_dob.value,\r\n                cnic: this.state.user_cnic.value.trim(),\r\n                email: this.state.user_email.value.trim(),\r\n                country: this.state.user_country.value,\r\n                city: this.state.user_city.value,\r\n                address: this.state.user_address.value.trim(),\r\n                gender: this.state.user_gender.value.trim(),\r\n                blood_group: this.state.user_blood_group.value.trim(),\r\n                role: this.state.user_role.value.trim(),\r\n            }\r\n        }\r\n        // console.log('submit data', data)\r\n        Axios.post(ADMIN_CREATE_PATIENT, data).then(response => {\r\n            notify('success', '', response.data['message']);\r\n            this.setState({ loading_status: false }, () => {\r\n                this.close_modal()\r\n            })\r\n        }).catch(err => {\r\n            this.setState({ loading_status: false })\r\n            if (err.response) {\r\n                if (err.response.status === 400){\r\n                    notify('error', '', err.response.data.error.message)\r\n                }\r\n                else if (err.response.status === 422){\r\n                    notify('error', '', err.response.data.error[0])\r\n                }\r\n            }\r\n            else if (err.request) {\r\n                console.log('request error', err);\r\n            }\r\n            else {\r\n                console.log('error', err)\r\n            }\r\n        })\r\n    }\r\n\r\n    close_modal = () => {\r\n        this.props.close()\r\n        this.props.call_back()\r\n\r\n    }\r\n\r\n    render() {\r\n        const add_user_modal_body = <div className=\"modal-body\">\r\n            <div className={`row`}>\r\n                <div className={`col-md-4 px-3`}>\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_first_name`}\r\n                            heading={'First name'}\r\n                            placeholder=\"Enter first name\"\r\n                            required\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_first_name.value}\r\n                            // error={this.state.user_first_name.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_last_name`}\r\n                            heading={'Last name'}\r\n                            placeholder=\"Enter last name\"\r\n                            required\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_last_name.value}\r\n                            error={this.state.user_last_name.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_phone_number`}\r\n                            heading={'Phone number'}\r\n                            placeholder=\"Enter phone number\"\r\n                            required\r\n                            maxLength=\"13\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_phone_number.value}\r\n                            error={this.state.user_phone_number.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_age`}\r\n                            heading={'Age'}\r\n                            icon_class={'icon-vcard'}\r\n                            type={'number'}\r\n                            required\r\n                            maxLength=\"2\"\r\n                            placeholder=\"Enter Age\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_age.value}\r\n                            error={this.state.user_age.error}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_dob`}\r\n                            heading={'Date of birth'}\r\n                            icon_class={'icon-calendar3'}\r\n                            placeholder=\"Enter Date of birth\"\r\n                            type={'text'}\r\n                            field_type=\"date-time\"\r\n                            date_format={'ll'}\r\n                            time_format={false}\r\n                            onChange={this.on_user_date_of_birth_change}\r\n                            value={this.state.user_dob.value}\r\n                            error={this.state.user_dob.error}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_cnic`}\r\n                            heading={'CNIC'}\r\n                            icon_class={'icon-vcard'}\r\n                            type={'number'}\r\n                            maxLength=\"13\"\r\n                            placeholder=\"Enter CNIC\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_cnic.value}\r\n                            error={this.state.user_cnic.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-3 px-3\">\r\n                    <div className=\"form-group\">\r\n                        <Inputfield\r\n                            id={`user_email`}\r\n                            heading={'Enter email'}\r\n                            icon_class={'icon-envelop'}\r\n                            type={'email'}\r\n                            placeholder=\"Enter email\"\r\n                            onChange={this.on_text_field_change}\r\n                            value={this.state.user_email.value}\r\n                            error={this.state.user_email.error} \r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Inputfield \r\n                                heading={'Country'}\r\n                                field_type=\"select\"\r\n                                required\r\n                                isClearable\r\n                                menuPlacement=\"auto\"\r\n                                options={COUTRIES}\r\n                                classNamePrefix={`form-control`}\r\n                                placeholder=\"Select Country\"\r\n                                id=\"country_selection\"\r\n                                isDisabled\r\n                                onChange={e => this.on_selected_changed(e, 'country_selection')}\r\n                                value={{ id: 'country_selection', label: this.state.user_country.value }}\r\n                                defaultValue={{ id: 'country_selection', label: 'Pakistan' }}\r\n                                styles={{\r\n                                    container: base => ({\r\n                                        ...base,\r\n                                        backgroundColor: this.state.user_country.error ? '#FF0000' : '',\r\n                                        padding: 1,\r\n                                        borderRadius: 5\r\n                                    }),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <Inputfield \r\n                                heading={'City'}\r\n                                field_type=\"select\"\r\n                                required\r\n                                isClearable\r\n                                menuPlacement=\"auto\"\r\n                                options={CITIES}\r\n                                classNamePrefix={`form-control`}\r\n                                placeholder=\"Select City\"\r\n                                id=\"city_selection\"\r\n                                onChange={e => this.on_selected_changed(e, 'city_selection')}\r\n                                value={{ id: 'city_selection', label: this.state.user_city.value }}\r\n                                defaultValue={{ id: 'city_selection', label: 'Lahore' }}\r\n                                styles={{\r\n                                    container: base => ({\r\n                                        ...base,\r\n                                        backgroundColor: this.state.user_city.error ? '#FF0000' : '',\r\n                                        padding: 1,\r\n                                        borderRadius: 5\r\n                                    }),\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12\">\r\n                            <Inputfield \r\n                                heading=\"Address/Area\"\r\n                                className=\"form-control form-control-lg\"\r\n                                id=\"user_address\"\r\n                                value={this.state.user_address.value}\r\n                                error={this.state.user_address.error}\r\n                                onChange={e => this.on_text_field_change(e)}\r\n                                placeholder=\"Enter address / area you live in the city\"\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 border-left\">\r\n                    <Inputfield \r\n                        heading=\"Gender\"\r\n                        field_type=\"select\"\r\n                        required\r\n                        isClearable\r\n                        menuPlacement=\"auto\"\r\n                        options={GENDER_OPTIONS}\r\n                        classNamePrefix={`form-control`}\r\n                        placeholder=\"Select Gender\"\r\n                        id=\"gender_selection\"\r\n                        onChange={e => this.on_selected_changed(e, 'gender_selection')}\r\n                        // value={this.state.user_gender.value}\r\n                        defaultValue={{ id: 'gender_selection', label: 'Male' }}\r\n                        styles={{\r\n                            container: base => ({\r\n                                ...base,\r\n                                backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\r\n                                padding: 1,\r\n                                borderRadius: 5\r\n                            }),\r\n                        }}\r\n                        />\r\n                    <Inputfield \r\n                        heading=\"Blood group\"\r\n                        field_type=\"select\"\r\n                        required\r\n                        isClearable\r\n                        menuPlacement=\"auto\"\r\n                        options={BLOOD_GROUPS_OPTIONS}\r\n                        className={`Select-option`}\r\n                        classNamePrefix={`form-control`}\r\n                        placeholder=\"Select blood group\"\r\n                        id=\"blood_group_selection\"\r\n                        onChange={e => this.on_selected_changed(e, 'blood_group_selection')}\r\n                        defaultValue={{ id: 'blood_group_selection', label: 'Unknown' }}\r\n                        styles={{\r\n                            container: base => ({\r\n                                ...base,\r\n                                backgroundColor: this.state.user_gender.error ? '#FF0000' : '',\r\n                                padding: 1,\r\n                                borderRadius: 5\r\n                            }),\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return (\r\n            <Modal\r\n                visible={this.props.visibility}\r\n                onClickBackdrop={this.close_modal}\r\n                fade={true}\r\n                dialogClassName={`modal-dialog-centered modal-lg`}>\r\n                <form onSubmit={this.on_submit}>\r\n                    <div className=\"modal-header bg-teal-400\">\r\n                        <h5 className=\"modal-title\">New Patient</h5>\r\n                    </div>\r\n\r\n                    {this.state.loading_status ? <Loading /> : add_user_modal_body}\r\n\r\n                    <div className=\"modal-footer\">\r\n                        <span className=\"float-left\"><span className=\"text-danger\">*</span> Are required fields</span>\r\n                        \r\n                        <button\r\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            type=\"submit\"\r\n                            disabled={this.state.loading_status}>\r\n                            <b><i className=\"icon-plus3\"></i></b>\r\n                            Add\r\n                        </button>\r\n\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.close_modal}>\r\n                            <b><i className=\"icon-cross\"></i></b>\r\n                            Cancel\r\n                        </button>\r\n\r\n                        \r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default NewUserModal","import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select'\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport DateTimePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport { USERS_SEARCH_BY_CREDENTIALS } from '../../../../services/rest_end_points';\r\nimport { load_todays_appointments, clear_todays_appointments } from '../../../../redux/actions';\r\nimport { connect } from \"react-redux\";\r\nimport NewUserModal from '../../../../shared/modals/newusermodal';\r\n// import Clock from 'react-clock';\r\nimport 'react-clock/dist/Clock.css';\r\n// import { HOURS12, HOURS24, MINS_BY_5, TIME_PERIOD } from '../../../../shared/constant_data';\r\n// import { get_utc_date } from '../../../../shared/functions';\r\nimport './styles.css'\r\nimport TimeKeeper from 'react-timekeeper';\r\n// import { Height } from '@material-ui/icons';\r\nimport { Popup } from 'semantic-ui-react';\r\nimport { AppointmentCreate, GetRequest, PostRequest } from '../../../../services/queries';\r\nimport notify from 'notify';\r\n\r\nclass NewAppointmentModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading_status: false,\r\n\r\n            patients: [],\r\n            doctors: [],\r\n\r\n            appointment_patient: { value: '', error: false },\r\n            appointment_doctor: { value: '', error: false },\r\n            appointment_referee: { value: '', error: false },\r\n            appointment_comments: { value: '', error: false },\r\n            appointment_date: { value: moment().format('ll'), error: false },\r\n            appointment_time: { value: moment().format('LT'), error: false },\r\n\r\n            new_patient_modal_visibility: false,\r\n\r\n            patient_select_value: '',\r\n            doctor_select_value: '',\r\n\r\n            hours: { value: '12', error: false },\r\n            mins: { value: '00', error: false },\r\n            time_period: { value: 'AM', error: false },\r\n\r\n        }\r\n    }\r\n\r\n    async request(_data, _url, _method = \"post\") {\r\n        try {\r\n            if (_method === 'post') {\r\n                return await PostRequest(_url, _data)\r\n            }\r\n            else if (_method === 'get') {\r\n                return await GetRequest(_url)\r\n            }\r\n        }\r\n        catch (err) {\r\n            notify('error', '', 'Server is not responding! Please try again later')\r\n            return null\r\n        }\r\n    }\r\n\r\n    async render_users(string, role) {\r\n        try {\r\n            const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}&active=true`\r\n            const res_users = await this.request({}, query, 'get')\r\n            let temp_users = [];\r\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\r\n                if (role === 'Patient'){\r\n                    const t_user = res_users.data.payload['users'][i]\r\n                    temp_users.push({\r\n                        id: `appointment_${role.toLowerCase()}_selection`,\r\n                        reference: t_user._id,\r\n                        label: `${t_user.first_name} ${t_user.last_name} | ${t_user.phone_number} | ${t_user.email}`\r\n                    })\r\n                }\r\n                else if (role === 'Doctor'){\r\n                    const t_user = res_users.data.payload['users'][i]\r\n                    temp_users.push({\r\n                        id: `appointment_${role.toLowerCase()}_selection`,\r\n                        reference: t_user.doctor._id,\r\n                        label: `${t_user.doctor.first_name} ${t_user.doctor.last_name} | ${t_user.doctor.phone_number} | ${t_user.doctor.email}`\r\n                    })\r\n                    console.log(t_user.doctor)\r\n                }\r\n                \r\n            }\r\n            if (role === 'Patient') {\r\n                this.setState({ patients: temp_users })\r\n            }\r\n            else if (role === 'Doctor') {\r\n                this.setState({ doctors: temp_users })\r\n            }\r\n        }\r\n        catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    }\r\n\r\n    populate_patients = (string) => {\r\n        if (string.length >= 1) {\r\n            this.render_users(string, 'Patient')\r\n        }\r\n        else {\r\n            this.setState({ patients: [] })\r\n        }\r\n    }\r\n\r\n    populate_doctors = (string) => {\r\n        if (string.length >= 1) {\r\n            this.render_users(string, 'Doctor')\r\n        }\r\n        else {\r\n            this.setState({ doctors: [] })\r\n        }\r\n    }\r\n\r\n\r\n    on_selected_changed = (e, actor) => {\r\n        if (e !== null) {\r\n\r\n            switch (e.id) {\r\n                case 'appointment_patient_selection':\r\n                    const val_patient = {\r\n                        id: 'appointment_patient_selection',\r\n                        reference: e.reference,\r\n                        label: e.label\r\n                    }\r\n                    this.setState({ appointment_patient: { value: e.reference, error: false }, patient_select_value: val_patient })\r\n                    break;\r\n                case 'appointment_doctor_selection':\r\n                    const val_doctor = {\r\n                        id: 'appointment_doctor_selection',\r\n                        reference: e.reference,\r\n                        label: e.label\r\n                    }\r\n                    this.setState({ appointment_doctor: { value: e.reference, error: false }, doctor_select_value: val_doctor })\r\n                    break;\r\n                case 'hour_selection':\r\n                    console.log('e', e)\r\n                    this.setState({ hours: { value: e.label, error: false } })\r\n                    break;\r\n                case 'min_selection':\r\n                    this.setState({ mins: { value: e.label, error: false } })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        else {\r\n            switch (actor) {\r\n                case 'appointment_patient_selection':\r\n                    this.setState({ appointment_patient: { value: '', error: false }, patient_select_value: '' })\r\n                    break;\r\n                case 'appointment_doctor_selection':\r\n                    this.setState({ appointment_doctor: { value: '', error: false }, doctor_select_value: '' })\r\n                    break;\r\n                case 'hour_selection':\r\n                    this.setState({ hours: { value: '12', error: false } })\r\n                    break;\r\n                case 'min_selection':\r\n                    this.setState({ mins: { value: '00', error: false } })\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    on_text_field_change = (e) => {\r\n        switch (e.target.id) {\r\n            case 'appointment_referee_text_input':\r\n                this.setState({ appointment_referee: { value: e.target.value, error: false } })\r\n                break;\r\n            case 'appointment_comments_text_input':\r\n                this.setState({ appointment_comments: { value: e.target.value, error: false } })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    on_apointment_date_change = (e) => {\r\n        if (e === '')\r\n            this.setState({ appointment_date: { value: '', error: false } })\r\n        else {\r\n            var configured_date = null;\r\n            try {\r\n                configured_date = e.format('ll');\r\n            }\r\n            catch (err) {\r\n                configured_date = ''\r\n            }\r\n            finally {\r\n                this.setState({ appointment_date: { value: configured_date, error: false } })\r\n            }\r\n        }\r\n    }\r\n\r\n    on_apointment_time_change = (time) => {\r\n\r\n        console.log('time', moment(time).format(\"LT\"));\r\n        this.setState({ appointment_time: { value: moment(time).format(\"LT\") } })\r\n        // if (e === '')\r\n        //     this.setState({ appointment_time: { value: '' } })\r\n        // else {\r\n        //     var configured_date = null;\r\n        //     try {\r\n        //         configured_date = e.format('LT');\r\n        //     }\r\n        //     catch (err) {\r\n        //         configured_date = ''\r\n        //     }\r\n        //     finally {\r\n        //         this.setState({ appointment_time: { value: configured_date } })\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    check_input = (input, required = true, only_alpha = false, only_numbers = false) => {\r\n        const alphabets = /^[A-Za-z]+$/;\r\n        const numbers = /^[0-9]+$/;\r\n        if (required && input === '') {\r\n            return true;\r\n        }\r\n        if (only_alpha && !input.match(alphabets)) {\r\n            return true;\r\n        }\r\n        if (only_numbers && !input.match(numbers)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    on_submit = () => {\r\n        this.setState({ loading_status: true })\r\n        let error = false\r\n        if (this.check_input(this.state.appointment_patient.value, true)) {\r\n            this.setState({ appointment_patient: { value: this.state.appointment_patient.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.appointment_doctor.value, true)) {\r\n            this.setState({ appointment_doctor: { value: this.state.appointment_doctor.value, error: true } })\r\n            error = true\r\n        }\r\n        // if (this.check_input(this.state.appointment_reason.value, true)) {\r\n        //     this.setState({ appointment_reason: { value: this.state.appointment_reason.value, error: true } })\r\n        //     error = true\r\n        // }\r\n        if (this.check_input(this.state.appointment_date.value, true)) {\r\n            this.setState({ appointment_date: { value: this.state.appointment_date.value, error: true } })\r\n            error = true\r\n        }\r\n\r\n        if (this.check_input(this.state.hours.value, true, false, true)) {\r\n            this.setState({ hours: { value: this.state.hours.value, error: true } })\r\n            error = true\r\n        }\r\n        if (this.check_input(this.state.mins.value, true, false, true)) {\r\n            this.setState({ mins: { value: this.state.mins.value, error: true } })\r\n            error = true\r\n        }\r\n\r\n        if (error === true) {\r\n            notify('error', '', 'Invalid inputs')\r\n            this.setState({ loading_status: false })\r\n            return\r\n        }\r\n\r\n        const data = {\r\n            patient: this.state.appointment_patient.value,\r\n            doctor: this.state.appointment_doctor.value,\r\n            date: `${moment(this.state.appointment_date.value).format('YYYY-MM-DD')}T${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\r\n            time: `${moment(this.state.appointment_time.value, [\"h:mm A\"]).format(\"HH:mm:ss\")}Z`,\r\n            description: \"\",\r\n            comments: this.state.appointment_comments.value,\r\n            referee: this.state.appointment_referee.value\r\n        }\r\n        // console.log('data',data)\r\n        // return;\r\n        AppointmentCreate(data).then(res => {\r\n            notify('success', '', res.data.message)\r\n            this.setState({\r\n                appointment_patient: { value: '', error: false },\r\n                appointment_doctor: { value: '', error: false },\r\n                appointment_date: { value: moment().format('ll'), error: false },\r\n                appointment_time: { value: moment().format(\"LT\"), error: false },\r\n                appointment_comments: { value: '', error: false },\r\n                appointment_referee: { value: '', error: false },\r\n                patient_select_value: '',\r\n                doctor_select_value: '',\r\n                loading_status: false,\r\n            })\r\n            this.props.clear_todays_appointments()\r\n            this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\r\n            this.props.close()\r\n\r\n        }).catch(err => {\r\n            if (err) {\r\n                if (err.response) {\r\n                    notify('error', '', err.response.message)\r\n                    // notify('error', '', res.data.message)\r\n                    // this.setState({ loading_status: false })\r\n                }\r\n                else {\r\n                    notify('error', '', 'Server not responding ' + err.toString())\r\n                }\r\n                this.setState({ loading_status: false })\r\n            } else {\r\n                notify('error', '', 'Network error' + err.toString())\r\n                this.setState({ loading_status: false })\r\n            }\r\n        })\r\n    }\r\n    open_new_patient_modal = () => {\r\n        this.props.close()\r\n        this.setState({ new_patient_modal_visibility: true })\r\n    }\r\n\r\n    close_new_patient_modal = () => {\r\n        this.setState({ new_patient_modal_visibility: false })\r\n    }\r\n\r\n    call_back_new_patient_modal = () => {\r\n\r\n    }\r\n\r\n    render() {      \r\n        return (\r\n            <Fragment>\r\n\r\n                {/* Register new patient modal */}\r\n                <NewUserModal\r\n                    visibility={this.state.new_patient_modal_visibility}\r\n                    close={this.close_new_patient_modal}\r\n                    call_back={this.props.bind_function} />\r\n\r\n                <Modal\r\n                    visible={this.props.visibility}\r\n                    onClickBackdrop={this.props.close}\r\n                    fade={true}\r\n                    dialogClassName={`modal-dialog-centered modal-lg`}>\r\n\r\n                    <div className=\"modal-header bg-teal-400\" >\r\n                        <h5 className=\"modal-title\">New Appointment</h5>\r\n                        {/** Date select */}\r\n                        <div className={`w-25`}>\r\n                            <DateTimePicker id=\"dob_text_input\"\r\n                                onChange={this.on_apointment_date_change}\r\n                                className=\"clock_datatime_picker text-teal-400\"\r\n                                inputProps={{ \r\n                                    placeholder: 'Select Date', \r\n                                    width: '100%', \r\n                                    className: `form-control ${this.state.appointment_date.error ? 'border-danger' : ''}`, \r\n                                    disabled: this.state.loading_status\r\n                                }}\r\n                                input={true}\r\n                                dateFormat={'ll'}\r\n                                timeFormat={false}\r\n                                closeOnSelect={true}\r\n                                value={this.state.appointment_date.value}\r\n                                \r\n                            />\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-8\">\r\n                                <div className={`row`}>\r\n                                    <div className={`col-md-10`}>\r\n                                        <div className=\"form-group\">\r\n                                            <label className=\"font-weight-semibold\">Select or add user<span className=\"text-danger\"> * </span></label>\r\n                                            <Select\r\n                                                id=\"appointment_patient_selection\"\r\n                                                isClearable\r\n                                                menuPlacement=\"auto\"\r\n                                                options={this.state.patients}\r\n                                                // components={{ Control: ControlComponent }}\r\n                                                classNamePrefix={`form-control`}\r\n                                                placeholder=\"Select Patient\"\r\n                                                onInputChange={e => this.populate_patients(e)}\r\n                                                onChange={e => this.on_selected_changed(e, \"appointment_patient_selection\")}\r\n                                                value={this.state.patient_select_value}\r\n                                                isDisabled={this.state.loading_status}\r\n                                                styles={{\r\n                                                    container: base => ({\r\n                                                        ...base,\r\n                                                        backgroundColor: this.state.appointment_patient.error ? '#FF0000' : '',\r\n                                                        padding: 1,\r\n                                                        borderRadius: 5\r\n                                                    }),\r\n                                                }}\r\n                                            />\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={`col-md-2 d-flex align-items-end mb-3 `}>\r\n                                        <Popup\r\n                                            trigger={\r\n                                                <button \r\n                                                    disabled={this.state.loading_status}\r\n                                                    className={`btn btn-outline btn-lg bg-secondary btn-block border-secondary text-dark btn-icon`} onClick={this.open_new_patient_modal}>\r\n                                                    <i className=\"icon-plus3\"></i>\r\n                                                </button>}\r\n                                            flowing\r\n                                            // hoverable\r\n                                            content={\r\n                                                <div className={`card card-body bg-dark text-white shadow ml-1 py-1 mt-4`}>\r\n                                                    Add new Patient\r\n                                                </div>\r\n                                            }\r\n                                            position='top center'\r\n                                            style={{ zIndex: 15000 }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-semibold\">Which doctor to assign<span className=\"text-danger\"> * </span></label>\r\n                                    <Select\r\n                                        id=\"appointment_doctor_selection\"\r\n                                        isClearable\r\n                                        options={this.state.doctors}\r\n                                        classNamePrefix={`form-control`}\r\n                                        placeholder=\"Select a Doctor\"\r\n                                        menuPlacement=\"auto\"\r\n                                        onInputChange={e => this.populate_doctors(e)}\r\n                                        onChange={e => this.on_selected_changed(e, 'appointment_doctor_selection')}\r\n                                        value={this.state.doctor_select_value}\r\n                                        isDisabled={this.state.loading_status}\r\n                                        styles={{\r\n                                            container: base => ({\r\n                                                ...base,\r\n                                                backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\r\n                                                padding: 1,\r\n                                                borderRadius: 5\r\n                                            }),\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-semibold\">Refered by</label>\r\n                                    <input\r\n                                        id=\"appointment_referee_text_input\"\r\n                                        className=\"form-control\"\r\n                                        value={this.state.appointment_referee.value}\r\n                                        onChange={e => this.on_text_field_change(e)}\r\n                                        placeholder=\"Reference of any doctor if any\"\r\n                                        disabled={this.state.loading_status}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Additional comments</label>\r\n                                    <textarea rows={3} cols={3}\r\n                                        id=\"appointment_comments_text_input\"\r\n                                        className=\"form-control\"\r\n                                        placeholder=\"Comments for the appointment\"\r\n                                        onChange={e => this.on_text_field_change(e)}\r\n                                        value={this.state.appointment_comments.value}\r\n                                        disabled={this.state.loading_status} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-4\">\r\n\r\n                                <div className={`mt-1 d-flex justify-content-center`}>\r\n                                    <TimeKeeper\r\n                                        time={this.state.appointment_time.value}\r\n                                        onChange={(new_time) => this.on_apointment_time_change(new_time)}\r\n                                        // onDoneClick={() => console.log('time set')}\r\n                                        coarseMinutes={5}\r\n                                        forceCoarseMinutes\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <Select\r\n                            isClearable\r\n                            menuPlacement=\"auto\"\r\n                            options={[]}\r\n                            classNamePrefix={`form-control`}\r\n                            placeholder=\"Select Branch\"\r\n                            id=\"branch_selection\"\r\n                            isDisabled\r\n                            // onChange={e => this.on_selected_changed(e, 'gender_selection')}\r\n                            value={{\r\n                                id: 'branch_selection',\r\n                                label: 'Ghazi chowk'\r\n                            }}\r\n                            styles={{\r\n                                container: base => ({\r\n                                    ...base,\r\n                                    backgroundColor: '',\r\n                                    padding: 0,\r\n                                    borderRadius: 5,\r\n                                    width: '200px'\r\n                                }),\r\n                            }}\r\n                        />\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={this.state.loading_status}\r\n                            onClick={this.on_submit}>\r\n                            <b><i className=\"icon-plus3\"></i></b>\r\n                            Create\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            onClick={this.props.close}>\r\n                            <b><i className=\"icon-cross\"></i></b>\r\n                            Cancel\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nfunction map_state_to_props(state) {\r\n    return {\r\n        notify: state.notify,\r\n        todays_patient: state.todays_patient\r\n    }\r\n}\r\nexport default connect(map_state_to_props, { notify, load_todays_appointments, clear_todays_appointments })(NewAppointmentModal);","import React, { Component } from 'react';\r\nimport Modal from 'react-bootstrap4-modal';\r\nimport Inputfield from '../../../../components/inputfield';\r\nimport { connect } from 'react-redux';\r\nimport { update_appointment, load_todays_appointments, clear_todays_appointments } from '../../../../redux/actions';\r\nimport ReactToPrint from 'react-to-print';\r\nimport LOGO from '../../../../resources/images/LOGO.png';\r\nimport { get_utc_date, Ucfirst } from '../../../../utils/functions';\r\nimport moment from 'moment';\r\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\r\nimport { AppointmentCharges, AppointmentCheckout, AppointmentSearchById, AppointmentUpdateCharges } from '../../../../services/queries';\r\nimport notify from 'notify'\r\n\r\nclass ConsultancyModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            consultancy_fee_text_input: { value: \"1500\", error: false },\r\n            discount_text_input: { value: \"\", error: false },\r\n            follow_up_text_input: { value: \"\", error: false },\r\n            paid_text_input: { value: \"\", error: false },\r\n\r\n            total: 0,\r\n            balance: 0,\r\n            procedure_charges: 0,\r\n\r\n            loading: false,\r\n\r\n            data: null\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(new_props) {\r\n        if (new_props.visibility && new_props.appointment_id !== null) {\r\n            this.setState({ loading: true });\r\n            AppointmentCharges(new_props.appointment_id)\r\n                .then(res => {\r\n                    this.setState({\r\n                        consultancy_fee_text_input: { value: res.data.payload.consultancy === 0 ? \"\" : res.data.payload.consultancy.toString(), error: false },\r\n                        discount_text_input: { value: res.data.payload.discount === 0 ? \"\" : res.data.payload.discount.toString(), error: false },\r\n                        follow_up_text_input: { value: res.data.payload.follow_up === 0 ? \"\" : res.data.payload.follow_up.toString(), error: false },\r\n                        paid_text_input: { value: res.data.payload.paid === 0 ? \"\" : res.data.payload.paid.toString(), error: false },\r\n                        procedure_charges: res.data.payload.procedures,\r\n                    }, () => {\r\n                        this.handle_total_values()\r\n                        AppointmentSearchById(this.props.appointment_id)\r\n                            .then(res => this.setState({ data: res.data.payload, loading: false }))\r\n                            .catch(err => this.setState({ loading: false }))\r\n                    })\r\n                }).catch(err => {\r\n                    notify('error', '', err.toString())\r\n                })\r\n        }\r\n        else if (new_props.visibility && new_props.appointment_id === null) {\r\n            // notify('error', '', \"Something went wrong! Please try again later\")\r\n        }\r\n        else {\r\n            this.setState({\r\n                consultancy_fee_text_input: { value: \"\", error: false },\r\n                discount_text_input: { value: \"\", error: false },\r\n                follow_up_text_input: { value: \"\", error: false },\r\n                paid_text_input: { value: \"\", error: false }\r\n            })\r\n        }\r\n    }\r\n\r\n    handle_total_values = () => {\r\n        this.setState({\r\n            total: parseInt(this.state.consultancy_fee_text_input.value === \"\" ? 0 : this.state.consultancy_fee_text_input.value) +\r\n                parseInt(this.state.follow_up_text_input.value === \"\" ? 0 : this.state.follow_up_text_input.value) -\r\n                parseInt(this.state.discount_text_input.value === \"\" ? 0 : this.state.discount_text_input.value),\r\n        }, () => {\r\n            if (this.state.paid_text_input.value !== \"\") {\r\n                this.setState({\r\n                    balance: this.state.total - parseInt(this.state.paid_text_input.value)\r\n                })\r\n            }\r\n            else {\r\n                this.setState({ balance: 0 })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    on_text_change = (e) => {\r\n        this.setState({ [e.target.id]: { value: e.target.value, error: false } }, () => this.handle_total_values())\r\n    }\r\n\r\n    handle_save_button_click = (e) => {\r\n        e.preventDefault()\r\n        this.setState({ loading: true });\r\n        const payload = {\r\n            appointment_id: this.props.appointment_id,\r\n            consultancy: parseInt(this.state.consultancy_fee_text_input.value === \"\" ? 0 : this.state.consultancy_fee_text_input.value),\r\n            discount: parseInt(this.state.discount_text_input.value === \"\" ? 0 : this.state.discount_text_input.value),\r\n            follow_up: parseInt(this.state.follow_up_text_input.value === \"\" ? 0 : this.state.follow_up_text_input.value),\r\n            paid: parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value),\r\n        }\r\n        AppointmentUpdateCharges(payload)\r\n            .then(res => {\r\n                notify('success', '', res.data.message)\r\n                this.setState({ loading: false }, () => {\r\n                    setTimeout(() => this.props.toggle_modal(), 1000);\r\n                });\r\n            })\r\n            .catch(err => {\r\n                notify('error', '', 'Changes could not be saved! ' + err.toString())\r\n                this.setState({ loading: false });\r\n            })\r\n    }\r\n\r\n    handle_checkout_button_click = () => {\r\n        const paid = parseInt(this.state.paid_text_input.value === \"\" ? 0 : this.state.paid_text_input.value)\r\n        if (paid < this.state.minimum_payable) {\r\n            notify('error', '', 'Payment is less that minimum payable amount.')\r\n        }\r\n        else {\r\n            const that = this;\r\n            AppointmentCheckout(this.props.appointment_id).then(res => {\r\n                notify('info', '', res.data.message)\r\n                this.props.clear_todays_appointments();\r\n                this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'));\r\n                // setTimeout(() => {\r\n                //     this.props.toggle_modal();\r\n                // }, 1000)\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (err.response.status === 400) {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                    else {\r\n                        that.props.notify('error', '', err.response.data.message);\r\n                    }\r\n                }\r\n                else {\r\n                    that.props.notify('error', '', err.toString());\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal visible={this.props.visibility} onClickBackdrop={this.props.toggle_modal}>\r\n                <div className={`modal-header bg-teal-400`}>\r\n                    <h5>Payment</h5>\r\n                    <ReactToPrint\r\n                        trigger={() => <button\r\n                            type=\"button\"\r\n                            className=\"btn bg-secondary btn-labeled btn-labeled-right btn-sm pr-5\"\r\n                            style={{ textTransform: \"inherit\" }}\r\n                            disabled={this.state.loading}\r\n                        >\r\n                            <b><i className=\"icon-printer2\" /></b>Print</button>}\r\n                        content={() => this.componentRef}\r\n                        onBeforeGetContent={this.gather_invoice_data}\r\n                    />\r\n                </div>\r\n                <div className={`modal-body bg-light`}>\r\n                    <div className={`row`}>\r\n                        <div className={`col-lg-6 col-md-6`}>\r\n                            <Inputfield\r\n                                id=\"consultancy_fee_text_input\"\r\n                                heading=\"Consultancy Fee\"\r\n                                icon_class=\"icon-cash3\"\r\n                                placeholder=\"Fee\"\r\n                                disabled={false}\r\n                                value={this.state.consultancy_fee_text_input.value}\r\n                                error={this.state.consultancy_fee_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <Inputfield\r\n                                id=\"discount_text_input\"\r\n                                heading=\"Discount over total\"\r\n                                placeholder=\"Discount\"\r\n                                value={this.state.discount_text_input.value}\r\n                                error={this.state.discount_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <Inputfield\r\n                                id=\"follow_up_text_input\"\r\n                                heading=\"Follow ups Fee\"\r\n                                placeholder=\"Follow ups Fee\"\r\n                                custom_classes=\"\"\r\n                                disabled={false}\r\n                                value={this.state.follow_up_text_input.value}\r\n                                error={this.state.follow_up_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                            <hr className={`mb-0`} />\r\n                            <Inputfield\r\n                                id=\"paid_text_input\"\r\n                                heading=\"Paid Amount\"\r\n                                placeholder=\"Fee paid\"\r\n                                disabled={false}\r\n                                value={this.state.paid_text_input.value}\r\n                                error={this.state.paid_text_input.error}\r\n                                onChange={this.on_text_change}\r\n                                className=\"form-control-sm\"\r\n                                parent_classes=\"mb-1\"\r\n                                type=\"number\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                        </div>\r\n                        <div className={`col-lg-6 col-md-6`}>\r\n                            {\r\n                                this.state.loading ?\r\n                                    <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\r\n                                        <Skeleton className=\"my-1\" count={1} height={15} width={80} />\r\n                                        <div className={`row`}>\r\n                                            <div className={`col-6`}>\r\n                                                <Skeleton className=\"my-2\" count={5} height={30} />\r\n                                            </div>\r\n                                            <div className={`col-6`}>\r\n                                                <Skeleton className=\"my-2\" count={5} height={30} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </SkeletonTheme> :\r\n                                    (\r\n                                        <div className={`table-responsive px-1`}>\r\n                                            <table className={`table table-sm table-bordered table-hover mb-0`}>\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th className={`border-0`}>Appointment charges</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Consultancy</td>\r\n                                                        <td>{this.state.consultancy_fee_text_input.value}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Follow up</td>\r\n                                                        <td>{this.state.follow_up_text_input.value}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Discount</td>\r\n                                                        <td>{this.state.discount_text_input.value}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className={`font-weight-bold`}>Total</td>\r\n                                                        <td className={`font-weight-bold`}>{this.state.total}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Balance</td>\r\n                                                        <td>{this.state.balance}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                            {/* <div className={`text-center`}>\r\n                                    Charges for procedures are <span className={`font-weight-bold`}>Rs. {this.state.procedure_charges}</span>\r\n                                </div> */}\r\n                                        </div>)}\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className={`d-none`}>\r\n                        <div className={`row px-3 py-5`} ref={el => (this.componentRef = el)}>\r\n\r\n                            <div className={`col-12 row`}>\r\n\r\n                                <div className={`col-6`}>\r\n                                    <img src={LOGO} className=\"img-fluid\" alt=\"logo\" />\r\n                                </div>\r\n                                <div className={`col-6`}>\r\n                                    {\r\n                                        this.state.data ? <div className=\"table-responsive card\">\r\n                                            <table className=\"table table-hover mb-0\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">MRN#</td>\r\n                                                        <td className=\"py-1\">{this.state.data.patient.mrn}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Patient</td>\r\n                                                        <td className=\"py-1\">{`${Ucfirst(this.state.data.patient.first_name)} ${Ucfirst(this.state.data.patient.last_name)}`}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Contact</td>\r\n                                                        <td className=\"py-1\">{`${this.state.data.patient.phone_number}`}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Doctor</td>\r\n                                                        <td className=\"py-1\">{`${Ucfirst(this.state.data.doctor.first_name)} ${Ucfirst(this.state.data.doctor.last_name)}`}</td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td className=\"py-1 font-weight-bold\">Date</td>\r\n                                                        <td className=\"py-1\">{`${moment(get_utc_date(this.state.data.appointment_date), \"YYYY-MM-DDThh:mm:ss\").format('LLLL')}`}</td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div> : <span>Cannot fetch user data</span>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className={`table-responsive px-1 row col-12 mt-2`}>\r\n                                <h2 className={`font-weight-bold`}>Charges</h2>\r\n                                <table className={`table table-sm table-bordered table-hover mb-0`}>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>Consultancy</td>\r\n                                            <td>{this.state.consultancy_fee_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Follow up</td>\r\n                                            <td>{this.state.follow_up_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Discount</td>\r\n                                            <td>{this.state.discount_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td className={`font-weight-bold`}>Total</td>\r\n                                            <td className={`font-weight-bold`}>{this.state.total}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <h2 className={`font-weight-bold mt-2`}>Payment</h2>\r\n                                <table className={`table table-sm table-bordered table-hover mb-0 mt-2`}>\r\n                                    <tbody>\r\n\r\n                                        <tr>\r\n                                            <td>Paid</td>\r\n                                            <td>{this.state.paid_text_input.value}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>Balance</td>\r\n                                            <td>{this.state.balance}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <span className={`text-muted`}>- Invoice date-time {moment(new Date()).format('LLL')}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`modal-footer`}>\r\n                    <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-dark btn-labeled btn-labeled-right pr-5\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_save_button_click}\r\n                        disabled={this.state.loading}\r\n                    >\r\n                        <b><i className=\"icon-floppy-disk\" /></b>\r\n                        Save\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn bg-danger btn-labeled btn-labeled-right pr-5\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.props.toggle_modal}\r\n                    >\r\n                        <b><i className=\"icon-cross\" /></b>\r\n                        Cancel\r\n                    </button>\r\n\r\n                    {/* <button\r\n                        // disabled={this.state.procedures_list.length === 0}\r\n                        type=\"button\"\r\n                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right pr-5\"\r\n                        style={{ textTransform: \"inherit\" }}\r\n                        onClick={this.handle_checkout_button_click}\r\n                    >\r\n                        <b><i className=\"icon-checkmark2\" /></b>\r\n                        Checkout\r\n                    </button> */}\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { notify, update_appointment, load_todays_appointments, clear_todays_appointments })(ConsultancyModal);","import React, { Component, Fragment } from 'react';\nimport Select, { components } from 'react-select'\nimport { USERS_SEARCH_BY_CREDENTIALS } from '../../../services/rest_end_points';\nimport { connect } from \"react-redux\";\nimport { set_active_page, load_todays_appointments, clear_todays_appointments } from '../../../redux/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport './todays_patient.css';\nimport { BASE_URL } from '../../../router/constants';\nimport moment from 'moment';\nimport ProcedureModal from './procedures/procedure_modal';\nimport InvoiceModal from './invoice/invoice';\nimport TodaysPatientRow from './todays_patient_row';\nimport UserPreviewModal from '../../../shared/modals/userpreviewmodal';\nimport NewAppointmentModal from './appointment/new_appointment_modal';\nimport { Popup } from \"semantic-ui-react\";\nimport { PATIENT_VISIT_STATUSES } from '../../../utils/constant_data';\nimport DateTimePicker from 'react-datetime';\nimport { Ucfirst } from '../../../utils/functions';\nimport ConsultacyModal from './consultancy';\nimport TodaysPatientRowLoading from './todays_patient_row_loading';\nimport { GetRequest, PostRequest, UserSearchById } from '../../../services/queries';\nimport notify from 'notify'\n\nclass Todayspatient extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            filtered_data: null,\n\n            doctors: [],\n            patients: [],\n\n            new_appointment_modal_visibility: false,\n            procedure_modal_visibility: false,\n            consultancy_modal_visibility: false,\n            \n            prev_procedure_list: null,\n            user_preview_modal_visibility: false,\n            new_patient_modal_visibility: false,\n            invoice_modal_visibility: false,\n\n            user_modal_props: null,\n            invoice_data: null,\n            appointment_invoice_id: '',\n            selected_appointment_id: null,\n            search_doctor: { value: '' },\n            search_patient: { value: '' },\n            search_status: { value: '' },\n            search_date: { value: moment(new Date()).format('ll') },\n\n        }\n    }\n\n    load_data = () => {\n        if (localStorage.getItem('Gh65$p3a008#2C')) {\n            this.setState({ search_date: { value: localStorage.getItem('Gh65$p3a008#2C') }}, () => this.props.load_todays_appointments(this.state.search_date.value))\n        } else {\n            const app_date = new Date(this.state.search_date.value);\n            this.props.load_todays_appointments(new Date(app_date.getTime() + (app_date.getTimezoneOffset() * 60000)).toISOString())\n            localStorage.setItem('Gh65$p3a008#2C', this.state.search_date.value)\n        }\n    }\n\n    componentDidMount() {\n        const routes = [\n            <Link to={BASE_URL} className=\"breadcrumb-item\">\n                <i className=\"icon-user mr-2\"></i>\n                Reception\n            </Link>,\n            <span className=\"breadcrumb-item active\">Today's Patient</span>\n        ]\n        this.props.set_active_page(routes)\n        this.load_data();\n        // setInterval(() => {\n        //     this.load_data()   \n        // }, 10000)\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                return await PostRequest(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await GetRequest(_url)\n            }\n        }\n        catch (err) {\n            notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    async render_users(string, role) {\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        try {\n            const res_users = await this.request({}, query, 'get')\n            let temp_users = []\n            if (role === 'Doctor'){\n                for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                    const t_user = res_users.data.payload['users'][i]\n                    temp_users.push({\n                        id: `${role.toLowerCase()}_selection`,\n                        reference: t_user.doctor._id,\n                        label: `${Ucfirst(t_user.doctor.first_name)} ${Ucfirst(t_user.doctor.last_name)} | ${t_user.details.specialities.toString()}`\n                    })\n                }\n            }\n            if (role === 'Patient') {\n                this.setState({ patients: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctors: temp_users })\n            }\n        }\n        catch (error) {\n            console.error('error', error);\n        }\n    }\n\n    populate_doctors = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({ doctors: [] })\n        }\n    }\n\n    populate_patient = (string) => {\n        if (string.length >= 1) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({ patients: [] })\n        }\n    }\n\n    componentWillReceiveProps(new_props) {\n        if (new_props.todays_patient) {\n            this.setState({ filtered_data: new_props.todays_patient.data, data: new_props.todays_patient.data })\n        }\n    }\n\n    on_selected_changed = (e, actor) => {\n        if (e !== null) {\n            switch (e.id) {\n                case 'location_selection':\n                    this.setState({ user_blood_group: { value: e.label } })\n                    break;\n                case 'status_selection':\n                    this.setState({ search_status: { value: e.label } })\n                    break;\n                case 'doctor_selection':\n                    this.setState({ search_doctor: { value: e.reference } })\n                    break;\n                case 'patient_selection':\n                    this.setState({ search_patient: { value: e.reference } })\n                    break\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'location_selection':\n                    this.setState({ user_blood_group: { value: '' } })\n                    break;\n                case 'status_selection':\n                    this.setState({ search_status: { value: '' } })\n                    break;\n                case 'doctor_selection':\n                    this.setState({ search_doctor: { value: '' } })\n                    break;\n                case 'patient_selection':\n                    this.setState({ search_patient: { value: '' } })\n                    break\n                default:\n                    break;\n            }\n        }\n    }\n\n    request_user = (id) => {\n        this.setState({\n            user_preview_modal_visibility: true\n        }, () => {\n            UserSearchById(id)\n                .then(res => {\n                    this.setState({ user_modal_props: res.data.payload.user })\n                }).catch(err => {\n                    console.log('failed to fetch user', err)\n                })\n        })\n    }\n\n    renderDataInRows = (data) => {\n        if (data === null) {\n            return\n        }\n        return (data.map((booking, i) => {\n            // console.log('booking',booking)\n            // var random_color = classNameColors[Math.floor(Math.random() * classNameColors.length)]\n            const hidden_data = {\n                appointment_description: booking.appointment_description,\n                appointment_comments: booking.appointment_comments\n            }\n            return (\n                <TodaysPatientRow\n                    key={i}\n                    row_data={booking}\n                    hidden_data={hidden_data}\n                    toggle_consultancy_modal={this.toggle_consultancy_modal}\n                    toggle_procedure_modal={this.openProcedureModalHandler}\n                    toggle_invoice_modal={this.openInvoiceModalHandler}\n                    toggle_user_view_modal={this.request_user}\n                    columns=\"8\" />\n            )\n        }))\n    }\n\n    openProcedureModalHandler = (id) => {\n        this.setState({ procedure_modal_visibility: true, selected_appointment_id: id });\n    };\n\n    closeProcedureModalHandler = (type) => {\n        this.setState({ procedure_modal_visibility: false, prev_procedure_list: null, data: null })\n    };\n\n    invoiceVisitIdHandler = (value) => {\n        this.setState({ invoiceVisitId: value });\n    };\n\n    UpdateProcedureListHandler = (updateProcedureList) => {\n        this.setState({ prevProcedureList: updateProcedureList });\n    };\n\n    open_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: true })\n    };\n\n    openInvoiceModalHandler = (object) => {\n        this.setState({ invoice_modal_visibility: true, appointment_invoice_id: object })\n    };\n\n    closeInvoiceModalHandler = () => {\n        this.setState({ invoice_modal_visibility: false })\n    };\n\n    close_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: false })\n    };\n\n    call_back_new_appointment_modal = () => {\n        this.setState({ new_appointment_modal_visibility: false, data: null })\n    };\n\n    set_filters = () => {\n        this.setState({ filtered_data: null }, () => {\n            /**\n             * P D S\n             * ---------\n             * 0 0 0 - 1\n             * 0 0 1 - 2\n             * 0 1 0 - 3\n             * 0 1 1 - 4\n             * 1 0 0 - 5\n             * 1 0 1 - 6\n             * 1 1 0 - 7\n             * 1 1 1 - 8\n             */\n\n            const search_with_patients = this.state.search_patient.value !== '';\n            const search_with_doctors = this.state.search_doctor.value !== '';\n            const search_with_status = this.state.search_status.value !== '';\n\n            // console.log('search state', search_with_patients, search_with_doctors, search_with_status)\n\n            const temp = []\n            for (let i = 0; i < this.state.data.length; ++i) {\n                // console.log(this.state.search_patient.value, this.state.data[i].patient.id)\n                // 0 0 1\n                if (!search_with_patients && !search_with_doctors && search_with_status) {\n                    if (this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 0 1 0\n                else if (!search_with_patients && search_with_doctors && !search_with_status) {\n                    if (this.state.search_doctor.value === this.state.data[i].doctor.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 0 1 1\n                else if (!search_with_patients && search_with_doctors && search_with_status) {\n                    if (this.state.search_doctor.value === this.state.data[i].doctor.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 0 0\n                else if (search_with_patients && !search_with_doctors && !search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 0 1\n                else if (search_with_patients && !search_with_doctors && search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 1 0\n                else if (search_with_patients && search_with_doctors && !search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_doctor.value === this.state.data[i].doctor.id) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n                // 1 1 1\n                else if (search_with_patients && search_with_doctors && search_with_status) {\n                    if (this.state.search_patient.value === this.state.data[i].patient.id &&\n                        this.state.search_doctor.value === this.state.data[i].doctor.id &&\n                        this.state.search_status.value.toLowerCase() === this.state.data[i].appointment_status.info) {\n                        temp.push(this.state.data[i])\n                    }\n                }\n            }\n            let reset_check = true;\n            ['search_patient', 'search_doctor', 'search_status'].map((item, i) => {\n                if (this.state[item].value !== '') {\n                    reset_check = false;\n                    this.setState({ filtered_data: temp })\n                }\n                return '';\n            })\n            if (reset_check)\n                this.setState({ filtered_data: this.state.data })\n        })\n\n    }\n\n    todays_date_change = (e) => {\n        if (e === '') {\n            this.setState({ search_date: { value: '' } })\n        }\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n                this.props.clear_todays_appointments()\n                this.props.load_todays_appointments(configured_date)\n                localStorage.setItem('Gh65$p3a008#2C', configured_date)\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ search_date: { value: configured_date } })\n            }\n        }\n    }\n\n    /*************************************************************************************************************************************************/\n\n    toggle_consultancy_modal = (id) => {\n        this.setState({ consultancy_modal_visibility: !this.state.consultancy_modal_visibility }, () => {\n            if (this.state.consultancy_modal_visibility) {\n                this.setState({ selected_appointment_id: id })\n            }\n        })\n    }\n\n\n    render() {\n        var table = <div className={``}>\n                <div className={`mt-2 card px-2 py-2`}><TodaysPatientRowLoading /></div>\n                <div className={`mt-2 card px-2 py-2`}><TodaysPatientRowLoading /></div>\n            </div>\n        if (this.state.filtered_data != null) {\n            if (this.state.filtered_data.length > 0) {\n                table = <Fragment>\n                    <div className=\"table-responsive mt-2 card mb-0 pb-0\">\n                        <table className=\"table table-hover mb-0\">\n                            <tbody>\n                                {\n                                    this.renderDataInRows(this.state.filtered_data)\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </Fragment>\n\n            }\n            else {\n                table = <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\n                    <strong>Info!</strong> No Appointments found.\n                </div>;\n            }\n        }\n\n\n        const Menu = props => {\n            return (\n                <components.Menu {...props} >\n                    <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\n                        {props.children}\n                    </div>\n                </components.Menu>\n            );\n        };\n\n        const filters = <div className=\"row\">\n            <div className=\"col-md-10\">\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Doctors</label>\n                            <Select\n                                id=\"doctor_selection\"\n                                isClearable\n                                components={{ Menu }}\n                                menuPlacement=\"auto\"\n                                options={this.state.doctors}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Search Doctor\"\n                                onInputChange={e => this.populate_doctors(e)}\n                                onChange={e => this.on_selected_changed(e, \"doctor_selection\")}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"col-md-4\">\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Patients</label>\n                            <Select\n                                id=\"patient_selection\"\n                                isClearable\n                                components={{ Menu }}\n                                menuPlacement=\"auto\"\n                                options={this.state.patients}\n                                classNamePrefix={`form-control`}\n                                placeholder=\"Search Patient\"\n                                onInputChange={e => this.populate_patient(e)}\n                                onChange={e => this.on_selected_changed(e, \"patient_selection\")}\n                            />\n                        </div>\n                    </div>\n\n                    <div className={`col-md-4`}>\n\n                        <div className=\"form-group\">\n                            <label className=\"font-weight-semibold\">Status</label>\n                            <Select\n                                isClearable\n                                options={PATIENT_VISIT_STATUSES}\n                                placeholder=\"Status\"\n                                onChange={e => this.on_selected_changed(e, \"status_selection\")}\n                                onClick={() => console.log('visit status')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-2 d-flex justify-content-center align-items-end mb-2 pb-2\">\n\n                <Popup\n                    trigger={\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-dark btn-icon mr-1 \"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.set_filters}\n                        >\n                            <i className=\"icon-filter4\"></i>\n\n                        </button>}\n                    content={\n                        <div className={`card card-body bg-dark text-white shadow mb-1 py-1`}>\n                            Filter records\n                        </div>\n                    }\n                    flowing\n                    // hoverable\n                    position='top center'\n                />\n\n                <Popup\n                    trigger={\n                        <button\n                            type=\"button\"\n                            className=\"btn bg-teal-400 btn-icon mr-1 btn-block\"\n                            style={{ textTransform: \"inherit\" }}\n                            onClick={this.open_new_appointment_modal}>\n                            <b><i className=\"icon-plus3\"></i></b>\n                        </button>}\n                    content={\n                        <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\n                            New Appointment\n                        </div>\n                    }\n                    flowing\n                    // hoverable\n                    position='top center'\n                />\n\n            </div>\n        </div>\n\n        const table_header = <div className=\"table-header-background shadow-sw\">\n            <div className=\"row\">\n                <div className=\"col-lg-6 col-md-6 col-12 d-flex align-items-center\">\n                    <span className=\"text-white\">Patients list for date</span>\n                    <span className=\"badge badge-secondary ml-2 d-none d-lg-block\">\n                        {this.state.search_date.value}\n                    </span>\n                </div>\n                <div className=\"col-lg-3 d-none d-lg-block col-0\"></div>\n                <div className=\"col-lg-3 col-md-6 col-12 d-flex\">\n                    <DateTimePicker id=\"dob_text_input\"\n                        onChange={this.todays_date_change}\n                        className=\"clock_datatime_picker \"\n                        inputProps={{\n                            placeholder: 'Select Date',\n                            width: '100%',\n                            className: `form-control bg-teal-400 border-teal-400`\n                        }}\n                        input={true}\n                        dateFormat={'ll'}\n                        timeFormat={false}\n                        closeOnSelect={true}\n                        value={this.state.search_date.value}\n\n                        onClick={() => console.log('date select', this.state.search_date.value)}\n                    />\n                    <button className=\"btn bg-teal-400 border-teal-400 text-teal-400 btn-sm ml-2\" onClick={() => {\n                        this.props.clear_todays_appointments()\n                        this.props.load_todays_appointments(localStorage.getItem('Gh65$p3a008#2C'))\n                    }}>\n                        <i className=\"icon-search4\" />\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        return (\n            <Fragment>\n                {/* filters panel */}\n                {filters}\n                {table_header}\n                {/* table of todays appointments */}\n                {this.props.todays_patient.loading === true ? <TodaysPatientRowLoading /> : table}\n\n                {/* Add new appointment modal */}\n                <NewAppointmentModal\n                    visibility={this.state.new_appointment_modal_visibility}\n                    close={this.close_new_appointment_modal}\n                    call_back={this.call_back_new_appointment_modal}\n                    bind_function={this.open_new_appointment_modal}\n                    state={'new'} />\n\n                <ConsultacyModal\n                    visibility={this.state.consultancy_modal_visibility}\n                    toggle_modal={this.toggle_consultancy_modal}\n                    appointment_id={this.state.selected_appointment_id}\n                />\n\n                <ProcedureModal\n                    visibility={this.state.procedure_modal_visibility}\n                    appointment_id={this.state.selected_appointment_id}\n                    prev_procedure_list={this.state.prev_procedure_list}\n                    updateProcedureList={this.UpdateProcedureListHandler}\n                    procedure_backDrop={this.closeProcedureModalHandler}\n                    cancelProcedureModal={this.closeProcedureModalHandler}\n                />\n\n                <InvoiceModal\n                    visibility={this.state.invoice_modal_visibility}\n                    appointment_id={this.state.appointment_invoice_id}\n                    close_modal={this.closeInvoiceModalHandler}\n                /> \n\n                <UserPreviewModal \n                    visibility={this.state.user_preview_modal_visibility}\n                    modal_props={this.state.user_modal_props}\n                    on_click_back_drop={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })}\n                    on_click_cancel={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })} />\n            </Fragment>\n        )\n    }\n}\nfunction map_state_to_props(state) {\n    return {\n        notify: state.notify,\n        todays_patient: state.todays_patient\n    }\n}\nexport default connect(map_state_to_props, { notify, set_active_page, load_todays_appointments, clear_todays_appointments })(withRouter(Todayspatient));","import React, { Component, Fragment } from 'react';\r\nimport { Collapse } from 'reactstrap'\r\n// import moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass TableRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false,\r\n            toggle_icon: 'icon-eye-plus',\r\n            row_data: this.props.row_data,\r\n            hidden_data: this.props.hidden_data,\r\n            hidden_header_elements: this.props.hidden_header_elements,\r\n            hidden_header_color: this.props.hidden_header_color,\r\n            col_span: ''\r\n        }\r\n    }\r\n    toggle_row = () => {\r\n        if (this.state.toggle)\r\n            this.setState({toggle: false, toggle_icon: 'icon-eye-plus'})\r\n        else\r\n            this.setState({toggle: true, toggle_icon: 'icon-eye-minus'})\r\n    }\r\n    componentDidMount(){\r\n        // this.setState({row_data: this.props.data})\r\n        this.setState({col_span: this.props.columns})\r\n    }\r\n\r\n    render_read_only_cols = () => {\r\n        return Object.keys(this.state.row_data).map((str,i) => {\r\n            return <td key={i} >{this.state.row_data[str]}</td>\r\n        })\r\n    }\r\n    render_hidden_elements = () => {\r\n        return this.state.hidden_data.map((str,i) => {\r\n            return <div key={i} className=\"\">{str}</div>\r\n        })\r\n    }\r\n    render_hidden_header_elements = () => {\r\n        return this.state.hidden_header_elements.map((str,i) => {\r\n            return <Fragment key={i}>{str}</Fragment>\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <tr>\r\n                    <td onClick={this.toggle_row}>\r\n                        <div className=\"slideInLeft animated\">\r\n                            <Link className=\"\" to=\"#\" onClick={this.toggle_row}>\r\n                                <i className={this.state.toggle_icon}></i>\r\n                            </Link>\r\n                        </div>\r\n                    </td>\r\n                    {\r\n                        this.render_read_only_cols()\r\n                    }\r\n                    {/* <td >\r\n                        \r\n                        <div className=\"d-flex flex-row\">\r\n                            <button className=\"btn btn-outline btn-sm bg-secondary border-secondary text-secondary btn-icon \"\r\n                                    onClick={()=>this.props.openModal(this.props.visit_id)}>\r\n                                <i className=\"icon-plus2\" />\r\n                            </button>\r\n                            <button className=\"btn btn-outline btn-sm bg-primary border-primary text-primary-800 btn-icon ml-1\">\r\n                                <i className=\"icon-pencil3\" />\r\n                            </button>\r\n                            <button className=\"btn btn-outline btn-sm bg-danger border-danger text-danger btn-icon ml-1\">\r\n                                <i className=\"icon-cross3\" />\r\n                            </button>\r\n                        </div>\r\n                    </td> */}\r\n                </tr>\r\n                <tr className=\"\">\r\n                    <td colSpan={`${this.state.col_span}`} className={`${this.state.toggle? '':'py-0'}`}>\r\n                        <Collapse isOpen={this.state.toggle} >\r\n                            <div className=\"float-right\">\r\n                                <Link onClick={this.toggle_row} to=\"#\" className=\"btn btn-sm btn-outline bg-teal-400 text-teal-400\">\r\n                                    <i className=\"icon-cross3 icon-2x\"></i>\r\n                                </Link>\r\n                            </div>\r\n                            {\r\n                                this.render_hidden_elements()\r\n                            }\r\n                        </Collapse>\r\n                    </td>\r\n                </tr>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nexport default TableRow","import React, { Component, Fragment } from 'react';\nimport { USERS_SEARCH_BY_CREDENTIALS, APPOINTMENTS_SEARCH } from '../../../services/rest_end_points';\nimport { connect } from \"react-redux\";\nimport { set_active_page } from '../../../redux/actions';\nimport { Link, withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport \"./visits.css\"\nimport { components } from 'react-select';\nimport { PATIENT_VISIT_STATUSES } from '../../../utils/constant_data';\nimport TableRow from '../../../shared/customs/tablerows/tablerow';\nimport 'styles/animations/animations.css';\nimport UserPreviewModal from '../../../shared/modals/userpreviewmodal';\nimport { BASE_URL } from '../../../router/constants';\nimport { Popup } from \"semantic-ui-react\";\nimport { Ucfirst } from '../../../utils/functions'\nimport Inputfield from '../../../components/inputfield';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport { GetRequest, PostRequest, UserSearchById } from '../../../services/queries';\nimport notify from 'notify';\n\nclass AllAppointments extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: null,\n            patient_list: [],\n            doctor_list: [],\n\n            today: moment().format('LT'),\n            page_number: 0,\n            total_records_on_this_page: 0,\n            total_pages: 0,\n\n            date_from: { value: moment().subtract(7, 'days').format('ll') },\n            date_to: { value: moment().format('ll') },\n\n            search_patient_id: { value: '' },\n            search_doctor_id: { value: '' },\n            search_status: { value: '' },\n\n            patient_checkbox: false,\n            doctor_checkbox: false,\n\n            loading_status: false,\n            previous_query: { data: null },\n\n            user_preview_modal_visibility: false,\n            user_modal_props: null,\n        }\n    }\n\n    componentDidMount() {\n        const routes = [<Link to={BASE_URL} className=\"breadcrumb-item\">\n            <i className=\"icon-user mr-2\"></i>\n                        Reception\n                    </Link>, <span className=\"breadcrumb-item active\">All Apointments</span>]\n        this.props.set_active_page(routes)\n        setInterval(() => {\n            this.setState({ today: moment().format('LT') })\n        }, 60000)\n        this.on_search_click()\n    }\n\n    async request(_data, _url, _method = \"post\") {\n        try {\n            if (_method === 'post') {\n                this.setState({ previous_query: { data: _data } })\n                return await PostRequest(_url, _data)\n            }\n            else if (_method === 'get') {\n                return await GetRequest(_url)\n            }\n        }\n        catch (err) {\n            notify('error', '', 'Server is not responding! Please try again later')\n            return null\n        }\n    }\n\n    on_selected_changed = (e, actor) => {\n        console.log('e', e)\n        if (e !== null) {\n            switch (actor) {\n                case 'gender_selection':\n                    this.setState({ user_gender: { value: e.label } })\n                    break;\n                case 'patient_list':\n                    this.setState({ search_patient_id: { value: e.reference } })\n                    break;\n                case 'doctor_list':\n                    this.setState({ search_doctor_id: { value: e.reference } })\n                    break;\n                case 'status_list':\n                    console.log('sttaus select', e.label)\n                    this.setState({ search_status: { value: e.label } });\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            switch (actor) {\n                case 'blood_group_selection':\n                    this.setState({ user_gender: { value: '' } })\n                    break;\n                case 'patient_list':\n                    this.setState({ search_patient_id: { value: '' } })\n                    break;\n                case 'doctor_list':\n                    this.setState({ search_doctor_id: { value: '' } })\n                    break;\n                case 'status_list':\n                    this.setState({ search_status: { value: '' } });\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    async render_users(string, role) {\n\n        const query = `${USERS_SEARCH_BY_CREDENTIALS}?search=${string}&role=${role}`\n        const res_users = await this.request({}, query, 'get')\n        let temp_users = []\n        if (res_users.status === 200) {\n            for (var i = 0; i < res_users.data.payload['count']; ++i) {\n                const t_user = res_users.data.payload['users'][i]\n                temp_users.push({\n                    id: `${role.toLowerCase()}_list`,\n                    reference: t_user._id,\n                    label: `${Ucfirst(t_user.first_name)} ${Ucfirst(t_user.last_name)} | ${t_user.phone_number} | ${t_user.email}`\n                })\n            }\n            if (role === 'Patient') {\n                this.setState({ patient_list: temp_users })\n            }\n            else if (role === 'Doctor') {\n                this.setState({ doctor_list: temp_users })\n            }\n        }\n    }\n\n    populate_patients = (string) => {\n        if (string.length >= 3) {\n            this.render_users(string, 'Patient')\n        }\n        else {\n            this.setState({ patient_list: [] })\n        }\n    }\n    populate_doctors = (string) => {\n        if (string.length >= 3) {\n            this.render_users(string, 'Doctor')\n        }\n        else {\n            this.setState({ doctor_list: [] })\n        }\n    }\n\n    populate_appointments = async (data) => {\n        this.setState({ loading_status: true })\n        let res_visits = await this.request(data, APPOINTMENTS_SEARCH)\n        if (!res_visits) return\n        if (res_visits.status === 200) {\n            this.setState({\n                data: res_visits.data.payload.appointments,\n                total_records_on_this_page: res_visits.data.payload.appointments.length,\n                total_pages: res_visits.data.payload.total_pages,\n                loading_status: false\n            }, () => {\n                // this['element_7_ref'].scrollIntoView({ behavior: \"smooth\" });\n            })\n        }\n        else {\n            notify('info', '', res_visits.data.message)\n            this.setState({\n                data: null,\n                loading_status: false,\n                total_pages: 0,\n                total_records_on_this_page: 0\n            })\n        }\n    }\n\n    on_text_field_change = (e) => {\n        switch (e.target.id) {\n            case 'patient_checkbox_input':\n                this.setState({ patient_checkbox: e.target.checked })\n                break;\n            case 'doctor_checkbox_input':\n                this.setState({ doctor_checkbox: e.target.checked })\n                break;\n            default:\n                break;\n        }\n    }\n\n    on_from_date_change = (e) => {\n        if (e === '')\n            this.setState({ date_from: { value: '' } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_from: { value: configured_date } })\n            }\n        }\n    }\n\n    on_to_date_change = (e) => {\n        if (e === '')\n            this.setState({ date_to: { value: '' } })\n        else {\n            var configured_date = null;\n            try {\n                configured_date = e.format('ll');\n            }\n            catch (err) {\n                configured_date = ''\n            }\n            finally {\n                this.setState({ date_to: { value: configured_date } })\n            }\n        }\n    }\n\n    on_search_click = () => {\n        this.setState({\n            data: null,\n\n            today: moment().format('LT'),\n            page_number: 0,\n            total_records_on_this_page: 0,\n            total_pages: 0,\n        }, () => {\n            if (this.state.date_from.value !== '' && this.state.date_to.value !== '') {\n                const payload = {\n                    to_date: this.state.date_to.value,\n                    from_date: this.state.date_from.value,\n                    page: this.state.page_number\n                }\n\n                if (this.state.search_patient_id.value) {\n                    payload.patient_id = this.state.search_patient_id.value;\n                }\n                if (this.state.search_doctor_id.value) {\n                    payload.doctor_id = this.state.search_doctor_id.value;\n                }\n                if (this.state.search_status.value) {\n                    payload.appointment_status = this.state.search_status.value;\n                }\n\n                this.populate_appointments(payload)\n            }\n            else {\n                notify('error', '', 'Please specify a range of dates')\n            }\n        })\n\n    }\n\n    refresh_button_click = () => {\n        if (this.state.previous_query.data !== null) {\n            this.populate_appointments(this.state.previous_query.data)\n        }\n        else {\n            notify('info', '', 'Select dates and click search button to search')\n        }\n    }\n\n    request_user = (id) => {\n        this.setState({\n            user_preview_modal_visibility: true\n        }, () => {\n            UserSearchById(id).then(res => {\n                this.setState({ user_modal_props: res.data.payload.user })\n            }).catch(err => {\n                console.log('failed to fetch user')\n            })\n        })\n    }\n\n    renderDataInRows = () => {\n        return (this.state.data.map((booking, i) => {\n            // var random_color = classNameColors[Math.floor(Math.random() * classNameColors.length)]\n            // console.log('booking', booking)\n            const row_data = {\n                date_of_booking: <div ref={(el) => { this[`element_${i}_ref`] = el; }}>\n                    {booking.appointment_date}\n                    {/* {`${moment(booking.appointment_date, \"YYYY-MM-DDThh:mm:ss\").utc().format('LL')}`} */}\n                </div>,// date of booking\n                time_of_booking: <div>\n                    {moment(booking.appointment_time, \"HH:mm:ss\").format('LT') === 'Invalid date'? \"-\":moment(booking.appointment_time, \"HH:mm:ss\").format('LT')}\n                    {/* {`${moment(booking.appointment_date, \"YYYY-MM-DDThh:mm:ss\").format('LT')}`} */}\n                </div>,// time of booking\n                patient_name: <button className=\"btn btn-outline bg-teal-400 border-teal-400 text-teal-400 btn-sm btn-block zoomIn animated\"\n                    onClick={() => this.request_user(booking.patient['id'])}>\n                    {Ucfirst(booking.patient['first_name']) + ' ' + Ucfirst(booking.patient['last_name'])}\n                </button>,// patient_name\n                visit_reason: <span className=\"d-inline-block text-truncate \" style={{ maxWidth: \"150px\" }}>\n                    {booking.appointment_description}\n                </span>,\n                doctor_name: <button className=\"btn btn-outline-secondary btn-sm btn-block zoomIn animated\"\n                    onClick={() => this.request_user(booking.doctor['id'])}>\n                    {Ucfirst(booking.doctor['first_name']) + ' ' + Ucfirst(booking.doctor['last_name'])}\n                </button>,// doctor name\n                visit_status: <span className={`badge ${booking.appointment_status.info === 'waiting' ? 'badge-danger' : 'badge-primary'}`}>\n                    {booking.appointment_status.info}\n                </span>,\n                visit_total_charges: <Popup\n                    trigger={<div className=\"\">{booking.total_charges}</div>}\n                    flowing\n                    position='top center'\n                    content={\n                        <div className={`card card-body bg-teal-400 text-white shadow mb-1 py-1`}>\n                            <div className={``}>Consultancy: {booking.appointment_charges['consultancy']}</div>\n                            <div className={``}>Discount: {booking.appointment_charges['discount']}</div>\n                            <div className={``}>Follow up: {booking.appointment_charges['follow_up']}</div>\n                            <div className={``}>Procedures: {booking.appointment_charges['procedures']}</div>\n                            <div className={``}>Paid Amount: {booking.appointment_charges['paid']}</div>\n                        </div>\n                    }\n                />\n            }\n            const hidden_data = [\n                <h5 className=\"font-weight-semibold\">Reason of visit</h5>,\n                <blockquote className=\"blockquote blockquote-bordered py-2 pl-3 mb-0\">\n                    <p className=\"mb-1\">\n                        {booking.appointment_description}\n                    </p>\n                    <footer className=\"blockquote-footer\">Perscription</footer>\n                </blockquote>\n            ]\n            return (\n                <TableRow\n                    key={i}\n                    row_data={row_data}\n                    hidden_data={hidden_data}\n                    // hidden_header_elements={header_elements}\n                    // hidden_header_color={random_color}\n                    columns=\"8\" />\n            )\n        }))\n    }\n\n    on_previous_button_click = () => {\n        const to_request_page_number = this.state.page_number - 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n    on_page_number_click = (e) => {\n        const to_request_page_number = parseInt(e.target.innerHTML) - 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n    on_next_button_click = () => {\n        const to_request_page_number = this.state.page_number + 1\n        const updated = this.state.previous_query\n        updated.data.page = to_request_page_number\n        this.setState({ page_number: to_request_page_number }, () => {\n            this.populate_appointments(updated.data)\n        })\n    }\n\n\n\n    render() {\n        const Menu = props => {\n            return (\n                <components.Menu {...props} >\n                    <div className={`bg-light text-teal-400`} style={{ width: '400px' }}>\n                        {props.children}\n                    </div>\n                </components.Menu>\n            );\n        };\n        const loading = <div className={`mt-2`}>\n            <SkeletonTheme color=\"#000\" highlightColor=\"#f2f2f2\">\n                <Skeleton className=\"my-1\" count={1} height={40}/>\n            </SkeletonTheme>\n            <SkeletonTheme color=\"#ffffff\" highlightColor=\"#f2f2f2\">\n                <Skeleton className=\"my-1\" count={8} height={45}/>\n            </SkeletonTheme>\n        </div>\n        var table = ''\n        if (this.state.data != null) {\n            if (this.state.data.length > 0) {\n                table = <div className=\"table-responsive mt-2 card mb-0 pb-0\"><table className=\"table table-hover\">\n                    <thead className=\"table-header-bg bg-dark\">\n                        <tr>\n                            <th></th>\n                            <th>Date</th>\n                            <th>Time</th>\n                            <th>Patient</th>\n                            <th>Reasons</th>\n                            <th>Doctor</th>\n                            <th>Status</th>\n                            <th>Charges</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderDataInRows()}\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <td colSpan=\"4\">\n                                <div className=\"mt-2\">\n                                    <span className=\"font-weight-semibold h5\">Showing page {this.state.page_number + 1} of {this.state.total_pages} ...</span>\n                                </div>\n                            </td>\n                            <td colSpan=\"4\">\n                                <nav className=\"mt-2\">\n                                    <ul className=\"pagination justify-content-end\">\n                                        <li className={`page-item ${this.state.page_number === 0 ? 'disabled' : ''}`}>\n                                            <Link\n                                                className=\"page-link\"\n                                                to=\"#\"\n                                                onClick={this.on_previous_button_click}>\n                                                Previous\n                                            </Link>\n                                        </li>\n                                        {\n                                            this.state.total_pages > 1 ?\n                                                Array(this.state.total_pages).fill().map((item, i) => {\n                                                    return <li key={i} className=\"page-item\">\n                                                        <Link className=\"page-link\" to=\"#\" onClick={e => this.on_page_number_click(e)}>\n                                                            {i + 1}\n                                                        </Link>\n                                                    </li>\n                                                }) : ''\n                                        }\n                                        <li className={`page-item ${this.state.page_number === this.state.total_pages - 1 ? 'disabled' : ''}`}>\n                                            <Link className=\"page-link\" to=\"#\" onClick={this.on_next_button_click}>Next</Link>\n                                        </li>\n                                    </ul>\n                                </nav>\n                            </td>\n                        </tr>\n                    </tfoot>\n                </table></div>\n            }\n            else {\n                table = <div className=\"alert alert-info\" style={{ marginBottom: '0px' }}>\n                    <strong>Info!</strong> No visits found.\n                </div>;\n            }\n        }\n        else {\n            table = <div className=\"alert alert-info mt-2\" style={{ marginBottom: '0px' }}>\n                <strong>Info!</strong> No data found.\n            </div>;\n        }\n        return (\n            <Fragment>\n                <div className={`container-fluid`}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-9\">\n                            <div className={`row`}>\n                                <div className={`col-lg-6`}>\n                                    <Inputfield\n                                        field_type=\"select\"\n                                        heading=\"Patient\"\n                                        isClearable\n                                        parent_classes=\"mb-1\"\n                                        classNamePrefix={`form-control`}\n                                        id=\"patient_list\"\n                                        components={{ Menu }}\n                                        options={this.state.patient_list}\n                                        onInputChange={e => this.populate_patients(e)}\n                                        onChange={e => this.on_selected_changed(e, 'patient_list')}\n                                        placeholder=\"Search patients\"\n                                        styles={{\n                                            container: base => ({\n                                                ...base,\n                                                // backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\n                                                padding: 1,\n                                                borderRadius: 5\n                                            }),\n                                        }}\n                                    />\n                                </div>\n                                <div className={`col-lg-6`}>\n                                    <Inputfield\n                                        field_type=\"select\"\n                                        heading=\"Doctor\"\n                                        isClearable\n                                        parent_classes=\"mb-1\"\n                                        options={this.state.doctor_list}\n                                        onInputChange={e => this.populate_doctors(e)}\n                                        onChange={e => this.on_selected_changed(e, 'doctor_list')}\n                                        placeholder=\"Search Doctor\"\n                                        styles={{\n                                            container: base => ({\n                                                ...base,\n                                                // backgroundColor: this.state.appointment_doctor.error ? '#FF0000' : '',\n                                                padding: 1,\n                                                borderRadius: 5\n                                            }),\n                                        }}\n                                    />\n                                </div>\n                            </div>\n\n                        </div>\n                        <div className=\"col-lg-3\">\n                            <Inputfield\n                                field_type=\"select\"\n                                heading=\"Status\"\n                                className=\"\"\n                                parent_classes=\"mb-1\"\n                                options={PATIENT_VISIT_STATUSES}\n                                classNamePrefix={``}\n                                placeholder=\"Select Status\"\n                                isClearable\n                                id=\"status_selection\"\n                                onChange={e => this.on_selected_changed(e, 'status_list')}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        \n                        <div className=\"col-lg-9\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-3\">\n                                    <Inputfield\n                                        field_type=\"date-time\"\n                                        heading=\"From\"\n                                        id=\"dob_text_input\"\n                                        onChange={this.on_from_date_change}\n                                        className=\"clock_datatime_picker form-control\"\n                                        inputProps={{ placeholder: 'Where from', className: 'border-0 w-100' }}\n                                        input={true}\n                                        dateFormat={'ll'}\n                                        timeFormat={false}\n                                        closeOnSelect={true}\n                                        value={this.state.date_from.value}\n                                    />\n\n                                </div>\n                                <div className=\"col-lg-3\">\n                                    <Inputfield\n                                        field_type=\"date-time\"\n                                        heading=\"To\"\n                                        id=\"dob_text_input\"\n                                        onChange={this.on_to_date_change}\n                                        className=\"clock_datatime_picker form-control \"\n                                        inputProps={{ placeholder: 'Where to', className: 'border-0 w-100' }}\n                                        input={true}\n                                        dateFormat={'ll'}\n                                        timeFormat={false}\n                                        closeOnSelect={true}\n                                        value={this.state.date_to.value}\n                                    />\n                                </div>\n                                <div className={`col-lg-3 d-flex align-items-end mb-3 pb-1`}>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn bg-dark btn-block btn-sm btn-labeled btn-labeled-right pr-5\"\n                                        style={{ textTransform: \"inherit\" }}\n                                        onClick={() => this.setState({\n                                            date_from: { value: '' }, date_to: { value: '' },\n                                            patient_checkbox: false,\n                                            doctor_checkbox: false,\n                                        })}>\n                                        <b><i className=\"icon-reset\"></i></b>\n                                                Reset filters\n                                            </button>\n                                </div>\n                                <div className={`col-lg-3 d-flex align-items-end mb-3 pb-1`}>\n                                    <button\n                                        type=\"button\"\n                                        className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5 btn-block\"\n                                        style={{ textTransform: \"inherit\" }}\n                                        onClick={this.refresh_button_click}>\n                                        <b><i className=\"icon-reset\"></i></b>\n                                                Refresh\n                                            </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={`col-lg-3 d-flex align-items-end mb-3 pb-1`}>\n                            <button\n                                type=\"button\"\n                                className=\"btn bg-teal-400 btn-labeled btn-labeled-right btn-sm pr-5 btn-block \"\n                                style={{ textTransform: \"inherit\" }}\n                                onClick={this.on_search_click}>\n                                <b><i className=\"icon-search4\"></i></b>\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                { this.state.loading_status ? loading : table}\n                <UserPreviewModal visibility={this.state.user_preview_modal_visibility}\n                    modal_props={this.state.user_modal_props}\n                    on_click_back_drop={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })}\n                    on_click_cancel={() => this.setState({ user_preview_modal_visibility: false, user_modal_props: null })} />\n            </Fragment >\n        )\n    }\n}\nexport default connect(null, { set_active_page })(withRouter(AllAppointments));","import React, { useState, useEffect } from 'react';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport * as RC from 'router/constants';\nimport ProtectedRoute from 'router/protected_routes';\nimport { ToastContainer } from 'react-toastify';\nimport * as LAYOUTS from 'layouts';\nimport Container from 'components/container';\n\nconst LoginRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            render={props => !localStorage.getItem('user') ?\n                <Component {...props} /> :\n                <Redirect to={{ pathname: RC.BASE_URL, state: { from: props.location } }} />\n            }\n        />\n    );\n}\n\nconst NO_CONTAINER_PATHS = [\n    RC.LOGIN_URL,\n    RC.REGISTER_URL,\n    RC.FORGOT_PASSWORD,\n]\n\nfunction RouterX() {\n    const location = useLocation();\n    const [state_container, set_state_container] = useState(false);\n\n    useEffect(() => {\n        if (NO_CONTAINER_PATHS.includes(location.pathname)) {\n            set_state_container(false);\n        }\n        else {\n            if (localStorage.getItem('user')){\n                set_state_container(true);\n            }\n            else {\n                set_state_container(false);\n            }\n        }\n\n    }, [location])\n    return (\n        <Container container_type={state_container}>\n            <Switch>\n                <LoginRoute exact path={RC.LOGIN_URL} component={LAYOUTS.Login} />\n                <Route exact path={RC.REGISTER_URL} component={LAYOUTS.Register} />\n                <Route exact path={RC.FORGOT_PASSWORD} component={LAYOUTS.ForgotPassword} />\n                <ProtectedRoute exact path={RC.BASE_URL} component={LAYOUTS.Home} />\n                <ProtectedRoute exact path={RC.PROFILE} component={LAYOUTS.Profile} />\n                <ProtectedRoute exact path={RC.RECEPTION_TODAYSPATIIENT} component={LAYOUTS.TodaysPatient} />\n                <ProtectedRoute exact path={RC.RECEPTION_VISITS} component={LAYOUTS.AllAppointments} />\n                <ProtectedRoute exact path={RC.RECEPTION_PROCEDURES} component={LAYOUTS.Procedures} />\n                <ProtectedRoute exact path={RC.SEARCH_DOCTORS} component={LAYOUTS.Doctors} />\n                <ProtectedRoute exact path={RC.PAYMENTS} component={LAYOUTS.Payments} />\n                <ProtectedRoute exact path={RC.SETTINGS} component={LAYOUTS.Settings} />\n            </Switch>\n            <ToastContainer hideProgressBar />\n        </Container>\n    );\n}\nexport default RouterX;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport RouterX from './router';\n\nfunction App() {\n\tconsole.log('app.js working')\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t<RouterX />\n\t\t</BrowserRouter>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from 'redux/store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/LOGO.21ff2f94.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.59e6f5b8.jpg\";"],"sourceRoot":""}